
/**
 * Client
**/

import * as runtime from './runtime/index';
declare const prisma: unique symbol
export type PrismaPromise<A> = Promise<A> & {[prisma]: true}
type UnwrapPromise<P extends any> = P extends Promise<infer R> ? R : P
type UnwrapTuple<Tuple extends readonly unknown[]> = {
  [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>
};


/**
 * Model TKEYVALUES
 * 
 */
export type TKEYVALUES = {
  TABLENAME: string
  KEYVALUE: number
}

/**
 * Model TUPDATEVALUES
 * 
 */
export type TUPDATEVALUES = {
  TABLENAME: string
  UPDATEVALUE: number
}

/**
 * Model TCHRONOMESSAGES_HEAT1
 * 
 */
export type TCHRONOMESSAGES_HEAT1 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_TRANSPONDER: string | null
  C_CANAL: string | null
  C_MESSAGE: string | null
}

/**
 * Model TCHRONOMESSAGES_HEAT2
 * 
 */
export type TCHRONOMESSAGES_HEAT2 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_TRANSPONDER: string | null
  C_CANAL: string | null
  C_MESSAGE: string | null
}

/**
 * Model TCHRONOMESSAGES_HEAT3
 * 
 */
export type TCHRONOMESSAGES_HEAT3 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_TRANSPONDER: string | null
  C_CANAL: string | null
  C_MESSAGE: string | null
}

/**
 * Model TCHRONOMESSAGES_HEAT4
 * 
 */
export type TCHRONOMESSAGES_HEAT4 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_TRANSPONDER: string | null
  C_CANAL: string | null
  C_MESSAGE: string | null
}

/**
 * Model TCHRONOMESSAGES_HEAT5
 * 
 */
export type TCHRONOMESSAGES_HEAT5 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_TRANSPONDER: string | null
  C_CANAL: string | null
  C_MESSAGE: string | null
}

/**
 * Model TCHRONOMESSAGES_HEAT6
 * 
 */
export type TCHRONOMESSAGES_HEAT6 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_TRANSPONDER: string | null
  C_CANAL: string | null
  C_MESSAGE: string | null
}

/**
 * Model TCHRONOMESSAGES_HEAT7
 * 
 */
export type TCHRONOMESSAGES_HEAT7 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_TRANSPONDER: string | null
  C_CANAL: string | null
  C_MESSAGE: string | null
}

/**
 * Model TCHRONOMESSAGES_HEAT8
 * 
 */
export type TCHRONOMESSAGES_HEAT8 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_TRANSPONDER: string | null
  C_CANAL: string | null
  C_MESSAGE: string | null
}

/**
 * Model TCHRONOMESSAGES_HEAT9
 * 
 */
export type TCHRONOMESSAGES_HEAT9 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_TRANSPONDER: string | null
  C_CANAL: string | null
  C_MESSAGE: string | null
}

/**
 * Model TSTARTLIST_HEAT1
 * 
 */
export type TSTARTLIST_HEAT1 = {
  C_LINE: number
  C_NUM: number | null
  C_START: number | null
}

/**
 * Model TSTARTLIST_HEAT2
 * 
 */
export type TSTARTLIST_HEAT2 = {
  C_LINE: number
  C_NUM: number | null
  C_START: number | null
}

/**
 * Model TSTARTLIST_HEAT3
 * 
 */
export type TSTARTLIST_HEAT3 = {
  C_LINE: number
  C_NUM: number | null
  C_START: number | null
}

/**
 * Model TSTARTLIST_HEAT4
 * 
 */
export type TSTARTLIST_HEAT4 = {
  C_LINE: number
  C_NUM: number | null
  C_START: number | null
}

/**
 * Model TSTARTLIST_HEAT5
 * 
 */
export type TSTARTLIST_HEAT5 = {
  C_LINE: number
  C_NUM: number | null
  C_START: number | null
}

/**
 * Model TSTARTLIST_HEAT6
 * 
 */
export type TSTARTLIST_HEAT6 = {
  C_LINE: number
  C_NUM: number | null
  C_START: number | null
}

/**
 * Model TSTARTLIST_HEAT7
 * 
 */
export type TSTARTLIST_HEAT7 = {
  C_LINE: number
  C_NUM: number | null
  C_START: number | null
}

/**
 * Model TSTARTLIST_HEAT8
 * 
 */
export type TSTARTLIST_HEAT8 = {
  C_LINE: number
  C_NUM: number | null
  C_START: number | null
}

/**
 * Model TSTARTLIST_HEAT9
 * 
 */
export type TSTARTLIST_HEAT9 = {
  C_LINE: number
  C_NUM: number | null
  C_START: number | null
}

/**
 * Model TTIMEINFOS_HEAT1
 * 
 */
export type TTIMEINFOS_HEAT1 = {
  C_NUM: number
  C_STATUS: number | null
  C_TIME: number | null
  C_PENALTY: number | null
  C_INTER1: number | null
  C_INTER2: number | null
  C_INTER3: number | null
  C_INTER4: number | null
  C_INTER5: number | null
  C_INTER6: number | null
  C_INTER7: number | null
  C_INTER8: number | null
  C_INTER9: number | null
  C_SPEED1: number | null
  C_SPEED2: number | null
  C_SPEED3: number | null
  C_SPEED4: number | null
  C_SPEED5: number | null
  C_SPEED6: number | null
  C_SPEED7: number | null
  C_SPEED8: number | null
  C_SPEED9: number | null
  C_DATA1: number | null
  C_DATA2: number | null
  C_DATA3: number | null
  C_DATA4: number | null
  C_DATA5: number | null
  C_DATA6: number | null
  C_DATA7: number | null
  C_DATA8: number | null
  C_REASON: string | null
}

/**
 * Model TTIMEINFOS_HEAT2
 * 
 */
export type TTIMEINFOS_HEAT2 = {
  C_NUM: number
  C_STATUS: number | null
  C_TIME: number | null
  C_PENALTY: number | null
  C_INTER1: number | null
  C_INTER2: number | null
  C_INTER3: number | null
  C_INTER4: number | null
  C_INTER5: number | null
  C_INTER6: number | null
  C_INTER7: number | null
  C_INTER8: number | null
  C_INTER9: number | null
  C_SPEED1: number | null
  C_SPEED2: number | null
  C_SPEED3: number | null
  C_SPEED4: number | null
  C_SPEED5: number | null
  C_SPEED6: number | null
  C_SPEED7: number | null
  C_SPEED8: number | null
  C_SPEED9: number | null
  C_DATA1: number | null
  C_DATA2: number | null
  C_DATA3: number | null
  C_DATA4: number | null
  C_DATA5: number | null
  C_DATA6: number | null
  C_DATA7: number | null
  C_DATA8: number | null
  C_REASON: string | null
}

/**
 * Model TTIMEINFOS_HEAT3
 * 
 */
export type TTIMEINFOS_HEAT3 = {
  C_NUM: number
  C_STATUS: number | null
  C_TIME: number | null
  C_PENALTY: number | null
  C_INTER1: number | null
  C_INTER2: number | null
  C_INTER3: number | null
  C_INTER4: number | null
  C_INTER5: number | null
  C_INTER6: number | null
  C_INTER7: number | null
  C_INTER8: number | null
  C_INTER9: number | null
  C_SPEED1: number | null
  C_SPEED2: number | null
  C_SPEED3: number | null
  C_SPEED4: number | null
  C_SPEED5: number | null
  C_SPEED6: number | null
  C_SPEED7: number | null
  C_SPEED8: number | null
  C_SPEED9: number | null
  C_DATA1: number | null
  C_DATA2: number | null
  C_DATA3: number | null
  C_DATA4: number | null
  C_DATA5: number | null
  C_DATA6: number | null
  C_DATA7: number | null
  C_DATA8: number | null
  C_REASON: string | null
}

/**
 * Model TTIMEINFOS_HEAT4
 * 
 */
export type TTIMEINFOS_HEAT4 = {
  C_NUM: number
  C_STATUS: number | null
  C_TIME: number | null
  C_PENALTY: number | null
  C_INTER1: number | null
  C_INTER2: number | null
  C_INTER3: number | null
  C_INTER4: number | null
  C_INTER5: number | null
  C_INTER6: number | null
  C_INTER7: number | null
  C_INTER8: number | null
  C_INTER9: number | null
  C_SPEED1: number | null
  C_SPEED2: number | null
  C_SPEED3: number | null
  C_SPEED4: number | null
  C_SPEED5: number | null
  C_SPEED6: number | null
  C_SPEED7: number | null
  C_SPEED8: number | null
  C_SPEED9: number | null
  C_DATA1: number | null
  C_DATA2: number | null
  C_DATA3: number | null
  C_DATA4: number | null
  C_DATA5: number | null
  C_DATA6: number | null
  C_DATA7: number | null
  C_DATA8: number | null
  C_REASON: string | null
}

/**
 * Model TTIMEINFOS_HEAT5
 * 
 */
export type TTIMEINFOS_HEAT5 = {
  C_NUM: number
  C_STATUS: number | null
  C_TIME: number | null
  C_PENALTY: number | null
  C_INTER1: number | null
  C_INTER2: number | null
  C_INTER3: number | null
  C_INTER4: number | null
  C_INTER5: number | null
  C_INTER6: number | null
  C_INTER7: number | null
  C_INTER8: number | null
  C_INTER9: number | null
  C_SPEED1: number | null
  C_SPEED2: number | null
  C_SPEED3: number | null
  C_SPEED4: number | null
  C_SPEED5: number | null
  C_SPEED6: number | null
  C_SPEED7: number | null
  C_SPEED8: number | null
  C_SPEED9: number | null
  C_DATA1: number | null
  C_DATA2: number | null
  C_DATA3: number | null
  C_DATA4: number | null
  C_DATA5: number | null
  C_DATA6: number | null
  C_DATA7: number | null
  C_DATA8: number | null
  C_REASON: string | null
}

/**
 * Model TTIMEINFOS_HEAT6
 * 
 */
export type TTIMEINFOS_HEAT6 = {
  C_NUM: number
  C_STATUS: number | null
  C_TIME: number | null
  C_PENALTY: number | null
  C_INTER1: number | null
  C_INTER2: number | null
  C_INTER3: number | null
  C_INTER4: number | null
  C_INTER5: number | null
  C_INTER6: number | null
  C_INTER7: number | null
  C_INTER8: number | null
  C_INTER9: number | null
  C_SPEED1: number | null
  C_SPEED2: number | null
  C_SPEED3: number | null
  C_SPEED4: number | null
  C_SPEED5: number | null
  C_SPEED6: number | null
  C_SPEED7: number | null
  C_SPEED8: number | null
  C_SPEED9: number | null
  C_DATA1: number | null
  C_DATA2: number | null
  C_DATA3: number | null
  C_DATA4: number | null
  C_DATA5: number | null
  C_DATA6: number | null
  C_DATA7: number | null
  C_DATA8: number | null
  C_REASON: string | null
}

/**
 * Model TTIMEINFOS_HEAT7
 * 
 */
export type TTIMEINFOS_HEAT7 = {
  C_NUM: number
  C_STATUS: number | null
  C_TIME: number | null
  C_PENALTY: number | null
  C_INTER1: number | null
  C_INTER2: number | null
  C_INTER3: number | null
  C_INTER4: number | null
  C_INTER5: number | null
  C_INTER6: number | null
  C_INTER7: number | null
  C_INTER8: number | null
  C_INTER9: number | null
  C_SPEED1: number | null
  C_SPEED2: number | null
  C_SPEED3: number | null
  C_SPEED4: number | null
  C_SPEED5: number | null
  C_SPEED6: number | null
  C_SPEED7: number | null
  C_SPEED8: number | null
  C_SPEED9: number | null
  C_DATA1: number | null
  C_DATA2: number | null
  C_DATA3: number | null
  C_DATA4: number | null
  C_DATA5: number | null
  C_DATA6: number | null
  C_DATA7: number | null
  C_DATA8: number | null
  C_REASON: string | null
}

/**
 * Model TTIMEINFOS_HEAT8
 * 
 */
export type TTIMEINFOS_HEAT8 = {
  C_NUM: number
  C_STATUS: number | null
  C_TIME: number | null
  C_PENALTY: number | null
  C_INTER1: number | null
  C_INTER2: number | null
  C_INTER3: number | null
  C_INTER4: number | null
  C_INTER5: number | null
  C_INTER6: number | null
  C_INTER7: number | null
  C_INTER8: number | null
  C_INTER9: number | null
  C_SPEED1: number | null
  C_SPEED2: number | null
  C_SPEED3: number | null
  C_SPEED4: number | null
  C_SPEED5: number | null
  C_SPEED6: number | null
  C_SPEED7: number | null
  C_SPEED8: number | null
  C_SPEED9: number | null
  C_DATA1: number | null
  C_DATA2: number | null
  C_DATA3: number | null
  C_DATA4: number | null
  C_DATA5: number | null
  C_DATA6: number | null
  C_DATA7: number | null
  C_DATA8: number | null
  C_REASON: string | null
}

/**
 * Model TTIMEINFOS_HEAT9
 * 
 */
export type TTIMEINFOS_HEAT9 = {
  C_NUM: number
  C_STATUS: number | null
  C_TIME: number | null
  C_PENALTY: number | null
  C_INTER1: number | null
  C_INTER2: number | null
  C_INTER3: number | null
  C_INTER4: number | null
  C_INTER5: number | null
  C_INTER6: number | null
  C_INTER7: number | null
  C_INTER8: number | null
  C_INTER9: number | null
  C_SPEED1: number | null
  C_SPEED2: number | null
  C_SPEED3: number | null
  C_SPEED4: number | null
  C_SPEED5: number | null
  C_SPEED6: number | null
  C_SPEED7: number | null
  C_SPEED8: number | null
  C_SPEED9: number | null
  C_DATA1: number | null
  C_DATA2: number | null
  C_DATA3: number | null
  C_DATA4: number | null
  C_DATA5: number | null
  C_DATA6: number | null
  C_DATA7: number | null
  C_DATA8: number | null
  C_REASON: string | null
}

/**
 * Model TTIMERECORDS_HEAT1_FINISH
 * 
 */
export type TTIMERECORDS_HEAT1_FINISH = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT1_INTER1
 * 
 */
export type TTIMERECORDS_HEAT1_INTER1 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT1_INTER2
 * 
 */
export type TTIMERECORDS_HEAT1_INTER2 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT1_START
 * 
 */
export type TTIMERECORDS_HEAT1_START = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT2_FINISH
 * 
 */
export type TTIMERECORDS_HEAT2_FINISH = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT2_INTER1
 * 
 */
export type TTIMERECORDS_HEAT2_INTER1 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT2_INTER2
 * 
 */
export type TTIMERECORDS_HEAT2_INTER2 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT2_START
 * 
 */
export type TTIMERECORDS_HEAT2_START = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT3_FINISH
 * 
 */
export type TTIMERECORDS_HEAT3_FINISH = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT3_INTER1
 * 
 */
export type TTIMERECORDS_HEAT3_INTER1 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT3_INTER2
 * 
 */
export type TTIMERECORDS_HEAT3_INTER2 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT3_START
 * 
 */
export type TTIMERECORDS_HEAT3_START = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT4_FINISH
 * 
 */
export type TTIMERECORDS_HEAT4_FINISH = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT4_INTER1
 * 
 */
export type TTIMERECORDS_HEAT4_INTER1 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT4_INTER2
 * 
 */
export type TTIMERECORDS_HEAT4_INTER2 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT4_START
 * 
 */
export type TTIMERECORDS_HEAT4_START = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT5_FINISH
 * 
 */
export type TTIMERECORDS_HEAT5_FINISH = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT5_INTER1
 * 
 */
export type TTIMERECORDS_HEAT5_INTER1 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT5_INTER2
 * 
 */
export type TTIMERECORDS_HEAT5_INTER2 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT5_START
 * 
 */
export type TTIMERECORDS_HEAT5_START = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT6_FINISH
 * 
 */
export type TTIMERECORDS_HEAT6_FINISH = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT6_INTER1
 * 
 */
export type TTIMERECORDS_HEAT6_INTER1 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT6_INTER2
 * 
 */
export type TTIMERECORDS_HEAT6_INTER2 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT6_START
 * 
 */
export type TTIMERECORDS_HEAT6_START = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT7_FINISH
 * 
 */
export type TTIMERECORDS_HEAT7_FINISH = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT7_INTER1
 * 
 */
export type TTIMERECORDS_HEAT7_INTER1 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT7_INTER2
 * 
 */
export type TTIMERECORDS_HEAT7_INTER2 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT7_START
 * 
 */
export type TTIMERECORDS_HEAT7_START = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT8_FINISH
 * 
 */
export type TTIMERECORDS_HEAT8_FINISH = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT8_INTER1
 * 
 */
export type TTIMERECORDS_HEAT8_INTER1 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT8_INTER2
 * 
 */
export type TTIMERECORDS_HEAT8_INTER2 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT8_START
 * 
 */
export type TTIMERECORDS_HEAT8_START = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT9_FINISH
 * 
 */
export type TTIMERECORDS_HEAT9_FINISH = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT9_INTER1
 * 
 */
export type TTIMERECORDS_HEAT9_INTER1 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT9_INTER2
 * 
 */
export type TTIMERECORDS_HEAT9_INTER2 = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}

/**
 * Model TTIMERECORDS_HEAT9_START
 * 
 */
export type TTIMERECORDS_HEAT9_START = {
  C_LINE: number
  C_NUM: number | null
  C_STATUS: number | null
  C_HOUR1: string | null
  C_HOUR2: string | null
  C_SPEED: number | null
  C_LAP: number | null
  C_TRANSPONDER_NUM: string | null
  C_TRANSPONDER_INFOS: number | null
  C_INFO1: number | null
  C_INFO2: number | null
}


/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more TKEYVALUES
 * const tKEYVALUES = await prisma.tKEYVALUES.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  GlobalReject = 'rejectOnNotFound' extends keyof T
    ? T['rejectOnNotFound']
    : false
      > {
      /**
       * @private
       */
      private fetcher;
      /**
       * @private
       */
      private readonly dmmf;
      /**
       * @private
       */
      private connectionPromise?;
      /**
       * @private
       */
      private disconnectionPromise?;
      /**
       * @private
       */
      private readonly engineConfig;
      /**
       * @private
       */
      private readonly measurePerformance;

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more TKEYVALUES
   * const tKEYVALUES = await prisma.tKEYVALUES.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends (U | 'beforeExit')>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : V extends 'beforeExit' ? () => Promise<void> : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): Promise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): Promise<void>;

  /**
   * Add a middleware
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends PrismaPromise<any>[]>(arg: [...P]): Promise<UnwrapTuple<P>>;

      /**
   * `prisma.tKEYVALUES`: Exposes CRUD operations for the **TKEYVALUES** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TKEYVALUES
    * const tKEYVALUES = await prisma.tKEYVALUES.findMany()
    * ```
    */
  get tKEYVALUES(): Prisma.TKEYVALUESDelegate<GlobalReject>;

  /**
   * `prisma.tUPDATEVALUES`: Exposes CRUD operations for the **TUPDATEVALUES** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TUPDATEVALUES
    * const tUPDATEVALUES = await prisma.tUPDATEVALUES.findMany()
    * ```
    */
  get tUPDATEVALUES(): Prisma.TUPDATEVALUESDelegate<GlobalReject>;

  /**
   * `prisma.tCHRONOMESSAGES_HEAT1`: Exposes CRUD operations for the **TCHRONOMESSAGES_HEAT1** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TCHRONOMESSAGES_HEAT1s
    * const tCHRONOMESSAGES_HEAT1s = await prisma.tCHRONOMESSAGES_HEAT1.findMany()
    * ```
    */
  get tCHRONOMESSAGES_HEAT1(): Prisma.TCHRONOMESSAGES_HEAT1Delegate<GlobalReject>;

  /**
   * `prisma.tCHRONOMESSAGES_HEAT2`: Exposes CRUD operations for the **TCHRONOMESSAGES_HEAT2** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TCHRONOMESSAGES_HEAT2s
    * const tCHRONOMESSAGES_HEAT2s = await prisma.tCHRONOMESSAGES_HEAT2.findMany()
    * ```
    */
  get tCHRONOMESSAGES_HEAT2(): Prisma.TCHRONOMESSAGES_HEAT2Delegate<GlobalReject>;

  /**
   * `prisma.tCHRONOMESSAGES_HEAT3`: Exposes CRUD operations for the **TCHRONOMESSAGES_HEAT3** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TCHRONOMESSAGES_HEAT3s
    * const tCHRONOMESSAGES_HEAT3s = await prisma.tCHRONOMESSAGES_HEAT3.findMany()
    * ```
    */
  get tCHRONOMESSAGES_HEAT3(): Prisma.TCHRONOMESSAGES_HEAT3Delegate<GlobalReject>;

  /**
   * `prisma.tCHRONOMESSAGES_HEAT4`: Exposes CRUD operations for the **TCHRONOMESSAGES_HEAT4** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TCHRONOMESSAGES_HEAT4s
    * const tCHRONOMESSAGES_HEAT4s = await prisma.tCHRONOMESSAGES_HEAT4.findMany()
    * ```
    */
  get tCHRONOMESSAGES_HEAT4(): Prisma.TCHRONOMESSAGES_HEAT4Delegate<GlobalReject>;

  /**
   * `prisma.tCHRONOMESSAGES_HEAT5`: Exposes CRUD operations for the **TCHRONOMESSAGES_HEAT5** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TCHRONOMESSAGES_HEAT5s
    * const tCHRONOMESSAGES_HEAT5s = await prisma.tCHRONOMESSAGES_HEAT5.findMany()
    * ```
    */
  get tCHRONOMESSAGES_HEAT5(): Prisma.TCHRONOMESSAGES_HEAT5Delegate<GlobalReject>;

  /**
   * `prisma.tCHRONOMESSAGES_HEAT6`: Exposes CRUD operations for the **TCHRONOMESSAGES_HEAT6** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TCHRONOMESSAGES_HEAT6s
    * const tCHRONOMESSAGES_HEAT6s = await prisma.tCHRONOMESSAGES_HEAT6.findMany()
    * ```
    */
  get tCHRONOMESSAGES_HEAT6(): Prisma.TCHRONOMESSAGES_HEAT6Delegate<GlobalReject>;

  /**
   * `prisma.tCHRONOMESSAGES_HEAT7`: Exposes CRUD operations for the **TCHRONOMESSAGES_HEAT7** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TCHRONOMESSAGES_HEAT7s
    * const tCHRONOMESSAGES_HEAT7s = await prisma.tCHRONOMESSAGES_HEAT7.findMany()
    * ```
    */
  get tCHRONOMESSAGES_HEAT7(): Prisma.TCHRONOMESSAGES_HEAT7Delegate<GlobalReject>;

  /**
   * `prisma.tCHRONOMESSAGES_HEAT8`: Exposes CRUD operations for the **TCHRONOMESSAGES_HEAT8** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TCHRONOMESSAGES_HEAT8s
    * const tCHRONOMESSAGES_HEAT8s = await prisma.tCHRONOMESSAGES_HEAT8.findMany()
    * ```
    */
  get tCHRONOMESSAGES_HEAT8(): Prisma.TCHRONOMESSAGES_HEAT8Delegate<GlobalReject>;

  /**
   * `prisma.tCHRONOMESSAGES_HEAT9`: Exposes CRUD operations for the **TCHRONOMESSAGES_HEAT9** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TCHRONOMESSAGES_HEAT9s
    * const tCHRONOMESSAGES_HEAT9s = await prisma.tCHRONOMESSAGES_HEAT9.findMany()
    * ```
    */
  get tCHRONOMESSAGES_HEAT9(): Prisma.TCHRONOMESSAGES_HEAT9Delegate<GlobalReject>;

  /**
   * `prisma.tSTARTLIST_HEAT1`: Exposes CRUD operations for the **TSTARTLIST_HEAT1** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TSTARTLIST_HEAT1s
    * const tSTARTLIST_HEAT1s = await prisma.tSTARTLIST_HEAT1.findMany()
    * ```
    */
  get tSTARTLIST_HEAT1(): Prisma.TSTARTLIST_HEAT1Delegate<GlobalReject>;

  /**
   * `prisma.tSTARTLIST_HEAT2`: Exposes CRUD operations for the **TSTARTLIST_HEAT2** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TSTARTLIST_HEAT2s
    * const tSTARTLIST_HEAT2s = await prisma.tSTARTLIST_HEAT2.findMany()
    * ```
    */
  get tSTARTLIST_HEAT2(): Prisma.TSTARTLIST_HEAT2Delegate<GlobalReject>;

  /**
   * `prisma.tSTARTLIST_HEAT3`: Exposes CRUD operations for the **TSTARTLIST_HEAT3** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TSTARTLIST_HEAT3s
    * const tSTARTLIST_HEAT3s = await prisma.tSTARTLIST_HEAT3.findMany()
    * ```
    */
  get tSTARTLIST_HEAT3(): Prisma.TSTARTLIST_HEAT3Delegate<GlobalReject>;

  /**
   * `prisma.tSTARTLIST_HEAT4`: Exposes CRUD operations for the **TSTARTLIST_HEAT4** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TSTARTLIST_HEAT4s
    * const tSTARTLIST_HEAT4s = await prisma.tSTARTLIST_HEAT4.findMany()
    * ```
    */
  get tSTARTLIST_HEAT4(): Prisma.TSTARTLIST_HEAT4Delegate<GlobalReject>;

  /**
   * `prisma.tSTARTLIST_HEAT5`: Exposes CRUD operations for the **TSTARTLIST_HEAT5** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TSTARTLIST_HEAT5s
    * const tSTARTLIST_HEAT5s = await prisma.tSTARTLIST_HEAT5.findMany()
    * ```
    */
  get tSTARTLIST_HEAT5(): Prisma.TSTARTLIST_HEAT5Delegate<GlobalReject>;

  /**
   * `prisma.tSTARTLIST_HEAT6`: Exposes CRUD operations for the **TSTARTLIST_HEAT6** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TSTARTLIST_HEAT6s
    * const tSTARTLIST_HEAT6s = await prisma.tSTARTLIST_HEAT6.findMany()
    * ```
    */
  get tSTARTLIST_HEAT6(): Prisma.TSTARTLIST_HEAT6Delegate<GlobalReject>;

  /**
   * `prisma.tSTARTLIST_HEAT7`: Exposes CRUD operations for the **TSTARTLIST_HEAT7** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TSTARTLIST_HEAT7s
    * const tSTARTLIST_HEAT7s = await prisma.tSTARTLIST_HEAT7.findMany()
    * ```
    */
  get tSTARTLIST_HEAT7(): Prisma.TSTARTLIST_HEAT7Delegate<GlobalReject>;

  /**
   * `prisma.tSTARTLIST_HEAT8`: Exposes CRUD operations for the **TSTARTLIST_HEAT8** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TSTARTLIST_HEAT8s
    * const tSTARTLIST_HEAT8s = await prisma.tSTARTLIST_HEAT8.findMany()
    * ```
    */
  get tSTARTLIST_HEAT8(): Prisma.TSTARTLIST_HEAT8Delegate<GlobalReject>;

  /**
   * `prisma.tSTARTLIST_HEAT9`: Exposes CRUD operations for the **TSTARTLIST_HEAT9** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TSTARTLIST_HEAT9s
    * const tSTARTLIST_HEAT9s = await prisma.tSTARTLIST_HEAT9.findMany()
    * ```
    */
  get tSTARTLIST_HEAT9(): Prisma.TSTARTLIST_HEAT9Delegate<GlobalReject>;

  /**
   * `prisma.tTIMEINFOS_HEAT1`: Exposes CRUD operations for the **TTIMEINFOS_HEAT1** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMEINFOS_HEAT1s
    * const tTIMEINFOS_HEAT1s = await prisma.tTIMEINFOS_HEAT1.findMany()
    * ```
    */
  get tTIMEINFOS_HEAT1(): Prisma.TTIMEINFOS_HEAT1Delegate<GlobalReject>;

  /**
   * `prisma.tTIMEINFOS_HEAT2`: Exposes CRUD operations for the **TTIMEINFOS_HEAT2** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMEINFOS_HEAT2s
    * const tTIMEINFOS_HEAT2s = await prisma.tTIMEINFOS_HEAT2.findMany()
    * ```
    */
  get tTIMEINFOS_HEAT2(): Prisma.TTIMEINFOS_HEAT2Delegate<GlobalReject>;

  /**
   * `prisma.tTIMEINFOS_HEAT3`: Exposes CRUD operations for the **TTIMEINFOS_HEAT3** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMEINFOS_HEAT3s
    * const tTIMEINFOS_HEAT3s = await prisma.tTIMEINFOS_HEAT3.findMany()
    * ```
    */
  get tTIMEINFOS_HEAT3(): Prisma.TTIMEINFOS_HEAT3Delegate<GlobalReject>;

  /**
   * `prisma.tTIMEINFOS_HEAT4`: Exposes CRUD operations for the **TTIMEINFOS_HEAT4** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMEINFOS_HEAT4s
    * const tTIMEINFOS_HEAT4s = await prisma.tTIMEINFOS_HEAT4.findMany()
    * ```
    */
  get tTIMEINFOS_HEAT4(): Prisma.TTIMEINFOS_HEAT4Delegate<GlobalReject>;

  /**
   * `prisma.tTIMEINFOS_HEAT5`: Exposes CRUD operations for the **TTIMEINFOS_HEAT5** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMEINFOS_HEAT5s
    * const tTIMEINFOS_HEAT5s = await prisma.tTIMEINFOS_HEAT5.findMany()
    * ```
    */
  get tTIMEINFOS_HEAT5(): Prisma.TTIMEINFOS_HEAT5Delegate<GlobalReject>;

  /**
   * `prisma.tTIMEINFOS_HEAT6`: Exposes CRUD operations for the **TTIMEINFOS_HEAT6** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMEINFOS_HEAT6s
    * const tTIMEINFOS_HEAT6s = await prisma.tTIMEINFOS_HEAT6.findMany()
    * ```
    */
  get tTIMEINFOS_HEAT6(): Prisma.TTIMEINFOS_HEAT6Delegate<GlobalReject>;

  /**
   * `prisma.tTIMEINFOS_HEAT7`: Exposes CRUD operations for the **TTIMEINFOS_HEAT7** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMEINFOS_HEAT7s
    * const tTIMEINFOS_HEAT7s = await prisma.tTIMEINFOS_HEAT7.findMany()
    * ```
    */
  get tTIMEINFOS_HEAT7(): Prisma.TTIMEINFOS_HEAT7Delegate<GlobalReject>;

  /**
   * `prisma.tTIMEINFOS_HEAT8`: Exposes CRUD operations for the **TTIMEINFOS_HEAT8** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMEINFOS_HEAT8s
    * const tTIMEINFOS_HEAT8s = await prisma.tTIMEINFOS_HEAT8.findMany()
    * ```
    */
  get tTIMEINFOS_HEAT8(): Prisma.TTIMEINFOS_HEAT8Delegate<GlobalReject>;

  /**
   * `prisma.tTIMEINFOS_HEAT9`: Exposes CRUD operations for the **TTIMEINFOS_HEAT9** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMEINFOS_HEAT9s
    * const tTIMEINFOS_HEAT9s = await prisma.tTIMEINFOS_HEAT9.findMany()
    * ```
    */
  get tTIMEINFOS_HEAT9(): Prisma.TTIMEINFOS_HEAT9Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT1_FINISH`: Exposes CRUD operations for the **TTIMERECORDS_HEAT1_FINISH** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT1_FINISHES
    * const tTIMERECORDS_HEAT1_FINISHES = await prisma.tTIMERECORDS_HEAT1_FINISH.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT1_FINISH(): Prisma.TTIMERECORDS_HEAT1_FINISHDelegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT1_INTER1`: Exposes CRUD operations for the **TTIMERECORDS_HEAT1_INTER1** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT1_INTER1s
    * const tTIMERECORDS_HEAT1_INTER1s = await prisma.tTIMERECORDS_HEAT1_INTER1.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT1_INTER1(): Prisma.TTIMERECORDS_HEAT1_INTER1Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT1_INTER2`: Exposes CRUD operations for the **TTIMERECORDS_HEAT1_INTER2** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT1_INTER2s
    * const tTIMERECORDS_HEAT1_INTER2s = await prisma.tTIMERECORDS_HEAT1_INTER2.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT1_INTER2(): Prisma.TTIMERECORDS_HEAT1_INTER2Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT1_START`: Exposes CRUD operations for the **TTIMERECORDS_HEAT1_START** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT1_STARTS
    * const tTIMERECORDS_HEAT1_STARTS = await prisma.tTIMERECORDS_HEAT1_START.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT1_START(): Prisma.TTIMERECORDS_HEAT1_STARTDelegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT2_FINISH`: Exposes CRUD operations for the **TTIMERECORDS_HEAT2_FINISH** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT2_FINISHES
    * const tTIMERECORDS_HEAT2_FINISHES = await prisma.tTIMERECORDS_HEAT2_FINISH.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT2_FINISH(): Prisma.TTIMERECORDS_HEAT2_FINISHDelegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT2_INTER1`: Exposes CRUD operations for the **TTIMERECORDS_HEAT2_INTER1** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT2_INTER1s
    * const tTIMERECORDS_HEAT2_INTER1s = await prisma.tTIMERECORDS_HEAT2_INTER1.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT2_INTER1(): Prisma.TTIMERECORDS_HEAT2_INTER1Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT2_INTER2`: Exposes CRUD operations for the **TTIMERECORDS_HEAT2_INTER2** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT2_INTER2s
    * const tTIMERECORDS_HEAT2_INTER2s = await prisma.tTIMERECORDS_HEAT2_INTER2.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT2_INTER2(): Prisma.TTIMERECORDS_HEAT2_INTER2Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT2_START`: Exposes CRUD operations for the **TTIMERECORDS_HEAT2_START** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT2_STARTS
    * const tTIMERECORDS_HEAT2_STARTS = await prisma.tTIMERECORDS_HEAT2_START.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT2_START(): Prisma.TTIMERECORDS_HEAT2_STARTDelegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT3_FINISH`: Exposes CRUD operations for the **TTIMERECORDS_HEAT3_FINISH** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT3_FINISHES
    * const tTIMERECORDS_HEAT3_FINISHES = await prisma.tTIMERECORDS_HEAT3_FINISH.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT3_FINISH(): Prisma.TTIMERECORDS_HEAT3_FINISHDelegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT3_INTER1`: Exposes CRUD operations for the **TTIMERECORDS_HEAT3_INTER1** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT3_INTER1s
    * const tTIMERECORDS_HEAT3_INTER1s = await prisma.tTIMERECORDS_HEAT3_INTER1.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT3_INTER1(): Prisma.TTIMERECORDS_HEAT3_INTER1Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT3_INTER2`: Exposes CRUD operations for the **TTIMERECORDS_HEAT3_INTER2** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT3_INTER2s
    * const tTIMERECORDS_HEAT3_INTER2s = await prisma.tTIMERECORDS_HEAT3_INTER2.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT3_INTER2(): Prisma.TTIMERECORDS_HEAT3_INTER2Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT3_START`: Exposes CRUD operations for the **TTIMERECORDS_HEAT3_START** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT3_STARTS
    * const tTIMERECORDS_HEAT3_STARTS = await prisma.tTIMERECORDS_HEAT3_START.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT3_START(): Prisma.TTIMERECORDS_HEAT3_STARTDelegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT4_FINISH`: Exposes CRUD operations for the **TTIMERECORDS_HEAT4_FINISH** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT4_FINISHES
    * const tTIMERECORDS_HEAT4_FINISHES = await prisma.tTIMERECORDS_HEAT4_FINISH.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT4_FINISH(): Prisma.TTIMERECORDS_HEAT4_FINISHDelegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT4_INTER1`: Exposes CRUD operations for the **TTIMERECORDS_HEAT4_INTER1** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT4_INTER1s
    * const tTIMERECORDS_HEAT4_INTER1s = await prisma.tTIMERECORDS_HEAT4_INTER1.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT4_INTER1(): Prisma.TTIMERECORDS_HEAT4_INTER1Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT4_INTER2`: Exposes CRUD operations for the **TTIMERECORDS_HEAT4_INTER2** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT4_INTER2s
    * const tTIMERECORDS_HEAT4_INTER2s = await prisma.tTIMERECORDS_HEAT4_INTER2.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT4_INTER2(): Prisma.TTIMERECORDS_HEAT4_INTER2Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT4_START`: Exposes CRUD operations for the **TTIMERECORDS_HEAT4_START** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT4_STARTS
    * const tTIMERECORDS_HEAT4_STARTS = await prisma.tTIMERECORDS_HEAT4_START.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT4_START(): Prisma.TTIMERECORDS_HEAT4_STARTDelegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT5_FINISH`: Exposes CRUD operations for the **TTIMERECORDS_HEAT5_FINISH** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT5_FINISHES
    * const tTIMERECORDS_HEAT5_FINISHES = await prisma.tTIMERECORDS_HEAT5_FINISH.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT5_FINISH(): Prisma.TTIMERECORDS_HEAT5_FINISHDelegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT5_INTER1`: Exposes CRUD operations for the **TTIMERECORDS_HEAT5_INTER1** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT5_INTER1s
    * const tTIMERECORDS_HEAT5_INTER1s = await prisma.tTIMERECORDS_HEAT5_INTER1.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT5_INTER1(): Prisma.TTIMERECORDS_HEAT5_INTER1Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT5_INTER2`: Exposes CRUD operations for the **TTIMERECORDS_HEAT5_INTER2** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT5_INTER2s
    * const tTIMERECORDS_HEAT5_INTER2s = await prisma.tTIMERECORDS_HEAT5_INTER2.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT5_INTER2(): Prisma.TTIMERECORDS_HEAT5_INTER2Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT5_START`: Exposes CRUD operations for the **TTIMERECORDS_HEAT5_START** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT5_STARTS
    * const tTIMERECORDS_HEAT5_STARTS = await prisma.tTIMERECORDS_HEAT5_START.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT5_START(): Prisma.TTIMERECORDS_HEAT5_STARTDelegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT6_FINISH`: Exposes CRUD operations for the **TTIMERECORDS_HEAT6_FINISH** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT6_FINISHES
    * const tTIMERECORDS_HEAT6_FINISHES = await prisma.tTIMERECORDS_HEAT6_FINISH.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT6_FINISH(): Prisma.TTIMERECORDS_HEAT6_FINISHDelegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT6_INTER1`: Exposes CRUD operations for the **TTIMERECORDS_HEAT6_INTER1** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT6_INTER1s
    * const tTIMERECORDS_HEAT6_INTER1s = await prisma.tTIMERECORDS_HEAT6_INTER1.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT6_INTER1(): Prisma.TTIMERECORDS_HEAT6_INTER1Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT6_INTER2`: Exposes CRUD operations for the **TTIMERECORDS_HEAT6_INTER2** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT6_INTER2s
    * const tTIMERECORDS_HEAT6_INTER2s = await prisma.tTIMERECORDS_HEAT6_INTER2.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT6_INTER2(): Prisma.TTIMERECORDS_HEAT6_INTER2Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT6_START`: Exposes CRUD operations for the **TTIMERECORDS_HEAT6_START** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT6_STARTS
    * const tTIMERECORDS_HEAT6_STARTS = await prisma.tTIMERECORDS_HEAT6_START.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT6_START(): Prisma.TTIMERECORDS_HEAT6_STARTDelegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT7_FINISH`: Exposes CRUD operations for the **TTIMERECORDS_HEAT7_FINISH** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT7_FINISHES
    * const tTIMERECORDS_HEAT7_FINISHES = await prisma.tTIMERECORDS_HEAT7_FINISH.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT7_FINISH(): Prisma.TTIMERECORDS_HEAT7_FINISHDelegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT7_INTER1`: Exposes CRUD operations for the **TTIMERECORDS_HEAT7_INTER1** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT7_INTER1s
    * const tTIMERECORDS_HEAT7_INTER1s = await prisma.tTIMERECORDS_HEAT7_INTER1.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT7_INTER1(): Prisma.TTIMERECORDS_HEAT7_INTER1Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT7_INTER2`: Exposes CRUD operations for the **TTIMERECORDS_HEAT7_INTER2** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT7_INTER2s
    * const tTIMERECORDS_HEAT7_INTER2s = await prisma.tTIMERECORDS_HEAT7_INTER2.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT7_INTER2(): Prisma.TTIMERECORDS_HEAT7_INTER2Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT7_START`: Exposes CRUD operations for the **TTIMERECORDS_HEAT7_START** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT7_STARTS
    * const tTIMERECORDS_HEAT7_STARTS = await prisma.tTIMERECORDS_HEAT7_START.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT7_START(): Prisma.TTIMERECORDS_HEAT7_STARTDelegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT8_FINISH`: Exposes CRUD operations for the **TTIMERECORDS_HEAT8_FINISH** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT8_FINISHES
    * const tTIMERECORDS_HEAT8_FINISHES = await prisma.tTIMERECORDS_HEAT8_FINISH.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT8_FINISH(): Prisma.TTIMERECORDS_HEAT8_FINISHDelegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT8_INTER1`: Exposes CRUD operations for the **TTIMERECORDS_HEAT8_INTER1** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT8_INTER1s
    * const tTIMERECORDS_HEAT8_INTER1s = await prisma.tTIMERECORDS_HEAT8_INTER1.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT8_INTER1(): Prisma.TTIMERECORDS_HEAT8_INTER1Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT8_INTER2`: Exposes CRUD operations for the **TTIMERECORDS_HEAT8_INTER2** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT8_INTER2s
    * const tTIMERECORDS_HEAT8_INTER2s = await prisma.tTIMERECORDS_HEAT8_INTER2.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT8_INTER2(): Prisma.TTIMERECORDS_HEAT8_INTER2Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT8_START`: Exposes CRUD operations for the **TTIMERECORDS_HEAT8_START** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT8_STARTS
    * const tTIMERECORDS_HEAT8_STARTS = await prisma.tTIMERECORDS_HEAT8_START.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT8_START(): Prisma.TTIMERECORDS_HEAT8_STARTDelegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT9_FINISH`: Exposes CRUD operations for the **TTIMERECORDS_HEAT9_FINISH** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT9_FINISHES
    * const tTIMERECORDS_HEAT9_FINISHES = await prisma.tTIMERECORDS_HEAT9_FINISH.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT9_FINISH(): Prisma.TTIMERECORDS_HEAT9_FINISHDelegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT9_INTER1`: Exposes CRUD operations for the **TTIMERECORDS_HEAT9_INTER1** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT9_INTER1s
    * const tTIMERECORDS_HEAT9_INTER1s = await prisma.tTIMERECORDS_HEAT9_INTER1.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT9_INTER1(): Prisma.TTIMERECORDS_HEAT9_INTER1Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT9_INTER2`: Exposes CRUD operations for the **TTIMERECORDS_HEAT9_INTER2** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT9_INTER2s
    * const tTIMERECORDS_HEAT9_INTER2s = await prisma.tTIMERECORDS_HEAT9_INTER2.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT9_INTER2(): Prisma.TTIMERECORDS_HEAT9_INTER2Delegate<GlobalReject>;

  /**
   * `prisma.tTIMERECORDS_HEAT9_START`: Exposes CRUD operations for the **TTIMERECORDS_HEAT9_START** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TTIMERECORDS_HEAT9_STARTS
    * const tTIMERECORDS_HEAT9_STARTS = await prisma.tTIMERECORDS_HEAT9_START.findMany()
    * ```
    */
  get tTIMERECORDS_HEAT9_START(): Prisma.TTIMERECORDS_HEAT9_STARTDelegate<GlobalReject>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Prisma Client JS version: 3.15.2
   * Query Engine version: 461d6a05159055555eb7dfb337c9fb271cbd4d7e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: 'DbNull'

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: 'JsonNull'

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: 'AnyNull'

  type SelectAndInclude = {
    select: any
    include: any
  }
  type HasSelect = {
    select: any
  }
  type HasInclude = {
    include: any
  }
  type CheckSelect<T, S, U> = T extends SelectAndInclude
    ? 'Please either choose `select` or `include`'
    : T extends HasSelect
    ? U
    : T extends HasInclude
    ? U
    : S

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = {
    [key in keyof T]: T[key] extends false | undefined | null ? never : key
  }[keyof T]

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Buffer
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Exact<A, W = unknown> = 
  W extends unknown ? A extends Narrowable ? Cast<A, W> : Cast<
  {[K in keyof A]: K extends keyof W ? Exact<A[K], W[K]> : never},
  {[K in keyof W]: K extends keyof A ? Exact<A[K], W[K]> : W[K]}>
  : never;

  type Narrowable = string | number | boolean | bigint;

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;

  export function validator<V>(): <S>(select: Exact<S, V>) => S;

  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but with an array
   */
  type PickArray<T, K extends Array<keyof T>> = Prisma__Pick<T, TupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T

  class PrismaClientFetcher {
    private readonly prisma;
    private readonly debug;
    private readonly hooks?;
    constructor(prisma: PrismaClient<any, any>, debug?: boolean, hooks?: Hooks | undefined);
    request<T>(document: any, dataPath?: string[], rootField?: string, typeName?: string, isList?: boolean, callsite?: string): Promise<T>;
    sanitizeMessage(message: string): string;
    protected unpack(document: any, data: any, path: string[], rootField?: string, isList?: boolean): any;
  }

  export const ModelName: {
    TKEYVALUES: 'TKEYVALUES',
    TUPDATEVALUES: 'TUPDATEVALUES',
    TCHRONOMESSAGES_HEAT1: 'TCHRONOMESSAGES_HEAT1',
    TCHRONOMESSAGES_HEAT2: 'TCHRONOMESSAGES_HEAT2',
    TCHRONOMESSAGES_HEAT3: 'TCHRONOMESSAGES_HEAT3',
    TCHRONOMESSAGES_HEAT4: 'TCHRONOMESSAGES_HEAT4',
    TCHRONOMESSAGES_HEAT5: 'TCHRONOMESSAGES_HEAT5',
    TCHRONOMESSAGES_HEAT6: 'TCHRONOMESSAGES_HEAT6',
    TCHRONOMESSAGES_HEAT7: 'TCHRONOMESSAGES_HEAT7',
    TCHRONOMESSAGES_HEAT8: 'TCHRONOMESSAGES_HEAT8',
    TCHRONOMESSAGES_HEAT9: 'TCHRONOMESSAGES_HEAT9',
    TSTARTLIST_HEAT1: 'TSTARTLIST_HEAT1',
    TSTARTLIST_HEAT2: 'TSTARTLIST_HEAT2',
    TSTARTLIST_HEAT3: 'TSTARTLIST_HEAT3',
    TSTARTLIST_HEAT4: 'TSTARTLIST_HEAT4',
    TSTARTLIST_HEAT5: 'TSTARTLIST_HEAT5',
    TSTARTLIST_HEAT6: 'TSTARTLIST_HEAT6',
    TSTARTLIST_HEAT7: 'TSTARTLIST_HEAT7',
    TSTARTLIST_HEAT8: 'TSTARTLIST_HEAT8',
    TSTARTLIST_HEAT9: 'TSTARTLIST_HEAT9',
    TTIMEINFOS_HEAT1: 'TTIMEINFOS_HEAT1',
    TTIMEINFOS_HEAT2: 'TTIMEINFOS_HEAT2',
    TTIMEINFOS_HEAT3: 'TTIMEINFOS_HEAT3',
    TTIMEINFOS_HEAT4: 'TTIMEINFOS_HEAT4',
    TTIMEINFOS_HEAT5: 'TTIMEINFOS_HEAT5',
    TTIMEINFOS_HEAT6: 'TTIMEINFOS_HEAT6',
    TTIMEINFOS_HEAT7: 'TTIMEINFOS_HEAT7',
    TTIMEINFOS_HEAT8: 'TTIMEINFOS_HEAT8',
    TTIMEINFOS_HEAT9: 'TTIMEINFOS_HEAT9',
    TTIMERECORDS_HEAT1_FINISH: 'TTIMERECORDS_HEAT1_FINISH',
    TTIMERECORDS_HEAT1_INTER1: 'TTIMERECORDS_HEAT1_INTER1',
    TTIMERECORDS_HEAT1_INTER2: 'TTIMERECORDS_HEAT1_INTER2',
    TTIMERECORDS_HEAT1_START: 'TTIMERECORDS_HEAT1_START',
    TTIMERECORDS_HEAT2_FINISH: 'TTIMERECORDS_HEAT2_FINISH',
    TTIMERECORDS_HEAT2_INTER1: 'TTIMERECORDS_HEAT2_INTER1',
    TTIMERECORDS_HEAT2_INTER2: 'TTIMERECORDS_HEAT2_INTER2',
    TTIMERECORDS_HEAT2_START: 'TTIMERECORDS_HEAT2_START',
    TTIMERECORDS_HEAT3_FINISH: 'TTIMERECORDS_HEAT3_FINISH',
    TTIMERECORDS_HEAT3_INTER1: 'TTIMERECORDS_HEAT3_INTER1',
    TTIMERECORDS_HEAT3_INTER2: 'TTIMERECORDS_HEAT3_INTER2',
    TTIMERECORDS_HEAT3_START: 'TTIMERECORDS_HEAT3_START',
    TTIMERECORDS_HEAT4_FINISH: 'TTIMERECORDS_HEAT4_FINISH',
    TTIMERECORDS_HEAT4_INTER1: 'TTIMERECORDS_HEAT4_INTER1',
    TTIMERECORDS_HEAT4_INTER2: 'TTIMERECORDS_HEAT4_INTER2',
    TTIMERECORDS_HEAT4_START: 'TTIMERECORDS_HEAT4_START',
    TTIMERECORDS_HEAT5_FINISH: 'TTIMERECORDS_HEAT5_FINISH',
    TTIMERECORDS_HEAT5_INTER1: 'TTIMERECORDS_HEAT5_INTER1',
    TTIMERECORDS_HEAT5_INTER2: 'TTIMERECORDS_HEAT5_INTER2',
    TTIMERECORDS_HEAT5_START: 'TTIMERECORDS_HEAT5_START',
    TTIMERECORDS_HEAT6_FINISH: 'TTIMERECORDS_HEAT6_FINISH',
    TTIMERECORDS_HEAT6_INTER1: 'TTIMERECORDS_HEAT6_INTER1',
    TTIMERECORDS_HEAT6_INTER2: 'TTIMERECORDS_HEAT6_INTER2',
    TTIMERECORDS_HEAT6_START: 'TTIMERECORDS_HEAT6_START',
    TTIMERECORDS_HEAT7_FINISH: 'TTIMERECORDS_HEAT7_FINISH',
    TTIMERECORDS_HEAT7_INTER1: 'TTIMERECORDS_HEAT7_INTER1',
    TTIMERECORDS_HEAT7_INTER2: 'TTIMERECORDS_HEAT7_INTER2',
    TTIMERECORDS_HEAT7_START: 'TTIMERECORDS_HEAT7_START',
    TTIMERECORDS_HEAT8_FINISH: 'TTIMERECORDS_HEAT8_FINISH',
    TTIMERECORDS_HEAT8_INTER1: 'TTIMERECORDS_HEAT8_INTER1',
    TTIMERECORDS_HEAT8_INTER2: 'TTIMERECORDS_HEAT8_INTER2',
    TTIMERECORDS_HEAT8_START: 'TTIMERECORDS_HEAT8_START',
    TTIMERECORDS_HEAT9_FINISH: 'TTIMERECORDS_HEAT9_FINISH',
    TTIMERECORDS_HEAT9_INTER1: 'TTIMERECORDS_HEAT9_INTER1',
    TTIMERECORDS_HEAT9_INTER2: 'TTIMERECORDS_HEAT9_INTER2',
    TTIMERECORDS_HEAT9_START: 'TTIMERECORDS_HEAT9_START'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  export type RejectOnNotFound = boolean | ((error: Error) => Error)
  export type RejectPerModel = { [P in ModelName]?: RejectOnNotFound }
  export type RejectPerOperation =  { [P in "findUnique" | "findFirst"]?: RejectPerModel | RejectOnNotFound } 
  type IsReject<T> = T extends true ? True : T extends (err: Error) => Error ? True : False
  export type HasReject<
    GlobalRejectSettings extends Prisma.PrismaClientOptions['rejectOnNotFound'],
    LocalRejectSettings,
    Action extends PrismaAction,
    Model extends ModelName
  > = LocalRejectSettings extends RejectOnNotFound
    ? IsReject<LocalRejectSettings>
    : GlobalRejectSettings extends RejectPerOperation
    ? Action extends keyof GlobalRejectSettings
      ? GlobalRejectSettings[Action] extends RejectOnNotFound
        ? IsReject<GlobalRejectSettings[Action]>
        : GlobalRejectSettings[Action] extends RejectPerModel
        ? Model extends keyof GlobalRejectSettings[Action]
          ? IsReject<GlobalRejectSettings[Action][Model]>
          : False
        : False
      : False
    : IsReject<GlobalRejectSettings>
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Configure findUnique/findFirst to throw an error if the query returns null. 
     *  * @example
     * ```
     * // Reject on both findUnique/findFirst
     * rejectOnNotFound: true
     * // Reject only on findFirst with a custom error
     * rejectOnNotFound: { findFirst: (err) => new Error("Custom Error")}
     * // Reject on user.findUnique with a custom error
     * rejectOnNotFound: { findUnique: {User: (err) => new Error("User not found")}}
     * ```
     */
    rejectOnNotFound?: RejectOnNotFound | RejectPerOperation
    /**
     * Overwrites the datasource url from your prisma.schema file
     */
    datasources?: Datasources

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  export type Hooks = {
    beforeRequest?: (options: { query: string, path: string[], rootField?: string, typeName?: string, document: any }) => any
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findMany'
    | 'findFirst'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'

  /**
   * These options are being passed in to the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => Promise<T>,
  ) => Promise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model TKEYVALUES
   */


  export type AggregateTKEYVALUES = {
    _count: TKEYVALUESCountAggregateOutputType | null
    _avg: TKEYVALUESAvgAggregateOutputType | null
    _sum: TKEYVALUESSumAggregateOutputType | null
    _min: TKEYVALUESMinAggregateOutputType | null
    _max: TKEYVALUESMaxAggregateOutputType | null
  }

  export type TKEYVALUESAvgAggregateOutputType = {
    KEYVALUE: number | null
  }

  export type TKEYVALUESSumAggregateOutputType = {
    KEYVALUE: number | null
  }

  export type TKEYVALUESMinAggregateOutputType = {
    TABLENAME: string | null
    KEYVALUE: number | null
  }

  export type TKEYVALUESMaxAggregateOutputType = {
    TABLENAME: string | null
    KEYVALUE: number | null
  }

  export type TKEYVALUESCountAggregateOutputType = {
    TABLENAME: number
    KEYVALUE: number
    _all: number
  }


  export type TKEYVALUESAvgAggregateInputType = {
    KEYVALUE?: true
  }

  export type TKEYVALUESSumAggregateInputType = {
    KEYVALUE?: true
  }

  export type TKEYVALUESMinAggregateInputType = {
    TABLENAME?: true
    KEYVALUE?: true
  }

  export type TKEYVALUESMaxAggregateInputType = {
    TABLENAME?: true
    KEYVALUE?: true
  }

  export type TKEYVALUESCountAggregateInputType = {
    TABLENAME?: true
    KEYVALUE?: true
    _all?: true
  }

  export type TKEYVALUESAggregateArgs = {
    /**
     * Filter which TKEYVALUES to aggregate.
     * 
    **/
    where?: TKEYVALUESWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TKEYVALUES to fetch.
     * 
    **/
    orderBy?: Enumerable<TKEYVALUESOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TKEYVALUESWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TKEYVALUES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TKEYVALUES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TKEYVALUES
    **/
    _count?: true | TKEYVALUESCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TKEYVALUESAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TKEYVALUESSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TKEYVALUESMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TKEYVALUESMaxAggregateInputType
  }

  export type GetTKEYVALUESAggregateType<T extends TKEYVALUESAggregateArgs> = {
        [P in keyof T & keyof AggregateTKEYVALUES]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTKEYVALUES[P]>
      : GetScalarType<T[P], AggregateTKEYVALUES[P]>
  }




  export type TKEYVALUESGroupByArgs = {
    where?: TKEYVALUESWhereInput
    orderBy?: Enumerable<TKEYVALUESOrderByWithAggregationInput>
    by: Array<TKEYVALUESScalarFieldEnum>
    having?: TKEYVALUESScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TKEYVALUESCountAggregateInputType | true
    _avg?: TKEYVALUESAvgAggregateInputType
    _sum?: TKEYVALUESSumAggregateInputType
    _min?: TKEYVALUESMinAggregateInputType
    _max?: TKEYVALUESMaxAggregateInputType
  }


  export type TKEYVALUESGroupByOutputType = {
    TABLENAME: string
    KEYVALUE: number
    _count: TKEYVALUESCountAggregateOutputType | null
    _avg: TKEYVALUESAvgAggregateOutputType | null
    _sum: TKEYVALUESSumAggregateOutputType | null
    _min: TKEYVALUESMinAggregateOutputType | null
    _max: TKEYVALUESMaxAggregateOutputType | null
  }

  type GetTKEYVALUESGroupByPayload<T extends TKEYVALUESGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TKEYVALUESGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TKEYVALUESGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TKEYVALUESGroupByOutputType[P]>
            : GetScalarType<T[P], TKEYVALUESGroupByOutputType[P]>
        }
      >
    >


  export type TKEYVALUESSelect = {
    TABLENAME?: boolean
    KEYVALUE?: boolean
  }

  export type TKEYVALUESGetPayload<
    S extends boolean | null | undefined | TKEYVALUESArgs,
    U = keyof S
      > = S extends true
        ? TKEYVALUES
    : S extends undefined
    ? never
    : S extends TKEYVALUESArgs | TKEYVALUESFindManyArgs
    ?'include' extends U
    ? TKEYVALUES 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TKEYVALUES ? TKEYVALUES[P] : never
  } 
    : TKEYVALUES
  : TKEYVALUES


  type TKEYVALUESCountArgs = Merge<
    Omit<TKEYVALUESFindManyArgs, 'select' | 'include'> & {
      select?: TKEYVALUESCountAggregateInputType | true
    }
  >

  export interface TKEYVALUESDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TKEYVALUES that matches the filter.
     * @param {TKEYVALUESFindUniqueArgs} args - Arguments to find a TKEYVALUES
     * @example
     * // Get one TKEYVALUES
     * const tKEYVALUES = await prisma.tKEYVALUES.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TKEYVALUESFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TKEYVALUESFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TKEYVALUES'> extends True ? CheckSelect<T, Prisma__TKEYVALUESClient<TKEYVALUES>, Prisma__TKEYVALUESClient<TKEYVALUESGetPayload<T>>> : CheckSelect<T, Prisma__TKEYVALUESClient<TKEYVALUES | null >, Prisma__TKEYVALUESClient<TKEYVALUESGetPayload<T> | null >>

    /**
     * Find the first TKEYVALUES that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TKEYVALUESFindFirstArgs} args - Arguments to find a TKEYVALUES
     * @example
     * // Get one TKEYVALUES
     * const tKEYVALUES = await prisma.tKEYVALUES.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TKEYVALUESFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TKEYVALUESFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TKEYVALUES'> extends True ? CheckSelect<T, Prisma__TKEYVALUESClient<TKEYVALUES>, Prisma__TKEYVALUESClient<TKEYVALUESGetPayload<T>>> : CheckSelect<T, Prisma__TKEYVALUESClient<TKEYVALUES | null >, Prisma__TKEYVALUESClient<TKEYVALUESGetPayload<T> | null >>

    /**
     * Find zero or more TKEYVALUES that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TKEYVALUESFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TKEYVALUES
     * const tKEYVALUES = await prisma.tKEYVALUES.findMany()
     * 
     * // Get first 10 TKEYVALUES
     * const tKEYVALUES = await prisma.tKEYVALUES.findMany({ take: 10 })
     * 
     * // Only select the `TABLENAME`
     * const tKEYVALUESWithTABLENAMEOnly = await prisma.tKEYVALUES.findMany({ select: { TABLENAME: true } })
     * 
    **/
    findMany<T extends TKEYVALUESFindManyArgs>(
      args?: SelectSubset<T, TKEYVALUESFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TKEYVALUES>>, PrismaPromise<Array<TKEYVALUESGetPayload<T>>>>

    /**
     * Create a TKEYVALUES.
     * @param {TKEYVALUESCreateArgs} args - Arguments to create a TKEYVALUES.
     * @example
     * // Create one TKEYVALUES
     * const TKEYVALUES = await prisma.tKEYVALUES.create({
     *   data: {
     *     // ... data to create a TKEYVALUES
     *   }
     * })
     * 
    **/
    create<T extends TKEYVALUESCreateArgs>(
      args: SelectSubset<T, TKEYVALUESCreateArgs>
    ): CheckSelect<T, Prisma__TKEYVALUESClient<TKEYVALUES>, Prisma__TKEYVALUESClient<TKEYVALUESGetPayload<T>>>

    /**
     * Delete a TKEYVALUES.
     * @param {TKEYVALUESDeleteArgs} args - Arguments to delete one TKEYVALUES.
     * @example
     * // Delete one TKEYVALUES
     * const TKEYVALUES = await prisma.tKEYVALUES.delete({
     *   where: {
     *     // ... filter to delete one TKEYVALUES
     *   }
     * })
     * 
    **/
    delete<T extends TKEYVALUESDeleteArgs>(
      args: SelectSubset<T, TKEYVALUESDeleteArgs>
    ): CheckSelect<T, Prisma__TKEYVALUESClient<TKEYVALUES>, Prisma__TKEYVALUESClient<TKEYVALUESGetPayload<T>>>

    /**
     * Update one TKEYVALUES.
     * @param {TKEYVALUESUpdateArgs} args - Arguments to update one TKEYVALUES.
     * @example
     * // Update one TKEYVALUES
     * const tKEYVALUES = await prisma.tKEYVALUES.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TKEYVALUESUpdateArgs>(
      args: SelectSubset<T, TKEYVALUESUpdateArgs>
    ): CheckSelect<T, Prisma__TKEYVALUESClient<TKEYVALUES>, Prisma__TKEYVALUESClient<TKEYVALUESGetPayload<T>>>

    /**
     * Delete zero or more TKEYVALUES.
     * @param {TKEYVALUESDeleteManyArgs} args - Arguments to filter TKEYVALUES to delete.
     * @example
     * // Delete a few TKEYVALUES
     * const { count } = await prisma.tKEYVALUES.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TKEYVALUESDeleteManyArgs>(
      args?: SelectSubset<T, TKEYVALUESDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TKEYVALUES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TKEYVALUESUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TKEYVALUES
     * const tKEYVALUES = await prisma.tKEYVALUES.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TKEYVALUESUpdateManyArgs>(
      args: SelectSubset<T, TKEYVALUESUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TKEYVALUES.
     * @param {TKEYVALUESUpsertArgs} args - Arguments to update or create a TKEYVALUES.
     * @example
     * // Update or create a TKEYVALUES
     * const tKEYVALUES = await prisma.tKEYVALUES.upsert({
     *   create: {
     *     // ... data to create a TKEYVALUES
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TKEYVALUES we want to update
     *   }
     * })
    **/
    upsert<T extends TKEYVALUESUpsertArgs>(
      args: SelectSubset<T, TKEYVALUESUpsertArgs>
    ): CheckSelect<T, Prisma__TKEYVALUESClient<TKEYVALUES>, Prisma__TKEYVALUESClient<TKEYVALUESGetPayload<T>>>

    /**
     * Count the number of TKEYVALUES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TKEYVALUESCountArgs} args - Arguments to filter TKEYVALUES to count.
     * @example
     * // Count the number of TKEYVALUES
     * const count = await prisma.tKEYVALUES.count({
     *   where: {
     *     // ... the filter for the TKEYVALUES we want to count
     *   }
     * })
    **/
    count<T extends TKEYVALUESCountArgs>(
      args?: Subset<T, TKEYVALUESCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TKEYVALUESCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TKEYVALUES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TKEYVALUESAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TKEYVALUESAggregateArgs>(args: Subset<T, TKEYVALUESAggregateArgs>): PrismaPromise<GetTKEYVALUESAggregateType<T>>

    /**
     * Group by TKEYVALUES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TKEYVALUESGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TKEYVALUESGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TKEYVALUESGroupByArgs['orderBy'] }
        : { orderBy?: TKEYVALUESGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TKEYVALUESGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTKEYVALUESGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TKEYVALUES.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TKEYVALUESClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TKEYVALUES findUnique
   */
  export type TKEYVALUESFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TKEYVALUES
     * 
    **/
    select?: TKEYVALUESSelect | null
    /**
     * Throw an Error if a TKEYVALUES can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TKEYVALUES to fetch.
     * 
    **/
    where: TKEYVALUESWhereUniqueInput
  }


  /**
   * TKEYVALUES findFirst
   */
  export type TKEYVALUESFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TKEYVALUES
     * 
    **/
    select?: TKEYVALUESSelect | null
    /**
     * Throw an Error if a TKEYVALUES can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TKEYVALUES to fetch.
     * 
    **/
    where?: TKEYVALUESWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TKEYVALUES to fetch.
     * 
    **/
    orderBy?: Enumerable<TKEYVALUESOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TKEYVALUES.
     * 
    **/
    cursor?: TKEYVALUESWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TKEYVALUES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TKEYVALUES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TKEYVALUES.
     * 
    **/
    distinct?: Enumerable<TKEYVALUESScalarFieldEnum>
  }


  /**
   * TKEYVALUES findMany
   */
  export type TKEYVALUESFindManyArgs = {
    /**
     * Select specific fields to fetch from the TKEYVALUES
     * 
    **/
    select?: TKEYVALUESSelect | null
    /**
     * Filter, which TKEYVALUES to fetch.
     * 
    **/
    where?: TKEYVALUESWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TKEYVALUES to fetch.
     * 
    **/
    orderBy?: Enumerable<TKEYVALUESOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TKEYVALUES.
     * 
    **/
    cursor?: TKEYVALUESWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TKEYVALUES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TKEYVALUES.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TKEYVALUESScalarFieldEnum>
  }


  /**
   * TKEYVALUES create
   */
  export type TKEYVALUESCreateArgs = {
    /**
     * Select specific fields to fetch from the TKEYVALUES
     * 
    **/
    select?: TKEYVALUESSelect | null
    /**
     * The data needed to create a TKEYVALUES.
     * 
    **/
    data: XOR<TKEYVALUESCreateInput, TKEYVALUESUncheckedCreateInput>
  }


  /**
   * TKEYVALUES update
   */
  export type TKEYVALUESUpdateArgs = {
    /**
     * Select specific fields to fetch from the TKEYVALUES
     * 
    **/
    select?: TKEYVALUESSelect | null
    /**
     * The data needed to update a TKEYVALUES.
     * 
    **/
    data: XOR<TKEYVALUESUpdateInput, TKEYVALUESUncheckedUpdateInput>
    /**
     * Choose, which TKEYVALUES to update.
     * 
    **/
    where: TKEYVALUESWhereUniqueInput
  }


  /**
   * TKEYVALUES updateMany
   */
  export type TKEYVALUESUpdateManyArgs = {
    /**
     * The data used to update TKEYVALUES.
     * 
    **/
    data: XOR<TKEYVALUESUpdateManyMutationInput, TKEYVALUESUncheckedUpdateManyInput>
    /**
     * Filter which TKEYVALUES to update
     * 
    **/
    where?: TKEYVALUESWhereInput
  }


  /**
   * TKEYVALUES upsert
   */
  export type TKEYVALUESUpsertArgs = {
    /**
     * Select specific fields to fetch from the TKEYVALUES
     * 
    **/
    select?: TKEYVALUESSelect | null
    /**
     * The filter to search for the TKEYVALUES to update in case it exists.
     * 
    **/
    where: TKEYVALUESWhereUniqueInput
    /**
     * In case the TKEYVALUES found by the `where` argument doesn't exist, create a new TKEYVALUES with this data.
     * 
    **/
    create: XOR<TKEYVALUESCreateInput, TKEYVALUESUncheckedCreateInput>
    /**
     * In case the TKEYVALUES was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TKEYVALUESUpdateInput, TKEYVALUESUncheckedUpdateInput>
  }


  /**
   * TKEYVALUES delete
   */
  export type TKEYVALUESDeleteArgs = {
    /**
     * Select specific fields to fetch from the TKEYVALUES
     * 
    **/
    select?: TKEYVALUESSelect | null
    /**
     * Filter which TKEYVALUES to delete.
     * 
    **/
    where: TKEYVALUESWhereUniqueInput
  }


  /**
   * TKEYVALUES deleteMany
   */
  export type TKEYVALUESDeleteManyArgs = {
    /**
     * Filter which TKEYVALUES to delete
     * 
    **/
    where?: TKEYVALUESWhereInput
  }


  /**
   * TKEYVALUES without action
   */
  export type TKEYVALUESArgs = {
    /**
     * Select specific fields to fetch from the TKEYVALUES
     * 
    **/
    select?: TKEYVALUESSelect | null
  }



  /**
   * Model TUPDATEVALUES
   */


  export type AggregateTUPDATEVALUES = {
    _count: TUPDATEVALUESCountAggregateOutputType | null
    _avg: TUPDATEVALUESAvgAggregateOutputType | null
    _sum: TUPDATEVALUESSumAggregateOutputType | null
    _min: TUPDATEVALUESMinAggregateOutputType | null
    _max: TUPDATEVALUESMaxAggregateOutputType | null
  }

  export type TUPDATEVALUESAvgAggregateOutputType = {
    UPDATEVALUE: number | null
  }

  export type TUPDATEVALUESSumAggregateOutputType = {
    UPDATEVALUE: number | null
  }

  export type TUPDATEVALUESMinAggregateOutputType = {
    TABLENAME: string | null
    UPDATEVALUE: number | null
  }

  export type TUPDATEVALUESMaxAggregateOutputType = {
    TABLENAME: string | null
    UPDATEVALUE: number | null
  }

  export type TUPDATEVALUESCountAggregateOutputType = {
    TABLENAME: number
    UPDATEVALUE: number
    _all: number
  }


  export type TUPDATEVALUESAvgAggregateInputType = {
    UPDATEVALUE?: true
  }

  export type TUPDATEVALUESSumAggregateInputType = {
    UPDATEVALUE?: true
  }

  export type TUPDATEVALUESMinAggregateInputType = {
    TABLENAME?: true
    UPDATEVALUE?: true
  }

  export type TUPDATEVALUESMaxAggregateInputType = {
    TABLENAME?: true
    UPDATEVALUE?: true
  }

  export type TUPDATEVALUESCountAggregateInputType = {
    TABLENAME?: true
    UPDATEVALUE?: true
    _all?: true
  }

  export type TUPDATEVALUESAggregateArgs = {
    /**
     * Filter which TUPDATEVALUES to aggregate.
     * 
    **/
    where?: TUPDATEVALUESWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TUPDATEVALUES to fetch.
     * 
    **/
    orderBy?: Enumerable<TUPDATEVALUESOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TUPDATEVALUESWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TUPDATEVALUES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TUPDATEVALUES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TUPDATEVALUES
    **/
    _count?: true | TUPDATEVALUESCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TUPDATEVALUESAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TUPDATEVALUESSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TUPDATEVALUESMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TUPDATEVALUESMaxAggregateInputType
  }

  export type GetTUPDATEVALUESAggregateType<T extends TUPDATEVALUESAggregateArgs> = {
        [P in keyof T & keyof AggregateTUPDATEVALUES]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTUPDATEVALUES[P]>
      : GetScalarType<T[P], AggregateTUPDATEVALUES[P]>
  }




  export type TUPDATEVALUESGroupByArgs = {
    where?: TUPDATEVALUESWhereInput
    orderBy?: Enumerable<TUPDATEVALUESOrderByWithAggregationInput>
    by: Array<TUPDATEVALUESScalarFieldEnum>
    having?: TUPDATEVALUESScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TUPDATEVALUESCountAggregateInputType | true
    _avg?: TUPDATEVALUESAvgAggregateInputType
    _sum?: TUPDATEVALUESSumAggregateInputType
    _min?: TUPDATEVALUESMinAggregateInputType
    _max?: TUPDATEVALUESMaxAggregateInputType
  }


  export type TUPDATEVALUESGroupByOutputType = {
    TABLENAME: string
    UPDATEVALUE: number
    _count: TUPDATEVALUESCountAggregateOutputType | null
    _avg: TUPDATEVALUESAvgAggregateOutputType | null
    _sum: TUPDATEVALUESSumAggregateOutputType | null
    _min: TUPDATEVALUESMinAggregateOutputType | null
    _max: TUPDATEVALUESMaxAggregateOutputType | null
  }

  type GetTUPDATEVALUESGroupByPayload<T extends TUPDATEVALUESGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TUPDATEVALUESGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TUPDATEVALUESGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TUPDATEVALUESGroupByOutputType[P]>
            : GetScalarType<T[P], TUPDATEVALUESGroupByOutputType[P]>
        }
      >
    >


  export type TUPDATEVALUESSelect = {
    TABLENAME?: boolean
    UPDATEVALUE?: boolean
  }

  export type TUPDATEVALUESGetPayload<
    S extends boolean | null | undefined | TUPDATEVALUESArgs,
    U = keyof S
      > = S extends true
        ? TUPDATEVALUES
    : S extends undefined
    ? never
    : S extends TUPDATEVALUESArgs | TUPDATEVALUESFindManyArgs
    ?'include' extends U
    ? TUPDATEVALUES 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TUPDATEVALUES ? TUPDATEVALUES[P] : never
  } 
    : TUPDATEVALUES
  : TUPDATEVALUES


  type TUPDATEVALUESCountArgs = Merge<
    Omit<TUPDATEVALUESFindManyArgs, 'select' | 'include'> & {
      select?: TUPDATEVALUESCountAggregateInputType | true
    }
  >

  export interface TUPDATEVALUESDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TUPDATEVALUES that matches the filter.
     * @param {TUPDATEVALUESFindUniqueArgs} args - Arguments to find a TUPDATEVALUES
     * @example
     * // Get one TUPDATEVALUES
     * const tUPDATEVALUES = await prisma.tUPDATEVALUES.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TUPDATEVALUESFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TUPDATEVALUESFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TUPDATEVALUES'> extends True ? CheckSelect<T, Prisma__TUPDATEVALUESClient<TUPDATEVALUES>, Prisma__TUPDATEVALUESClient<TUPDATEVALUESGetPayload<T>>> : CheckSelect<T, Prisma__TUPDATEVALUESClient<TUPDATEVALUES | null >, Prisma__TUPDATEVALUESClient<TUPDATEVALUESGetPayload<T> | null >>

    /**
     * Find the first TUPDATEVALUES that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TUPDATEVALUESFindFirstArgs} args - Arguments to find a TUPDATEVALUES
     * @example
     * // Get one TUPDATEVALUES
     * const tUPDATEVALUES = await prisma.tUPDATEVALUES.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TUPDATEVALUESFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TUPDATEVALUESFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TUPDATEVALUES'> extends True ? CheckSelect<T, Prisma__TUPDATEVALUESClient<TUPDATEVALUES>, Prisma__TUPDATEVALUESClient<TUPDATEVALUESGetPayload<T>>> : CheckSelect<T, Prisma__TUPDATEVALUESClient<TUPDATEVALUES | null >, Prisma__TUPDATEVALUESClient<TUPDATEVALUESGetPayload<T> | null >>

    /**
     * Find zero or more TUPDATEVALUES that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TUPDATEVALUESFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TUPDATEVALUES
     * const tUPDATEVALUES = await prisma.tUPDATEVALUES.findMany()
     * 
     * // Get first 10 TUPDATEVALUES
     * const tUPDATEVALUES = await prisma.tUPDATEVALUES.findMany({ take: 10 })
     * 
     * // Only select the `TABLENAME`
     * const tUPDATEVALUESWithTABLENAMEOnly = await prisma.tUPDATEVALUES.findMany({ select: { TABLENAME: true } })
     * 
    **/
    findMany<T extends TUPDATEVALUESFindManyArgs>(
      args?: SelectSubset<T, TUPDATEVALUESFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TUPDATEVALUES>>, PrismaPromise<Array<TUPDATEVALUESGetPayload<T>>>>

    /**
     * Create a TUPDATEVALUES.
     * @param {TUPDATEVALUESCreateArgs} args - Arguments to create a TUPDATEVALUES.
     * @example
     * // Create one TUPDATEVALUES
     * const TUPDATEVALUES = await prisma.tUPDATEVALUES.create({
     *   data: {
     *     // ... data to create a TUPDATEVALUES
     *   }
     * })
     * 
    **/
    create<T extends TUPDATEVALUESCreateArgs>(
      args: SelectSubset<T, TUPDATEVALUESCreateArgs>
    ): CheckSelect<T, Prisma__TUPDATEVALUESClient<TUPDATEVALUES>, Prisma__TUPDATEVALUESClient<TUPDATEVALUESGetPayload<T>>>

    /**
     * Delete a TUPDATEVALUES.
     * @param {TUPDATEVALUESDeleteArgs} args - Arguments to delete one TUPDATEVALUES.
     * @example
     * // Delete one TUPDATEVALUES
     * const TUPDATEVALUES = await prisma.tUPDATEVALUES.delete({
     *   where: {
     *     // ... filter to delete one TUPDATEVALUES
     *   }
     * })
     * 
    **/
    delete<T extends TUPDATEVALUESDeleteArgs>(
      args: SelectSubset<T, TUPDATEVALUESDeleteArgs>
    ): CheckSelect<T, Prisma__TUPDATEVALUESClient<TUPDATEVALUES>, Prisma__TUPDATEVALUESClient<TUPDATEVALUESGetPayload<T>>>

    /**
     * Update one TUPDATEVALUES.
     * @param {TUPDATEVALUESUpdateArgs} args - Arguments to update one TUPDATEVALUES.
     * @example
     * // Update one TUPDATEVALUES
     * const tUPDATEVALUES = await prisma.tUPDATEVALUES.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TUPDATEVALUESUpdateArgs>(
      args: SelectSubset<T, TUPDATEVALUESUpdateArgs>
    ): CheckSelect<T, Prisma__TUPDATEVALUESClient<TUPDATEVALUES>, Prisma__TUPDATEVALUESClient<TUPDATEVALUESGetPayload<T>>>

    /**
     * Delete zero or more TUPDATEVALUES.
     * @param {TUPDATEVALUESDeleteManyArgs} args - Arguments to filter TUPDATEVALUES to delete.
     * @example
     * // Delete a few TUPDATEVALUES
     * const { count } = await prisma.tUPDATEVALUES.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TUPDATEVALUESDeleteManyArgs>(
      args?: SelectSubset<T, TUPDATEVALUESDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TUPDATEVALUES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TUPDATEVALUESUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TUPDATEVALUES
     * const tUPDATEVALUES = await prisma.tUPDATEVALUES.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TUPDATEVALUESUpdateManyArgs>(
      args: SelectSubset<T, TUPDATEVALUESUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TUPDATEVALUES.
     * @param {TUPDATEVALUESUpsertArgs} args - Arguments to update or create a TUPDATEVALUES.
     * @example
     * // Update or create a TUPDATEVALUES
     * const tUPDATEVALUES = await prisma.tUPDATEVALUES.upsert({
     *   create: {
     *     // ... data to create a TUPDATEVALUES
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TUPDATEVALUES we want to update
     *   }
     * })
    **/
    upsert<T extends TUPDATEVALUESUpsertArgs>(
      args: SelectSubset<T, TUPDATEVALUESUpsertArgs>
    ): CheckSelect<T, Prisma__TUPDATEVALUESClient<TUPDATEVALUES>, Prisma__TUPDATEVALUESClient<TUPDATEVALUESGetPayload<T>>>

    /**
     * Count the number of TUPDATEVALUES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TUPDATEVALUESCountArgs} args - Arguments to filter TUPDATEVALUES to count.
     * @example
     * // Count the number of TUPDATEVALUES
     * const count = await prisma.tUPDATEVALUES.count({
     *   where: {
     *     // ... the filter for the TUPDATEVALUES we want to count
     *   }
     * })
    **/
    count<T extends TUPDATEVALUESCountArgs>(
      args?: Subset<T, TUPDATEVALUESCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TUPDATEVALUESCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TUPDATEVALUES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TUPDATEVALUESAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TUPDATEVALUESAggregateArgs>(args: Subset<T, TUPDATEVALUESAggregateArgs>): PrismaPromise<GetTUPDATEVALUESAggregateType<T>>

    /**
     * Group by TUPDATEVALUES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TUPDATEVALUESGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TUPDATEVALUESGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TUPDATEVALUESGroupByArgs['orderBy'] }
        : { orderBy?: TUPDATEVALUESGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TUPDATEVALUESGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTUPDATEVALUESGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TUPDATEVALUES.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TUPDATEVALUESClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TUPDATEVALUES findUnique
   */
  export type TUPDATEVALUESFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TUPDATEVALUES
     * 
    **/
    select?: TUPDATEVALUESSelect | null
    /**
     * Throw an Error if a TUPDATEVALUES can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TUPDATEVALUES to fetch.
     * 
    **/
    where: TUPDATEVALUESWhereUniqueInput
  }


  /**
   * TUPDATEVALUES findFirst
   */
  export type TUPDATEVALUESFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TUPDATEVALUES
     * 
    **/
    select?: TUPDATEVALUESSelect | null
    /**
     * Throw an Error if a TUPDATEVALUES can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TUPDATEVALUES to fetch.
     * 
    **/
    where?: TUPDATEVALUESWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TUPDATEVALUES to fetch.
     * 
    **/
    orderBy?: Enumerable<TUPDATEVALUESOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TUPDATEVALUES.
     * 
    **/
    cursor?: TUPDATEVALUESWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TUPDATEVALUES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TUPDATEVALUES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TUPDATEVALUES.
     * 
    **/
    distinct?: Enumerable<TUPDATEVALUESScalarFieldEnum>
  }


  /**
   * TUPDATEVALUES findMany
   */
  export type TUPDATEVALUESFindManyArgs = {
    /**
     * Select specific fields to fetch from the TUPDATEVALUES
     * 
    **/
    select?: TUPDATEVALUESSelect | null
    /**
     * Filter, which TUPDATEVALUES to fetch.
     * 
    **/
    where?: TUPDATEVALUESWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TUPDATEVALUES to fetch.
     * 
    **/
    orderBy?: Enumerable<TUPDATEVALUESOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TUPDATEVALUES.
     * 
    **/
    cursor?: TUPDATEVALUESWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TUPDATEVALUES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TUPDATEVALUES.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TUPDATEVALUESScalarFieldEnum>
  }


  /**
   * TUPDATEVALUES create
   */
  export type TUPDATEVALUESCreateArgs = {
    /**
     * Select specific fields to fetch from the TUPDATEVALUES
     * 
    **/
    select?: TUPDATEVALUESSelect | null
    /**
     * The data needed to create a TUPDATEVALUES.
     * 
    **/
    data: XOR<TUPDATEVALUESCreateInput, TUPDATEVALUESUncheckedCreateInput>
  }


  /**
   * TUPDATEVALUES update
   */
  export type TUPDATEVALUESUpdateArgs = {
    /**
     * Select specific fields to fetch from the TUPDATEVALUES
     * 
    **/
    select?: TUPDATEVALUESSelect | null
    /**
     * The data needed to update a TUPDATEVALUES.
     * 
    **/
    data: XOR<TUPDATEVALUESUpdateInput, TUPDATEVALUESUncheckedUpdateInput>
    /**
     * Choose, which TUPDATEVALUES to update.
     * 
    **/
    where: TUPDATEVALUESWhereUniqueInput
  }


  /**
   * TUPDATEVALUES updateMany
   */
  export type TUPDATEVALUESUpdateManyArgs = {
    /**
     * The data used to update TUPDATEVALUES.
     * 
    **/
    data: XOR<TUPDATEVALUESUpdateManyMutationInput, TUPDATEVALUESUncheckedUpdateManyInput>
    /**
     * Filter which TUPDATEVALUES to update
     * 
    **/
    where?: TUPDATEVALUESWhereInput
  }


  /**
   * TUPDATEVALUES upsert
   */
  export type TUPDATEVALUESUpsertArgs = {
    /**
     * Select specific fields to fetch from the TUPDATEVALUES
     * 
    **/
    select?: TUPDATEVALUESSelect | null
    /**
     * The filter to search for the TUPDATEVALUES to update in case it exists.
     * 
    **/
    where: TUPDATEVALUESWhereUniqueInput
    /**
     * In case the TUPDATEVALUES found by the `where` argument doesn't exist, create a new TUPDATEVALUES with this data.
     * 
    **/
    create: XOR<TUPDATEVALUESCreateInput, TUPDATEVALUESUncheckedCreateInput>
    /**
     * In case the TUPDATEVALUES was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TUPDATEVALUESUpdateInput, TUPDATEVALUESUncheckedUpdateInput>
  }


  /**
   * TUPDATEVALUES delete
   */
  export type TUPDATEVALUESDeleteArgs = {
    /**
     * Select specific fields to fetch from the TUPDATEVALUES
     * 
    **/
    select?: TUPDATEVALUESSelect | null
    /**
     * Filter which TUPDATEVALUES to delete.
     * 
    **/
    where: TUPDATEVALUESWhereUniqueInput
  }


  /**
   * TUPDATEVALUES deleteMany
   */
  export type TUPDATEVALUESDeleteManyArgs = {
    /**
     * Filter which TUPDATEVALUES to delete
     * 
    **/
    where?: TUPDATEVALUESWhereInput
  }


  /**
   * TUPDATEVALUES without action
   */
  export type TUPDATEVALUESArgs = {
    /**
     * Select specific fields to fetch from the TUPDATEVALUES
     * 
    **/
    select?: TUPDATEVALUESSelect | null
  }



  /**
   * Model TCHRONOMESSAGES_HEAT1
   */


  export type AggregateTCHRONOMESSAGES_HEAT1 = {
    _count: TCHRONOMESSAGES_HEAT1CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT1AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT1SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT1MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT1MaxAggregateOutputType | null
  }

  export type TCHRONOMESSAGES_HEAT1AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT1SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT1MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT1MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT1CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_TRANSPONDER: number
    C_CANAL: number
    C_MESSAGE: number
    _all: number
  }


  export type TCHRONOMESSAGES_HEAT1AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT1SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT1MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT1MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT1CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
    _all?: true
  }

  export type TCHRONOMESSAGES_HEAT1AggregateArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT1 to aggregate.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TCHRONOMESSAGES_HEAT1s
    **/
    _count?: true | TCHRONOMESSAGES_HEAT1CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TCHRONOMESSAGES_HEAT1AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TCHRONOMESSAGES_HEAT1SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TCHRONOMESSAGES_HEAT1MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TCHRONOMESSAGES_HEAT1MaxAggregateInputType
  }

  export type GetTCHRONOMESSAGES_HEAT1AggregateType<T extends TCHRONOMESSAGES_HEAT1AggregateArgs> = {
        [P in keyof T & keyof AggregateTCHRONOMESSAGES_HEAT1]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT1[P]>
      : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT1[P]>
  }




  export type TCHRONOMESSAGES_HEAT1GroupByArgs = {
    where?: TCHRONOMESSAGES_HEAT1WhereInput
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT1OrderByWithAggregationInput>
    by: Array<TCHRONOMESSAGES_HEAT1ScalarFieldEnum>
    having?: TCHRONOMESSAGES_HEAT1ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TCHRONOMESSAGES_HEAT1CountAggregateInputType | true
    _avg?: TCHRONOMESSAGES_HEAT1AvgAggregateInputType
    _sum?: TCHRONOMESSAGES_HEAT1SumAggregateInputType
    _min?: TCHRONOMESSAGES_HEAT1MinAggregateInputType
    _max?: TCHRONOMESSAGES_HEAT1MaxAggregateInputType
  }


  export type TCHRONOMESSAGES_HEAT1GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
    _count: TCHRONOMESSAGES_HEAT1CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT1AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT1SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT1MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT1MaxAggregateOutputType | null
  }

  type GetTCHRONOMESSAGES_HEAT1GroupByPayload<T extends TCHRONOMESSAGES_HEAT1GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TCHRONOMESSAGES_HEAT1GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TCHRONOMESSAGES_HEAT1GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TCHRONOMESSAGES_HEAT1GroupByOutputType[P]>
            : GetScalarType<T[P], TCHRONOMESSAGES_HEAT1GroupByOutputType[P]>
        }
      >
    >


  export type TCHRONOMESSAGES_HEAT1Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TRANSPONDER?: boolean
    C_CANAL?: boolean
    C_MESSAGE?: boolean
  }

  export type TCHRONOMESSAGES_HEAT1GetPayload<
    S extends boolean | null | undefined | TCHRONOMESSAGES_HEAT1Args,
    U = keyof S
      > = S extends true
        ? TCHRONOMESSAGES_HEAT1
    : S extends undefined
    ? never
    : S extends TCHRONOMESSAGES_HEAT1Args | TCHRONOMESSAGES_HEAT1FindManyArgs
    ?'include' extends U
    ? TCHRONOMESSAGES_HEAT1 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TCHRONOMESSAGES_HEAT1 ? TCHRONOMESSAGES_HEAT1[P] : never
  } 
    : TCHRONOMESSAGES_HEAT1
  : TCHRONOMESSAGES_HEAT1


  type TCHRONOMESSAGES_HEAT1CountArgs = Merge<
    Omit<TCHRONOMESSAGES_HEAT1FindManyArgs, 'select' | 'include'> & {
      select?: TCHRONOMESSAGES_HEAT1CountAggregateInputType | true
    }
  >

  export interface TCHRONOMESSAGES_HEAT1Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TCHRONOMESSAGES_HEAT1 that matches the filter.
     * @param {TCHRONOMESSAGES_HEAT1FindUniqueArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT1
     * @example
     * // Get one TCHRONOMESSAGES_HEAT1
     * const tCHRONOMESSAGES_HEAT1 = await prisma.tCHRONOMESSAGES_HEAT1.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TCHRONOMESSAGES_HEAT1FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT1FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TCHRONOMESSAGES_HEAT1'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT1Client<TCHRONOMESSAGES_HEAT1>, Prisma__TCHRONOMESSAGES_HEAT1Client<TCHRONOMESSAGES_HEAT1GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT1Client<TCHRONOMESSAGES_HEAT1 | null >, Prisma__TCHRONOMESSAGES_HEAT1Client<TCHRONOMESSAGES_HEAT1GetPayload<T> | null >>

    /**
     * Find the first TCHRONOMESSAGES_HEAT1 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT1FindFirstArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT1
     * @example
     * // Get one TCHRONOMESSAGES_HEAT1
     * const tCHRONOMESSAGES_HEAT1 = await prisma.tCHRONOMESSAGES_HEAT1.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TCHRONOMESSAGES_HEAT1FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT1FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TCHRONOMESSAGES_HEAT1'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT1Client<TCHRONOMESSAGES_HEAT1>, Prisma__TCHRONOMESSAGES_HEAT1Client<TCHRONOMESSAGES_HEAT1GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT1Client<TCHRONOMESSAGES_HEAT1 | null >, Prisma__TCHRONOMESSAGES_HEAT1Client<TCHRONOMESSAGES_HEAT1GetPayload<T> | null >>

    /**
     * Find zero or more TCHRONOMESSAGES_HEAT1s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT1FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TCHRONOMESSAGES_HEAT1s
     * const tCHRONOMESSAGES_HEAT1s = await prisma.tCHRONOMESSAGES_HEAT1.findMany()
     * 
     * // Get first 10 TCHRONOMESSAGES_HEAT1s
     * const tCHRONOMESSAGES_HEAT1s = await prisma.tCHRONOMESSAGES_HEAT1.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tCHRONOMESSAGES_HEAT1WithC_LINEOnly = await prisma.tCHRONOMESSAGES_HEAT1.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TCHRONOMESSAGES_HEAT1FindManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT1FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TCHRONOMESSAGES_HEAT1>>, PrismaPromise<Array<TCHRONOMESSAGES_HEAT1GetPayload<T>>>>

    /**
     * Create a TCHRONOMESSAGES_HEAT1.
     * @param {TCHRONOMESSAGES_HEAT1CreateArgs} args - Arguments to create a TCHRONOMESSAGES_HEAT1.
     * @example
     * // Create one TCHRONOMESSAGES_HEAT1
     * const TCHRONOMESSAGES_HEAT1 = await prisma.tCHRONOMESSAGES_HEAT1.create({
     *   data: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT1
     *   }
     * })
     * 
    **/
    create<T extends TCHRONOMESSAGES_HEAT1CreateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT1CreateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT1Client<TCHRONOMESSAGES_HEAT1>, Prisma__TCHRONOMESSAGES_HEAT1Client<TCHRONOMESSAGES_HEAT1GetPayload<T>>>

    /**
     * Delete a TCHRONOMESSAGES_HEAT1.
     * @param {TCHRONOMESSAGES_HEAT1DeleteArgs} args - Arguments to delete one TCHRONOMESSAGES_HEAT1.
     * @example
     * // Delete one TCHRONOMESSAGES_HEAT1
     * const TCHRONOMESSAGES_HEAT1 = await prisma.tCHRONOMESSAGES_HEAT1.delete({
     *   where: {
     *     // ... filter to delete one TCHRONOMESSAGES_HEAT1
     *   }
     * })
     * 
    **/
    delete<T extends TCHRONOMESSAGES_HEAT1DeleteArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT1DeleteArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT1Client<TCHRONOMESSAGES_HEAT1>, Prisma__TCHRONOMESSAGES_HEAT1Client<TCHRONOMESSAGES_HEAT1GetPayload<T>>>

    /**
     * Update one TCHRONOMESSAGES_HEAT1.
     * @param {TCHRONOMESSAGES_HEAT1UpdateArgs} args - Arguments to update one TCHRONOMESSAGES_HEAT1.
     * @example
     * // Update one TCHRONOMESSAGES_HEAT1
     * const tCHRONOMESSAGES_HEAT1 = await prisma.tCHRONOMESSAGES_HEAT1.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TCHRONOMESSAGES_HEAT1UpdateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT1UpdateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT1Client<TCHRONOMESSAGES_HEAT1>, Prisma__TCHRONOMESSAGES_HEAT1Client<TCHRONOMESSAGES_HEAT1GetPayload<T>>>

    /**
     * Delete zero or more TCHRONOMESSAGES_HEAT1s.
     * @param {TCHRONOMESSAGES_HEAT1DeleteManyArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT1s to delete.
     * @example
     * // Delete a few TCHRONOMESSAGES_HEAT1s
     * const { count } = await prisma.tCHRONOMESSAGES_HEAT1.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TCHRONOMESSAGES_HEAT1DeleteManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT1DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TCHRONOMESSAGES_HEAT1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT1UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TCHRONOMESSAGES_HEAT1s
     * const tCHRONOMESSAGES_HEAT1 = await prisma.tCHRONOMESSAGES_HEAT1.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TCHRONOMESSAGES_HEAT1UpdateManyArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT1UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TCHRONOMESSAGES_HEAT1.
     * @param {TCHRONOMESSAGES_HEAT1UpsertArgs} args - Arguments to update or create a TCHRONOMESSAGES_HEAT1.
     * @example
     * // Update or create a TCHRONOMESSAGES_HEAT1
     * const tCHRONOMESSAGES_HEAT1 = await prisma.tCHRONOMESSAGES_HEAT1.upsert({
     *   create: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT1
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT1 we want to update
     *   }
     * })
    **/
    upsert<T extends TCHRONOMESSAGES_HEAT1UpsertArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT1UpsertArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT1Client<TCHRONOMESSAGES_HEAT1>, Prisma__TCHRONOMESSAGES_HEAT1Client<TCHRONOMESSAGES_HEAT1GetPayload<T>>>

    /**
     * Count the number of TCHRONOMESSAGES_HEAT1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT1CountArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT1s to count.
     * @example
     * // Count the number of TCHRONOMESSAGES_HEAT1s
     * const count = await prisma.tCHRONOMESSAGES_HEAT1.count({
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT1s we want to count
     *   }
     * })
    **/
    count<T extends TCHRONOMESSAGES_HEAT1CountArgs>(
      args?: Subset<T, TCHRONOMESSAGES_HEAT1CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TCHRONOMESSAGES_HEAT1CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TCHRONOMESSAGES_HEAT1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT1AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TCHRONOMESSAGES_HEAT1AggregateArgs>(args: Subset<T, TCHRONOMESSAGES_HEAT1AggregateArgs>): PrismaPromise<GetTCHRONOMESSAGES_HEAT1AggregateType<T>>

    /**
     * Group by TCHRONOMESSAGES_HEAT1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT1GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TCHRONOMESSAGES_HEAT1GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TCHRONOMESSAGES_HEAT1GroupByArgs['orderBy'] }
        : { orderBy?: TCHRONOMESSAGES_HEAT1GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TCHRONOMESSAGES_HEAT1GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTCHRONOMESSAGES_HEAT1GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TCHRONOMESSAGES_HEAT1.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TCHRONOMESSAGES_HEAT1Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TCHRONOMESSAGES_HEAT1 findUnique
   */
  export type TCHRONOMESSAGES_HEAT1FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT1
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT1Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT1 to fetch.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT1WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT1 findFirst
   */
  export type TCHRONOMESSAGES_HEAT1FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT1
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT1Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT1 to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TCHRONOMESSAGES_HEAT1s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TCHRONOMESSAGES_HEAT1s.
     * 
    **/
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT1ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT1 findMany
   */
  export type TCHRONOMESSAGES_HEAT1FindManyArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT1
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT1Select | null
    /**
     * Filter, which TCHRONOMESSAGES_HEAT1s to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TCHRONOMESSAGES_HEAT1s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT1s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT1ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT1 create
   */
  export type TCHRONOMESSAGES_HEAT1CreateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT1
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT1Select | null
    /**
     * The data needed to create a TCHRONOMESSAGES_HEAT1.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT1CreateInput, TCHRONOMESSAGES_HEAT1UncheckedCreateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT1 update
   */
  export type TCHRONOMESSAGES_HEAT1UpdateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT1
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT1Select | null
    /**
     * The data needed to update a TCHRONOMESSAGES_HEAT1.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT1UpdateInput, TCHRONOMESSAGES_HEAT1UncheckedUpdateInput>
    /**
     * Choose, which TCHRONOMESSAGES_HEAT1 to update.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT1WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT1 updateMany
   */
  export type TCHRONOMESSAGES_HEAT1UpdateManyArgs = {
    /**
     * The data used to update TCHRONOMESSAGES_HEAT1s.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT1UpdateManyMutationInput, TCHRONOMESSAGES_HEAT1UncheckedUpdateManyInput>
    /**
     * Filter which TCHRONOMESSAGES_HEAT1s to update
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT1WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT1 upsert
   */
  export type TCHRONOMESSAGES_HEAT1UpsertArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT1
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT1Select | null
    /**
     * The filter to search for the TCHRONOMESSAGES_HEAT1 to update in case it exists.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT1WhereUniqueInput
    /**
     * In case the TCHRONOMESSAGES_HEAT1 found by the `where` argument doesn't exist, create a new TCHRONOMESSAGES_HEAT1 with this data.
     * 
    **/
    create: XOR<TCHRONOMESSAGES_HEAT1CreateInput, TCHRONOMESSAGES_HEAT1UncheckedCreateInput>
    /**
     * In case the TCHRONOMESSAGES_HEAT1 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TCHRONOMESSAGES_HEAT1UpdateInput, TCHRONOMESSAGES_HEAT1UncheckedUpdateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT1 delete
   */
  export type TCHRONOMESSAGES_HEAT1DeleteArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT1
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT1Select | null
    /**
     * Filter which TCHRONOMESSAGES_HEAT1 to delete.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT1WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT1 deleteMany
   */
  export type TCHRONOMESSAGES_HEAT1DeleteManyArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT1s to delete
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT1WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT1 without action
   */
  export type TCHRONOMESSAGES_HEAT1Args = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT1
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT1Select | null
  }



  /**
   * Model TCHRONOMESSAGES_HEAT2
   */


  export type AggregateTCHRONOMESSAGES_HEAT2 = {
    _count: TCHRONOMESSAGES_HEAT2CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT2AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT2SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT2MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT2MaxAggregateOutputType | null
  }

  export type TCHRONOMESSAGES_HEAT2AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT2SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT2MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT2MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT2CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_TRANSPONDER: number
    C_CANAL: number
    C_MESSAGE: number
    _all: number
  }


  export type TCHRONOMESSAGES_HEAT2AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT2SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT2MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT2MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT2CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
    _all?: true
  }

  export type TCHRONOMESSAGES_HEAT2AggregateArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT2 to aggregate.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TCHRONOMESSAGES_HEAT2s
    **/
    _count?: true | TCHRONOMESSAGES_HEAT2CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TCHRONOMESSAGES_HEAT2AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TCHRONOMESSAGES_HEAT2SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TCHRONOMESSAGES_HEAT2MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TCHRONOMESSAGES_HEAT2MaxAggregateInputType
  }

  export type GetTCHRONOMESSAGES_HEAT2AggregateType<T extends TCHRONOMESSAGES_HEAT2AggregateArgs> = {
        [P in keyof T & keyof AggregateTCHRONOMESSAGES_HEAT2]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT2[P]>
      : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT2[P]>
  }




  export type TCHRONOMESSAGES_HEAT2GroupByArgs = {
    where?: TCHRONOMESSAGES_HEAT2WhereInput
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT2OrderByWithAggregationInput>
    by: Array<TCHRONOMESSAGES_HEAT2ScalarFieldEnum>
    having?: TCHRONOMESSAGES_HEAT2ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TCHRONOMESSAGES_HEAT2CountAggregateInputType | true
    _avg?: TCHRONOMESSAGES_HEAT2AvgAggregateInputType
    _sum?: TCHRONOMESSAGES_HEAT2SumAggregateInputType
    _min?: TCHRONOMESSAGES_HEAT2MinAggregateInputType
    _max?: TCHRONOMESSAGES_HEAT2MaxAggregateInputType
  }


  export type TCHRONOMESSAGES_HEAT2GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
    _count: TCHRONOMESSAGES_HEAT2CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT2AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT2SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT2MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT2MaxAggregateOutputType | null
  }

  type GetTCHRONOMESSAGES_HEAT2GroupByPayload<T extends TCHRONOMESSAGES_HEAT2GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TCHRONOMESSAGES_HEAT2GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TCHRONOMESSAGES_HEAT2GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TCHRONOMESSAGES_HEAT2GroupByOutputType[P]>
            : GetScalarType<T[P], TCHRONOMESSAGES_HEAT2GroupByOutputType[P]>
        }
      >
    >


  export type TCHRONOMESSAGES_HEAT2Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TRANSPONDER?: boolean
    C_CANAL?: boolean
    C_MESSAGE?: boolean
  }

  export type TCHRONOMESSAGES_HEAT2GetPayload<
    S extends boolean | null | undefined | TCHRONOMESSAGES_HEAT2Args,
    U = keyof S
      > = S extends true
        ? TCHRONOMESSAGES_HEAT2
    : S extends undefined
    ? never
    : S extends TCHRONOMESSAGES_HEAT2Args | TCHRONOMESSAGES_HEAT2FindManyArgs
    ?'include' extends U
    ? TCHRONOMESSAGES_HEAT2 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TCHRONOMESSAGES_HEAT2 ? TCHRONOMESSAGES_HEAT2[P] : never
  } 
    : TCHRONOMESSAGES_HEAT2
  : TCHRONOMESSAGES_HEAT2


  type TCHRONOMESSAGES_HEAT2CountArgs = Merge<
    Omit<TCHRONOMESSAGES_HEAT2FindManyArgs, 'select' | 'include'> & {
      select?: TCHRONOMESSAGES_HEAT2CountAggregateInputType | true
    }
  >

  export interface TCHRONOMESSAGES_HEAT2Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TCHRONOMESSAGES_HEAT2 that matches the filter.
     * @param {TCHRONOMESSAGES_HEAT2FindUniqueArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT2
     * @example
     * // Get one TCHRONOMESSAGES_HEAT2
     * const tCHRONOMESSAGES_HEAT2 = await prisma.tCHRONOMESSAGES_HEAT2.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TCHRONOMESSAGES_HEAT2FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT2FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TCHRONOMESSAGES_HEAT2'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT2Client<TCHRONOMESSAGES_HEAT2>, Prisma__TCHRONOMESSAGES_HEAT2Client<TCHRONOMESSAGES_HEAT2GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT2Client<TCHRONOMESSAGES_HEAT2 | null >, Prisma__TCHRONOMESSAGES_HEAT2Client<TCHRONOMESSAGES_HEAT2GetPayload<T> | null >>

    /**
     * Find the first TCHRONOMESSAGES_HEAT2 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT2FindFirstArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT2
     * @example
     * // Get one TCHRONOMESSAGES_HEAT2
     * const tCHRONOMESSAGES_HEAT2 = await prisma.tCHRONOMESSAGES_HEAT2.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TCHRONOMESSAGES_HEAT2FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT2FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TCHRONOMESSAGES_HEAT2'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT2Client<TCHRONOMESSAGES_HEAT2>, Prisma__TCHRONOMESSAGES_HEAT2Client<TCHRONOMESSAGES_HEAT2GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT2Client<TCHRONOMESSAGES_HEAT2 | null >, Prisma__TCHRONOMESSAGES_HEAT2Client<TCHRONOMESSAGES_HEAT2GetPayload<T> | null >>

    /**
     * Find zero or more TCHRONOMESSAGES_HEAT2s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT2FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TCHRONOMESSAGES_HEAT2s
     * const tCHRONOMESSAGES_HEAT2s = await prisma.tCHRONOMESSAGES_HEAT2.findMany()
     * 
     * // Get first 10 TCHRONOMESSAGES_HEAT2s
     * const tCHRONOMESSAGES_HEAT2s = await prisma.tCHRONOMESSAGES_HEAT2.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tCHRONOMESSAGES_HEAT2WithC_LINEOnly = await prisma.tCHRONOMESSAGES_HEAT2.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TCHRONOMESSAGES_HEAT2FindManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT2FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TCHRONOMESSAGES_HEAT2>>, PrismaPromise<Array<TCHRONOMESSAGES_HEAT2GetPayload<T>>>>

    /**
     * Create a TCHRONOMESSAGES_HEAT2.
     * @param {TCHRONOMESSAGES_HEAT2CreateArgs} args - Arguments to create a TCHRONOMESSAGES_HEAT2.
     * @example
     * // Create one TCHRONOMESSAGES_HEAT2
     * const TCHRONOMESSAGES_HEAT2 = await prisma.tCHRONOMESSAGES_HEAT2.create({
     *   data: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT2
     *   }
     * })
     * 
    **/
    create<T extends TCHRONOMESSAGES_HEAT2CreateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT2CreateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT2Client<TCHRONOMESSAGES_HEAT2>, Prisma__TCHRONOMESSAGES_HEAT2Client<TCHRONOMESSAGES_HEAT2GetPayload<T>>>

    /**
     * Delete a TCHRONOMESSAGES_HEAT2.
     * @param {TCHRONOMESSAGES_HEAT2DeleteArgs} args - Arguments to delete one TCHRONOMESSAGES_HEAT2.
     * @example
     * // Delete one TCHRONOMESSAGES_HEAT2
     * const TCHRONOMESSAGES_HEAT2 = await prisma.tCHRONOMESSAGES_HEAT2.delete({
     *   where: {
     *     // ... filter to delete one TCHRONOMESSAGES_HEAT2
     *   }
     * })
     * 
    **/
    delete<T extends TCHRONOMESSAGES_HEAT2DeleteArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT2DeleteArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT2Client<TCHRONOMESSAGES_HEAT2>, Prisma__TCHRONOMESSAGES_HEAT2Client<TCHRONOMESSAGES_HEAT2GetPayload<T>>>

    /**
     * Update one TCHRONOMESSAGES_HEAT2.
     * @param {TCHRONOMESSAGES_HEAT2UpdateArgs} args - Arguments to update one TCHRONOMESSAGES_HEAT2.
     * @example
     * // Update one TCHRONOMESSAGES_HEAT2
     * const tCHRONOMESSAGES_HEAT2 = await prisma.tCHRONOMESSAGES_HEAT2.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TCHRONOMESSAGES_HEAT2UpdateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT2UpdateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT2Client<TCHRONOMESSAGES_HEAT2>, Prisma__TCHRONOMESSAGES_HEAT2Client<TCHRONOMESSAGES_HEAT2GetPayload<T>>>

    /**
     * Delete zero or more TCHRONOMESSAGES_HEAT2s.
     * @param {TCHRONOMESSAGES_HEAT2DeleteManyArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT2s to delete.
     * @example
     * // Delete a few TCHRONOMESSAGES_HEAT2s
     * const { count } = await prisma.tCHRONOMESSAGES_HEAT2.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TCHRONOMESSAGES_HEAT2DeleteManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT2DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TCHRONOMESSAGES_HEAT2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT2UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TCHRONOMESSAGES_HEAT2s
     * const tCHRONOMESSAGES_HEAT2 = await prisma.tCHRONOMESSAGES_HEAT2.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TCHRONOMESSAGES_HEAT2UpdateManyArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT2UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TCHRONOMESSAGES_HEAT2.
     * @param {TCHRONOMESSAGES_HEAT2UpsertArgs} args - Arguments to update or create a TCHRONOMESSAGES_HEAT2.
     * @example
     * // Update or create a TCHRONOMESSAGES_HEAT2
     * const tCHRONOMESSAGES_HEAT2 = await prisma.tCHRONOMESSAGES_HEAT2.upsert({
     *   create: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT2
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT2 we want to update
     *   }
     * })
    **/
    upsert<T extends TCHRONOMESSAGES_HEAT2UpsertArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT2UpsertArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT2Client<TCHRONOMESSAGES_HEAT2>, Prisma__TCHRONOMESSAGES_HEAT2Client<TCHRONOMESSAGES_HEAT2GetPayload<T>>>

    /**
     * Count the number of TCHRONOMESSAGES_HEAT2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT2CountArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT2s to count.
     * @example
     * // Count the number of TCHRONOMESSAGES_HEAT2s
     * const count = await prisma.tCHRONOMESSAGES_HEAT2.count({
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT2s we want to count
     *   }
     * })
    **/
    count<T extends TCHRONOMESSAGES_HEAT2CountArgs>(
      args?: Subset<T, TCHRONOMESSAGES_HEAT2CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TCHRONOMESSAGES_HEAT2CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TCHRONOMESSAGES_HEAT2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT2AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TCHRONOMESSAGES_HEAT2AggregateArgs>(args: Subset<T, TCHRONOMESSAGES_HEAT2AggregateArgs>): PrismaPromise<GetTCHRONOMESSAGES_HEAT2AggregateType<T>>

    /**
     * Group by TCHRONOMESSAGES_HEAT2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT2GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TCHRONOMESSAGES_HEAT2GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TCHRONOMESSAGES_HEAT2GroupByArgs['orderBy'] }
        : { orderBy?: TCHRONOMESSAGES_HEAT2GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TCHRONOMESSAGES_HEAT2GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTCHRONOMESSAGES_HEAT2GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TCHRONOMESSAGES_HEAT2.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TCHRONOMESSAGES_HEAT2Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TCHRONOMESSAGES_HEAT2 findUnique
   */
  export type TCHRONOMESSAGES_HEAT2FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT2
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT2Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT2 to fetch.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT2WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT2 findFirst
   */
  export type TCHRONOMESSAGES_HEAT2FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT2
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT2Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT2 to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TCHRONOMESSAGES_HEAT2s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TCHRONOMESSAGES_HEAT2s.
     * 
    **/
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT2ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT2 findMany
   */
  export type TCHRONOMESSAGES_HEAT2FindManyArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT2
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT2Select | null
    /**
     * Filter, which TCHRONOMESSAGES_HEAT2s to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TCHRONOMESSAGES_HEAT2s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT2s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT2ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT2 create
   */
  export type TCHRONOMESSAGES_HEAT2CreateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT2
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT2Select | null
    /**
     * The data needed to create a TCHRONOMESSAGES_HEAT2.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT2CreateInput, TCHRONOMESSAGES_HEAT2UncheckedCreateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT2 update
   */
  export type TCHRONOMESSAGES_HEAT2UpdateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT2
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT2Select | null
    /**
     * The data needed to update a TCHRONOMESSAGES_HEAT2.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT2UpdateInput, TCHRONOMESSAGES_HEAT2UncheckedUpdateInput>
    /**
     * Choose, which TCHRONOMESSAGES_HEAT2 to update.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT2WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT2 updateMany
   */
  export type TCHRONOMESSAGES_HEAT2UpdateManyArgs = {
    /**
     * The data used to update TCHRONOMESSAGES_HEAT2s.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT2UpdateManyMutationInput, TCHRONOMESSAGES_HEAT2UncheckedUpdateManyInput>
    /**
     * Filter which TCHRONOMESSAGES_HEAT2s to update
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT2WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT2 upsert
   */
  export type TCHRONOMESSAGES_HEAT2UpsertArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT2
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT2Select | null
    /**
     * The filter to search for the TCHRONOMESSAGES_HEAT2 to update in case it exists.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT2WhereUniqueInput
    /**
     * In case the TCHRONOMESSAGES_HEAT2 found by the `where` argument doesn't exist, create a new TCHRONOMESSAGES_HEAT2 with this data.
     * 
    **/
    create: XOR<TCHRONOMESSAGES_HEAT2CreateInput, TCHRONOMESSAGES_HEAT2UncheckedCreateInput>
    /**
     * In case the TCHRONOMESSAGES_HEAT2 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TCHRONOMESSAGES_HEAT2UpdateInput, TCHRONOMESSAGES_HEAT2UncheckedUpdateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT2 delete
   */
  export type TCHRONOMESSAGES_HEAT2DeleteArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT2
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT2Select | null
    /**
     * Filter which TCHRONOMESSAGES_HEAT2 to delete.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT2WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT2 deleteMany
   */
  export type TCHRONOMESSAGES_HEAT2DeleteManyArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT2s to delete
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT2WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT2 without action
   */
  export type TCHRONOMESSAGES_HEAT2Args = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT2
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT2Select | null
  }



  /**
   * Model TCHRONOMESSAGES_HEAT3
   */


  export type AggregateTCHRONOMESSAGES_HEAT3 = {
    _count: TCHRONOMESSAGES_HEAT3CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT3AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT3SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT3MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT3MaxAggregateOutputType | null
  }

  export type TCHRONOMESSAGES_HEAT3AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT3SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT3MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT3MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT3CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_TRANSPONDER: number
    C_CANAL: number
    C_MESSAGE: number
    _all: number
  }


  export type TCHRONOMESSAGES_HEAT3AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT3SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT3MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT3MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT3CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
    _all?: true
  }

  export type TCHRONOMESSAGES_HEAT3AggregateArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT3 to aggregate.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT3WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT3s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT3OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT3WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT3s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT3s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TCHRONOMESSAGES_HEAT3s
    **/
    _count?: true | TCHRONOMESSAGES_HEAT3CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TCHRONOMESSAGES_HEAT3AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TCHRONOMESSAGES_HEAT3SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TCHRONOMESSAGES_HEAT3MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TCHRONOMESSAGES_HEAT3MaxAggregateInputType
  }

  export type GetTCHRONOMESSAGES_HEAT3AggregateType<T extends TCHRONOMESSAGES_HEAT3AggregateArgs> = {
        [P in keyof T & keyof AggregateTCHRONOMESSAGES_HEAT3]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT3[P]>
      : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT3[P]>
  }




  export type TCHRONOMESSAGES_HEAT3GroupByArgs = {
    where?: TCHRONOMESSAGES_HEAT3WhereInput
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT3OrderByWithAggregationInput>
    by: Array<TCHRONOMESSAGES_HEAT3ScalarFieldEnum>
    having?: TCHRONOMESSAGES_HEAT3ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TCHRONOMESSAGES_HEAT3CountAggregateInputType | true
    _avg?: TCHRONOMESSAGES_HEAT3AvgAggregateInputType
    _sum?: TCHRONOMESSAGES_HEAT3SumAggregateInputType
    _min?: TCHRONOMESSAGES_HEAT3MinAggregateInputType
    _max?: TCHRONOMESSAGES_HEAT3MaxAggregateInputType
  }


  export type TCHRONOMESSAGES_HEAT3GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
    _count: TCHRONOMESSAGES_HEAT3CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT3AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT3SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT3MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT3MaxAggregateOutputType | null
  }

  type GetTCHRONOMESSAGES_HEAT3GroupByPayload<T extends TCHRONOMESSAGES_HEAT3GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TCHRONOMESSAGES_HEAT3GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TCHRONOMESSAGES_HEAT3GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TCHRONOMESSAGES_HEAT3GroupByOutputType[P]>
            : GetScalarType<T[P], TCHRONOMESSAGES_HEAT3GroupByOutputType[P]>
        }
      >
    >


  export type TCHRONOMESSAGES_HEAT3Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TRANSPONDER?: boolean
    C_CANAL?: boolean
    C_MESSAGE?: boolean
  }

  export type TCHRONOMESSAGES_HEAT3GetPayload<
    S extends boolean | null | undefined | TCHRONOMESSAGES_HEAT3Args,
    U = keyof S
      > = S extends true
        ? TCHRONOMESSAGES_HEAT3
    : S extends undefined
    ? never
    : S extends TCHRONOMESSAGES_HEAT3Args | TCHRONOMESSAGES_HEAT3FindManyArgs
    ?'include' extends U
    ? TCHRONOMESSAGES_HEAT3 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TCHRONOMESSAGES_HEAT3 ? TCHRONOMESSAGES_HEAT3[P] : never
  } 
    : TCHRONOMESSAGES_HEAT3
  : TCHRONOMESSAGES_HEAT3


  type TCHRONOMESSAGES_HEAT3CountArgs = Merge<
    Omit<TCHRONOMESSAGES_HEAT3FindManyArgs, 'select' | 'include'> & {
      select?: TCHRONOMESSAGES_HEAT3CountAggregateInputType | true
    }
  >

  export interface TCHRONOMESSAGES_HEAT3Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TCHRONOMESSAGES_HEAT3 that matches the filter.
     * @param {TCHRONOMESSAGES_HEAT3FindUniqueArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT3
     * @example
     * // Get one TCHRONOMESSAGES_HEAT3
     * const tCHRONOMESSAGES_HEAT3 = await prisma.tCHRONOMESSAGES_HEAT3.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TCHRONOMESSAGES_HEAT3FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT3FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TCHRONOMESSAGES_HEAT3'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT3Client<TCHRONOMESSAGES_HEAT3>, Prisma__TCHRONOMESSAGES_HEAT3Client<TCHRONOMESSAGES_HEAT3GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT3Client<TCHRONOMESSAGES_HEAT3 | null >, Prisma__TCHRONOMESSAGES_HEAT3Client<TCHRONOMESSAGES_HEAT3GetPayload<T> | null >>

    /**
     * Find the first TCHRONOMESSAGES_HEAT3 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT3FindFirstArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT3
     * @example
     * // Get one TCHRONOMESSAGES_HEAT3
     * const tCHRONOMESSAGES_HEAT3 = await prisma.tCHRONOMESSAGES_HEAT3.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TCHRONOMESSAGES_HEAT3FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT3FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TCHRONOMESSAGES_HEAT3'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT3Client<TCHRONOMESSAGES_HEAT3>, Prisma__TCHRONOMESSAGES_HEAT3Client<TCHRONOMESSAGES_HEAT3GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT3Client<TCHRONOMESSAGES_HEAT3 | null >, Prisma__TCHRONOMESSAGES_HEAT3Client<TCHRONOMESSAGES_HEAT3GetPayload<T> | null >>

    /**
     * Find zero or more TCHRONOMESSAGES_HEAT3s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT3FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TCHRONOMESSAGES_HEAT3s
     * const tCHRONOMESSAGES_HEAT3s = await prisma.tCHRONOMESSAGES_HEAT3.findMany()
     * 
     * // Get first 10 TCHRONOMESSAGES_HEAT3s
     * const tCHRONOMESSAGES_HEAT3s = await prisma.tCHRONOMESSAGES_HEAT3.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tCHRONOMESSAGES_HEAT3WithC_LINEOnly = await prisma.tCHRONOMESSAGES_HEAT3.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TCHRONOMESSAGES_HEAT3FindManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT3FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TCHRONOMESSAGES_HEAT3>>, PrismaPromise<Array<TCHRONOMESSAGES_HEAT3GetPayload<T>>>>

    /**
     * Create a TCHRONOMESSAGES_HEAT3.
     * @param {TCHRONOMESSAGES_HEAT3CreateArgs} args - Arguments to create a TCHRONOMESSAGES_HEAT3.
     * @example
     * // Create one TCHRONOMESSAGES_HEAT3
     * const TCHRONOMESSAGES_HEAT3 = await prisma.tCHRONOMESSAGES_HEAT3.create({
     *   data: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT3
     *   }
     * })
     * 
    **/
    create<T extends TCHRONOMESSAGES_HEAT3CreateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT3CreateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT3Client<TCHRONOMESSAGES_HEAT3>, Prisma__TCHRONOMESSAGES_HEAT3Client<TCHRONOMESSAGES_HEAT3GetPayload<T>>>

    /**
     * Delete a TCHRONOMESSAGES_HEAT3.
     * @param {TCHRONOMESSAGES_HEAT3DeleteArgs} args - Arguments to delete one TCHRONOMESSAGES_HEAT3.
     * @example
     * // Delete one TCHRONOMESSAGES_HEAT3
     * const TCHRONOMESSAGES_HEAT3 = await prisma.tCHRONOMESSAGES_HEAT3.delete({
     *   where: {
     *     // ... filter to delete one TCHRONOMESSAGES_HEAT3
     *   }
     * })
     * 
    **/
    delete<T extends TCHRONOMESSAGES_HEAT3DeleteArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT3DeleteArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT3Client<TCHRONOMESSAGES_HEAT3>, Prisma__TCHRONOMESSAGES_HEAT3Client<TCHRONOMESSAGES_HEAT3GetPayload<T>>>

    /**
     * Update one TCHRONOMESSAGES_HEAT3.
     * @param {TCHRONOMESSAGES_HEAT3UpdateArgs} args - Arguments to update one TCHRONOMESSAGES_HEAT3.
     * @example
     * // Update one TCHRONOMESSAGES_HEAT3
     * const tCHRONOMESSAGES_HEAT3 = await prisma.tCHRONOMESSAGES_HEAT3.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TCHRONOMESSAGES_HEAT3UpdateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT3UpdateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT3Client<TCHRONOMESSAGES_HEAT3>, Prisma__TCHRONOMESSAGES_HEAT3Client<TCHRONOMESSAGES_HEAT3GetPayload<T>>>

    /**
     * Delete zero or more TCHRONOMESSAGES_HEAT3s.
     * @param {TCHRONOMESSAGES_HEAT3DeleteManyArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT3s to delete.
     * @example
     * // Delete a few TCHRONOMESSAGES_HEAT3s
     * const { count } = await prisma.tCHRONOMESSAGES_HEAT3.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TCHRONOMESSAGES_HEAT3DeleteManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT3DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TCHRONOMESSAGES_HEAT3s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT3UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TCHRONOMESSAGES_HEAT3s
     * const tCHRONOMESSAGES_HEAT3 = await prisma.tCHRONOMESSAGES_HEAT3.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TCHRONOMESSAGES_HEAT3UpdateManyArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT3UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TCHRONOMESSAGES_HEAT3.
     * @param {TCHRONOMESSAGES_HEAT3UpsertArgs} args - Arguments to update or create a TCHRONOMESSAGES_HEAT3.
     * @example
     * // Update or create a TCHRONOMESSAGES_HEAT3
     * const tCHRONOMESSAGES_HEAT3 = await prisma.tCHRONOMESSAGES_HEAT3.upsert({
     *   create: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT3
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT3 we want to update
     *   }
     * })
    **/
    upsert<T extends TCHRONOMESSAGES_HEAT3UpsertArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT3UpsertArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT3Client<TCHRONOMESSAGES_HEAT3>, Prisma__TCHRONOMESSAGES_HEAT3Client<TCHRONOMESSAGES_HEAT3GetPayload<T>>>

    /**
     * Count the number of TCHRONOMESSAGES_HEAT3s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT3CountArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT3s to count.
     * @example
     * // Count the number of TCHRONOMESSAGES_HEAT3s
     * const count = await prisma.tCHRONOMESSAGES_HEAT3.count({
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT3s we want to count
     *   }
     * })
    **/
    count<T extends TCHRONOMESSAGES_HEAT3CountArgs>(
      args?: Subset<T, TCHRONOMESSAGES_HEAT3CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TCHRONOMESSAGES_HEAT3CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TCHRONOMESSAGES_HEAT3.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT3AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TCHRONOMESSAGES_HEAT3AggregateArgs>(args: Subset<T, TCHRONOMESSAGES_HEAT3AggregateArgs>): PrismaPromise<GetTCHRONOMESSAGES_HEAT3AggregateType<T>>

    /**
     * Group by TCHRONOMESSAGES_HEAT3.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT3GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TCHRONOMESSAGES_HEAT3GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TCHRONOMESSAGES_HEAT3GroupByArgs['orderBy'] }
        : { orderBy?: TCHRONOMESSAGES_HEAT3GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TCHRONOMESSAGES_HEAT3GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTCHRONOMESSAGES_HEAT3GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TCHRONOMESSAGES_HEAT3.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TCHRONOMESSAGES_HEAT3Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TCHRONOMESSAGES_HEAT3 findUnique
   */
  export type TCHRONOMESSAGES_HEAT3FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT3
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT3Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT3 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT3 to fetch.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT3WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT3 findFirst
   */
  export type TCHRONOMESSAGES_HEAT3FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT3
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT3Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT3 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT3 to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT3WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT3s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT3OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TCHRONOMESSAGES_HEAT3s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT3WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT3s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT3s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TCHRONOMESSAGES_HEAT3s.
     * 
    **/
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT3ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT3 findMany
   */
  export type TCHRONOMESSAGES_HEAT3FindManyArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT3
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT3Select | null
    /**
     * Filter, which TCHRONOMESSAGES_HEAT3s to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT3WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT3s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT3OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TCHRONOMESSAGES_HEAT3s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT3WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT3s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT3s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT3ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT3 create
   */
  export type TCHRONOMESSAGES_HEAT3CreateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT3
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT3Select | null
    /**
     * The data needed to create a TCHRONOMESSAGES_HEAT3.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT3CreateInput, TCHRONOMESSAGES_HEAT3UncheckedCreateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT3 update
   */
  export type TCHRONOMESSAGES_HEAT3UpdateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT3
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT3Select | null
    /**
     * The data needed to update a TCHRONOMESSAGES_HEAT3.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT3UpdateInput, TCHRONOMESSAGES_HEAT3UncheckedUpdateInput>
    /**
     * Choose, which TCHRONOMESSAGES_HEAT3 to update.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT3WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT3 updateMany
   */
  export type TCHRONOMESSAGES_HEAT3UpdateManyArgs = {
    /**
     * The data used to update TCHRONOMESSAGES_HEAT3s.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT3UpdateManyMutationInput, TCHRONOMESSAGES_HEAT3UncheckedUpdateManyInput>
    /**
     * Filter which TCHRONOMESSAGES_HEAT3s to update
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT3WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT3 upsert
   */
  export type TCHRONOMESSAGES_HEAT3UpsertArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT3
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT3Select | null
    /**
     * The filter to search for the TCHRONOMESSAGES_HEAT3 to update in case it exists.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT3WhereUniqueInput
    /**
     * In case the TCHRONOMESSAGES_HEAT3 found by the `where` argument doesn't exist, create a new TCHRONOMESSAGES_HEAT3 with this data.
     * 
    **/
    create: XOR<TCHRONOMESSAGES_HEAT3CreateInput, TCHRONOMESSAGES_HEAT3UncheckedCreateInput>
    /**
     * In case the TCHRONOMESSAGES_HEAT3 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TCHRONOMESSAGES_HEAT3UpdateInput, TCHRONOMESSAGES_HEAT3UncheckedUpdateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT3 delete
   */
  export type TCHRONOMESSAGES_HEAT3DeleteArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT3
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT3Select | null
    /**
     * Filter which TCHRONOMESSAGES_HEAT3 to delete.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT3WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT3 deleteMany
   */
  export type TCHRONOMESSAGES_HEAT3DeleteManyArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT3s to delete
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT3WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT3 without action
   */
  export type TCHRONOMESSAGES_HEAT3Args = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT3
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT3Select | null
  }



  /**
   * Model TCHRONOMESSAGES_HEAT4
   */


  export type AggregateTCHRONOMESSAGES_HEAT4 = {
    _count: TCHRONOMESSAGES_HEAT4CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT4AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT4SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT4MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT4MaxAggregateOutputType | null
  }

  export type TCHRONOMESSAGES_HEAT4AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT4SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT4MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT4MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT4CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_TRANSPONDER: number
    C_CANAL: number
    C_MESSAGE: number
    _all: number
  }


  export type TCHRONOMESSAGES_HEAT4AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT4SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT4MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT4MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT4CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
    _all?: true
  }

  export type TCHRONOMESSAGES_HEAT4AggregateArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT4 to aggregate.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT4WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT4s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT4OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT4WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT4s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT4s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TCHRONOMESSAGES_HEAT4s
    **/
    _count?: true | TCHRONOMESSAGES_HEAT4CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TCHRONOMESSAGES_HEAT4AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TCHRONOMESSAGES_HEAT4SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TCHRONOMESSAGES_HEAT4MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TCHRONOMESSAGES_HEAT4MaxAggregateInputType
  }

  export type GetTCHRONOMESSAGES_HEAT4AggregateType<T extends TCHRONOMESSAGES_HEAT4AggregateArgs> = {
        [P in keyof T & keyof AggregateTCHRONOMESSAGES_HEAT4]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT4[P]>
      : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT4[P]>
  }




  export type TCHRONOMESSAGES_HEAT4GroupByArgs = {
    where?: TCHRONOMESSAGES_HEAT4WhereInput
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT4OrderByWithAggregationInput>
    by: Array<TCHRONOMESSAGES_HEAT4ScalarFieldEnum>
    having?: TCHRONOMESSAGES_HEAT4ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TCHRONOMESSAGES_HEAT4CountAggregateInputType | true
    _avg?: TCHRONOMESSAGES_HEAT4AvgAggregateInputType
    _sum?: TCHRONOMESSAGES_HEAT4SumAggregateInputType
    _min?: TCHRONOMESSAGES_HEAT4MinAggregateInputType
    _max?: TCHRONOMESSAGES_HEAT4MaxAggregateInputType
  }


  export type TCHRONOMESSAGES_HEAT4GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
    _count: TCHRONOMESSAGES_HEAT4CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT4AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT4SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT4MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT4MaxAggregateOutputType | null
  }

  type GetTCHRONOMESSAGES_HEAT4GroupByPayload<T extends TCHRONOMESSAGES_HEAT4GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TCHRONOMESSAGES_HEAT4GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TCHRONOMESSAGES_HEAT4GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TCHRONOMESSAGES_HEAT4GroupByOutputType[P]>
            : GetScalarType<T[P], TCHRONOMESSAGES_HEAT4GroupByOutputType[P]>
        }
      >
    >


  export type TCHRONOMESSAGES_HEAT4Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TRANSPONDER?: boolean
    C_CANAL?: boolean
    C_MESSAGE?: boolean
  }

  export type TCHRONOMESSAGES_HEAT4GetPayload<
    S extends boolean | null | undefined | TCHRONOMESSAGES_HEAT4Args,
    U = keyof S
      > = S extends true
        ? TCHRONOMESSAGES_HEAT4
    : S extends undefined
    ? never
    : S extends TCHRONOMESSAGES_HEAT4Args | TCHRONOMESSAGES_HEAT4FindManyArgs
    ?'include' extends U
    ? TCHRONOMESSAGES_HEAT4 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TCHRONOMESSAGES_HEAT4 ? TCHRONOMESSAGES_HEAT4[P] : never
  } 
    : TCHRONOMESSAGES_HEAT4
  : TCHRONOMESSAGES_HEAT4


  type TCHRONOMESSAGES_HEAT4CountArgs = Merge<
    Omit<TCHRONOMESSAGES_HEAT4FindManyArgs, 'select' | 'include'> & {
      select?: TCHRONOMESSAGES_HEAT4CountAggregateInputType | true
    }
  >

  export interface TCHRONOMESSAGES_HEAT4Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TCHRONOMESSAGES_HEAT4 that matches the filter.
     * @param {TCHRONOMESSAGES_HEAT4FindUniqueArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT4
     * @example
     * // Get one TCHRONOMESSAGES_HEAT4
     * const tCHRONOMESSAGES_HEAT4 = await prisma.tCHRONOMESSAGES_HEAT4.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TCHRONOMESSAGES_HEAT4FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT4FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TCHRONOMESSAGES_HEAT4'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT4Client<TCHRONOMESSAGES_HEAT4>, Prisma__TCHRONOMESSAGES_HEAT4Client<TCHRONOMESSAGES_HEAT4GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT4Client<TCHRONOMESSAGES_HEAT4 | null >, Prisma__TCHRONOMESSAGES_HEAT4Client<TCHRONOMESSAGES_HEAT4GetPayload<T> | null >>

    /**
     * Find the first TCHRONOMESSAGES_HEAT4 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT4FindFirstArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT4
     * @example
     * // Get one TCHRONOMESSAGES_HEAT4
     * const tCHRONOMESSAGES_HEAT4 = await prisma.tCHRONOMESSAGES_HEAT4.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TCHRONOMESSAGES_HEAT4FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT4FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TCHRONOMESSAGES_HEAT4'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT4Client<TCHRONOMESSAGES_HEAT4>, Prisma__TCHRONOMESSAGES_HEAT4Client<TCHRONOMESSAGES_HEAT4GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT4Client<TCHRONOMESSAGES_HEAT4 | null >, Prisma__TCHRONOMESSAGES_HEAT4Client<TCHRONOMESSAGES_HEAT4GetPayload<T> | null >>

    /**
     * Find zero or more TCHRONOMESSAGES_HEAT4s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT4FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TCHRONOMESSAGES_HEAT4s
     * const tCHRONOMESSAGES_HEAT4s = await prisma.tCHRONOMESSAGES_HEAT4.findMany()
     * 
     * // Get first 10 TCHRONOMESSAGES_HEAT4s
     * const tCHRONOMESSAGES_HEAT4s = await prisma.tCHRONOMESSAGES_HEAT4.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tCHRONOMESSAGES_HEAT4WithC_LINEOnly = await prisma.tCHRONOMESSAGES_HEAT4.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TCHRONOMESSAGES_HEAT4FindManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT4FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TCHRONOMESSAGES_HEAT4>>, PrismaPromise<Array<TCHRONOMESSAGES_HEAT4GetPayload<T>>>>

    /**
     * Create a TCHRONOMESSAGES_HEAT4.
     * @param {TCHRONOMESSAGES_HEAT4CreateArgs} args - Arguments to create a TCHRONOMESSAGES_HEAT4.
     * @example
     * // Create one TCHRONOMESSAGES_HEAT4
     * const TCHRONOMESSAGES_HEAT4 = await prisma.tCHRONOMESSAGES_HEAT4.create({
     *   data: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT4
     *   }
     * })
     * 
    **/
    create<T extends TCHRONOMESSAGES_HEAT4CreateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT4CreateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT4Client<TCHRONOMESSAGES_HEAT4>, Prisma__TCHRONOMESSAGES_HEAT4Client<TCHRONOMESSAGES_HEAT4GetPayload<T>>>

    /**
     * Delete a TCHRONOMESSAGES_HEAT4.
     * @param {TCHRONOMESSAGES_HEAT4DeleteArgs} args - Arguments to delete one TCHRONOMESSAGES_HEAT4.
     * @example
     * // Delete one TCHRONOMESSAGES_HEAT4
     * const TCHRONOMESSAGES_HEAT4 = await prisma.tCHRONOMESSAGES_HEAT4.delete({
     *   where: {
     *     // ... filter to delete one TCHRONOMESSAGES_HEAT4
     *   }
     * })
     * 
    **/
    delete<T extends TCHRONOMESSAGES_HEAT4DeleteArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT4DeleteArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT4Client<TCHRONOMESSAGES_HEAT4>, Prisma__TCHRONOMESSAGES_HEAT4Client<TCHRONOMESSAGES_HEAT4GetPayload<T>>>

    /**
     * Update one TCHRONOMESSAGES_HEAT4.
     * @param {TCHRONOMESSAGES_HEAT4UpdateArgs} args - Arguments to update one TCHRONOMESSAGES_HEAT4.
     * @example
     * // Update one TCHRONOMESSAGES_HEAT4
     * const tCHRONOMESSAGES_HEAT4 = await prisma.tCHRONOMESSAGES_HEAT4.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TCHRONOMESSAGES_HEAT4UpdateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT4UpdateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT4Client<TCHRONOMESSAGES_HEAT4>, Prisma__TCHRONOMESSAGES_HEAT4Client<TCHRONOMESSAGES_HEAT4GetPayload<T>>>

    /**
     * Delete zero or more TCHRONOMESSAGES_HEAT4s.
     * @param {TCHRONOMESSAGES_HEAT4DeleteManyArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT4s to delete.
     * @example
     * // Delete a few TCHRONOMESSAGES_HEAT4s
     * const { count } = await prisma.tCHRONOMESSAGES_HEAT4.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TCHRONOMESSAGES_HEAT4DeleteManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT4DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TCHRONOMESSAGES_HEAT4s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT4UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TCHRONOMESSAGES_HEAT4s
     * const tCHRONOMESSAGES_HEAT4 = await prisma.tCHRONOMESSAGES_HEAT4.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TCHRONOMESSAGES_HEAT4UpdateManyArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT4UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TCHRONOMESSAGES_HEAT4.
     * @param {TCHRONOMESSAGES_HEAT4UpsertArgs} args - Arguments to update or create a TCHRONOMESSAGES_HEAT4.
     * @example
     * // Update or create a TCHRONOMESSAGES_HEAT4
     * const tCHRONOMESSAGES_HEAT4 = await prisma.tCHRONOMESSAGES_HEAT4.upsert({
     *   create: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT4
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT4 we want to update
     *   }
     * })
    **/
    upsert<T extends TCHRONOMESSAGES_HEAT4UpsertArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT4UpsertArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT4Client<TCHRONOMESSAGES_HEAT4>, Prisma__TCHRONOMESSAGES_HEAT4Client<TCHRONOMESSAGES_HEAT4GetPayload<T>>>

    /**
     * Count the number of TCHRONOMESSAGES_HEAT4s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT4CountArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT4s to count.
     * @example
     * // Count the number of TCHRONOMESSAGES_HEAT4s
     * const count = await prisma.tCHRONOMESSAGES_HEAT4.count({
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT4s we want to count
     *   }
     * })
    **/
    count<T extends TCHRONOMESSAGES_HEAT4CountArgs>(
      args?: Subset<T, TCHRONOMESSAGES_HEAT4CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TCHRONOMESSAGES_HEAT4CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TCHRONOMESSAGES_HEAT4.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT4AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TCHRONOMESSAGES_HEAT4AggregateArgs>(args: Subset<T, TCHRONOMESSAGES_HEAT4AggregateArgs>): PrismaPromise<GetTCHRONOMESSAGES_HEAT4AggregateType<T>>

    /**
     * Group by TCHRONOMESSAGES_HEAT4.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT4GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TCHRONOMESSAGES_HEAT4GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TCHRONOMESSAGES_HEAT4GroupByArgs['orderBy'] }
        : { orderBy?: TCHRONOMESSAGES_HEAT4GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TCHRONOMESSAGES_HEAT4GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTCHRONOMESSAGES_HEAT4GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TCHRONOMESSAGES_HEAT4.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TCHRONOMESSAGES_HEAT4Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TCHRONOMESSAGES_HEAT4 findUnique
   */
  export type TCHRONOMESSAGES_HEAT4FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT4
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT4Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT4 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT4 to fetch.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT4WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT4 findFirst
   */
  export type TCHRONOMESSAGES_HEAT4FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT4
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT4Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT4 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT4 to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT4WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT4s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT4OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TCHRONOMESSAGES_HEAT4s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT4WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT4s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT4s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TCHRONOMESSAGES_HEAT4s.
     * 
    **/
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT4ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT4 findMany
   */
  export type TCHRONOMESSAGES_HEAT4FindManyArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT4
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT4Select | null
    /**
     * Filter, which TCHRONOMESSAGES_HEAT4s to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT4WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT4s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT4OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TCHRONOMESSAGES_HEAT4s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT4WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT4s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT4s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT4ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT4 create
   */
  export type TCHRONOMESSAGES_HEAT4CreateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT4
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT4Select | null
    /**
     * The data needed to create a TCHRONOMESSAGES_HEAT4.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT4CreateInput, TCHRONOMESSAGES_HEAT4UncheckedCreateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT4 update
   */
  export type TCHRONOMESSAGES_HEAT4UpdateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT4
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT4Select | null
    /**
     * The data needed to update a TCHRONOMESSAGES_HEAT4.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT4UpdateInput, TCHRONOMESSAGES_HEAT4UncheckedUpdateInput>
    /**
     * Choose, which TCHRONOMESSAGES_HEAT4 to update.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT4WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT4 updateMany
   */
  export type TCHRONOMESSAGES_HEAT4UpdateManyArgs = {
    /**
     * The data used to update TCHRONOMESSAGES_HEAT4s.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT4UpdateManyMutationInput, TCHRONOMESSAGES_HEAT4UncheckedUpdateManyInput>
    /**
     * Filter which TCHRONOMESSAGES_HEAT4s to update
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT4WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT4 upsert
   */
  export type TCHRONOMESSAGES_HEAT4UpsertArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT4
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT4Select | null
    /**
     * The filter to search for the TCHRONOMESSAGES_HEAT4 to update in case it exists.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT4WhereUniqueInput
    /**
     * In case the TCHRONOMESSAGES_HEAT4 found by the `where` argument doesn't exist, create a new TCHRONOMESSAGES_HEAT4 with this data.
     * 
    **/
    create: XOR<TCHRONOMESSAGES_HEAT4CreateInput, TCHRONOMESSAGES_HEAT4UncheckedCreateInput>
    /**
     * In case the TCHRONOMESSAGES_HEAT4 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TCHRONOMESSAGES_HEAT4UpdateInput, TCHRONOMESSAGES_HEAT4UncheckedUpdateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT4 delete
   */
  export type TCHRONOMESSAGES_HEAT4DeleteArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT4
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT4Select | null
    /**
     * Filter which TCHRONOMESSAGES_HEAT4 to delete.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT4WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT4 deleteMany
   */
  export type TCHRONOMESSAGES_HEAT4DeleteManyArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT4s to delete
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT4WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT4 without action
   */
  export type TCHRONOMESSAGES_HEAT4Args = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT4
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT4Select | null
  }



  /**
   * Model TCHRONOMESSAGES_HEAT5
   */


  export type AggregateTCHRONOMESSAGES_HEAT5 = {
    _count: TCHRONOMESSAGES_HEAT5CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT5AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT5SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT5MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT5MaxAggregateOutputType | null
  }

  export type TCHRONOMESSAGES_HEAT5AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT5SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT5MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT5MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT5CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_TRANSPONDER: number
    C_CANAL: number
    C_MESSAGE: number
    _all: number
  }


  export type TCHRONOMESSAGES_HEAT5AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT5SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT5MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT5MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT5CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
    _all?: true
  }

  export type TCHRONOMESSAGES_HEAT5AggregateArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT5 to aggregate.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT5WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT5s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT5OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT5WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT5s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT5s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TCHRONOMESSAGES_HEAT5s
    **/
    _count?: true | TCHRONOMESSAGES_HEAT5CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TCHRONOMESSAGES_HEAT5AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TCHRONOMESSAGES_HEAT5SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TCHRONOMESSAGES_HEAT5MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TCHRONOMESSAGES_HEAT5MaxAggregateInputType
  }

  export type GetTCHRONOMESSAGES_HEAT5AggregateType<T extends TCHRONOMESSAGES_HEAT5AggregateArgs> = {
        [P in keyof T & keyof AggregateTCHRONOMESSAGES_HEAT5]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT5[P]>
      : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT5[P]>
  }




  export type TCHRONOMESSAGES_HEAT5GroupByArgs = {
    where?: TCHRONOMESSAGES_HEAT5WhereInput
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT5OrderByWithAggregationInput>
    by: Array<TCHRONOMESSAGES_HEAT5ScalarFieldEnum>
    having?: TCHRONOMESSAGES_HEAT5ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TCHRONOMESSAGES_HEAT5CountAggregateInputType | true
    _avg?: TCHRONOMESSAGES_HEAT5AvgAggregateInputType
    _sum?: TCHRONOMESSAGES_HEAT5SumAggregateInputType
    _min?: TCHRONOMESSAGES_HEAT5MinAggregateInputType
    _max?: TCHRONOMESSAGES_HEAT5MaxAggregateInputType
  }


  export type TCHRONOMESSAGES_HEAT5GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
    _count: TCHRONOMESSAGES_HEAT5CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT5AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT5SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT5MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT5MaxAggregateOutputType | null
  }

  type GetTCHRONOMESSAGES_HEAT5GroupByPayload<T extends TCHRONOMESSAGES_HEAT5GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TCHRONOMESSAGES_HEAT5GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TCHRONOMESSAGES_HEAT5GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TCHRONOMESSAGES_HEAT5GroupByOutputType[P]>
            : GetScalarType<T[P], TCHRONOMESSAGES_HEAT5GroupByOutputType[P]>
        }
      >
    >


  export type TCHRONOMESSAGES_HEAT5Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TRANSPONDER?: boolean
    C_CANAL?: boolean
    C_MESSAGE?: boolean
  }

  export type TCHRONOMESSAGES_HEAT5GetPayload<
    S extends boolean | null | undefined | TCHRONOMESSAGES_HEAT5Args,
    U = keyof S
      > = S extends true
        ? TCHRONOMESSAGES_HEAT5
    : S extends undefined
    ? never
    : S extends TCHRONOMESSAGES_HEAT5Args | TCHRONOMESSAGES_HEAT5FindManyArgs
    ?'include' extends U
    ? TCHRONOMESSAGES_HEAT5 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TCHRONOMESSAGES_HEAT5 ? TCHRONOMESSAGES_HEAT5[P] : never
  } 
    : TCHRONOMESSAGES_HEAT5
  : TCHRONOMESSAGES_HEAT5


  type TCHRONOMESSAGES_HEAT5CountArgs = Merge<
    Omit<TCHRONOMESSAGES_HEAT5FindManyArgs, 'select' | 'include'> & {
      select?: TCHRONOMESSAGES_HEAT5CountAggregateInputType | true
    }
  >

  export interface TCHRONOMESSAGES_HEAT5Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TCHRONOMESSAGES_HEAT5 that matches the filter.
     * @param {TCHRONOMESSAGES_HEAT5FindUniqueArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT5
     * @example
     * // Get one TCHRONOMESSAGES_HEAT5
     * const tCHRONOMESSAGES_HEAT5 = await prisma.tCHRONOMESSAGES_HEAT5.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TCHRONOMESSAGES_HEAT5FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT5FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TCHRONOMESSAGES_HEAT5'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT5Client<TCHRONOMESSAGES_HEAT5>, Prisma__TCHRONOMESSAGES_HEAT5Client<TCHRONOMESSAGES_HEAT5GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT5Client<TCHRONOMESSAGES_HEAT5 | null >, Prisma__TCHRONOMESSAGES_HEAT5Client<TCHRONOMESSAGES_HEAT5GetPayload<T> | null >>

    /**
     * Find the first TCHRONOMESSAGES_HEAT5 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT5FindFirstArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT5
     * @example
     * // Get one TCHRONOMESSAGES_HEAT5
     * const tCHRONOMESSAGES_HEAT5 = await prisma.tCHRONOMESSAGES_HEAT5.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TCHRONOMESSAGES_HEAT5FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT5FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TCHRONOMESSAGES_HEAT5'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT5Client<TCHRONOMESSAGES_HEAT5>, Prisma__TCHRONOMESSAGES_HEAT5Client<TCHRONOMESSAGES_HEAT5GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT5Client<TCHRONOMESSAGES_HEAT5 | null >, Prisma__TCHRONOMESSAGES_HEAT5Client<TCHRONOMESSAGES_HEAT5GetPayload<T> | null >>

    /**
     * Find zero or more TCHRONOMESSAGES_HEAT5s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT5FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TCHRONOMESSAGES_HEAT5s
     * const tCHRONOMESSAGES_HEAT5s = await prisma.tCHRONOMESSAGES_HEAT5.findMany()
     * 
     * // Get first 10 TCHRONOMESSAGES_HEAT5s
     * const tCHRONOMESSAGES_HEAT5s = await prisma.tCHRONOMESSAGES_HEAT5.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tCHRONOMESSAGES_HEAT5WithC_LINEOnly = await prisma.tCHRONOMESSAGES_HEAT5.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TCHRONOMESSAGES_HEAT5FindManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT5FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TCHRONOMESSAGES_HEAT5>>, PrismaPromise<Array<TCHRONOMESSAGES_HEAT5GetPayload<T>>>>

    /**
     * Create a TCHRONOMESSAGES_HEAT5.
     * @param {TCHRONOMESSAGES_HEAT5CreateArgs} args - Arguments to create a TCHRONOMESSAGES_HEAT5.
     * @example
     * // Create one TCHRONOMESSAGES_HEAT5
     * const TCHRONOMESSAGES_HEAT5 = await prisma.tCHRONOMESSAGES_HEAT5.create({
     *   data: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT5
     *   }
     * })
     * 
    **/
    create<T extends TCHRONOMESSAGES_HEAT5CreateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT5CreateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT5Client<TCHRONOMESSAGES_HEAT5>, Prisma__TCHRONOMESSAGES_HEAT5Client<TCHRONOMESSAGES_HEAT5GetPayload<T>>>

    /**
     * Delete a TCHRONOMESSAGES_HEAT5.
     * @param {TCHRONOMESSAGES_HEAT5DeleteArgs} args - Arguments to delete one TCHRONOMESSAGES_HEAT5.
     * @example
     * // Delete one TCHRONOMESSAGES_HEAT5
     * const TCHRONOMESSAGES_HEAT5 = await prisma.tCHRONOMESSAGES_HEAT5.delete({
     *   where: {
     *     // ... filter to delete one TCHRONOMESSAGES_HEAT5
     *   }
     * })
     * 
    **/
    delete<T extends TCHRONOMESSAGES_HEAT5DeleteArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT5DeleteArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT5Client<TCHRONOMESSAGES_HEAT5>, Prisma__TCHRONOMESSAGES_HEAT5Client<TCHRONOMESSAGES_HEAT5GetPayload<T>>>

    /**
     * Update one TCHRONOMESSAGES_HEAT5.
     * @param {TCHRONOMESSAGES_HEAT5UpdateArgs} args - Arguments to update one TCHRONOMESSAGES_HEAT5.
     * @example
     * // Update one TCHRONOMESSAGES_HEAT5
     * const tCHRONOMESSAGES_HEAT5 = await prisma.tCHRONOMESSAGES_HEAT5.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TCHRONOMESSAGES_HEAT5UpdateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT5UpdateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT5Client<TCHRONOMESSAGES_HEAT5>, Prisma__TCHRONOMESSAGES_HEAT5Client<TCHRONOMESSAGES_HEAT5GetPayload<T>>>

    /**
     * Delete zero or more TCHRONOMESSAGES_HEAT5s.
     * @param {TCHRONOMESSAGES_HEAT5DeleteManyArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT5s to delete.
     * @example
     * // Delete a few TCHRONOMESSAGES_HEAT5s
     * const { count } = await prisma.tCHRONOMESSAGES_HEAT5.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TCHRONOMESSAGES_HEAT5DeleteManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT5DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TCHRONOMESSAGES_HEAT5s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT5UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TCHRONOMESSAGES_HEAT5s
     * const tCHRONOMESSAGES_HEAT5 = await prisma.tCHRONOMESSAGES_HEAT5.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TCHRONOMESSAGES_HEAT5UpdateManyArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT5UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TCHRONOMESSAGES_HEAT5.
     * @param {TCHRONOMESSAGES_HEAT5UpsertArgs} args - Arguments to update or create a TCHRONOMESSAGES_HEAT5.
     * @example
     * // Update or create a TCHRONOMESSAGES_HEAT5
     * const tCHRONOMESSAGES_HEAT5 = await prisma.tCHRONOMESSAGES_HEAT5.upsert({
     *   create: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT5
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT5 we want to update
     *   }
     * })
    **/
    upsert<T extends TCHRONOMESSAGES_HEAT5UpsertArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT5UpsertArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT5Client<TCHRONOMESSAGES_HEAT5>, Prisma__TCHRONOMESSAGES_HEAT5Client<TCHRONOMESSAGES_HEAT5GetPayload<T>>>

    /**
     * Count the number of TCHRONOMESSAGES_HEAT5s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT5CountArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT5s to count.
     * @example
     * // Count the number of TCHRONOMESSAGES_HEAT5s
     * const count = await prisma.tCHRONOMESSAGES_HEAT5.count({
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT5s we want to count
     *   }
     * })
    **/
    count<T extends TCHRONOMESSAGES_HEAT5CountArgs>(
      args?: Subset<T, TCHRONOMESSAGES_HEAT5CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TCHRONOMESSAGES_HEAT5CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TCHRONOMESSAGES_HEAT5.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT5AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TCHRONOMESSAGES_HEAT5AggregateArgs>(args: Subset<T, TCHRONOMESSAGES_HEAT5AggregateArgs>): PrismaPromise<GetTCHRONOMESSAGES_HEAT5AggregateType<T>>

    /**
     * Group by TCHRONOMESSAGES_HEAT5.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT5GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TCHRONOMESSAGES_HEAT5GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TCHRONOMESSAGES_HEAT5GroupByArgs['orderBy'] }
        : { orderBy?: TCHRONOMESSAGES_HEAT5GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TCHRONOMESSAGES_HEAT5GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTCHRONOMESSAGES_HEAT5GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TCHRONOMESSAGES_HEAT5.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TCHRONOMESSAGES_HEAT5Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TCHRONOMESSAGES_HEAT5 findUnique
   */
  export type TCHRONOMESSAGES_HEAT5FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT5
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT5Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT5 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT5 to fetch.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT5WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT5 findFirst
   */
  export type TCHRONOMESSAGES_HEAT5FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT5
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT5Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT5 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT5 to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT5WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT5s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT5OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TCHRONOMESSAGES_HEAT5s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT5WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT5s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT5s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TCHRONOMESSAGES_HEAT5s.
     * 
    **/
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT5ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT5 findMany
   */
  export type TCHRONOMESSAGES_HEAT5FindManyArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT5
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT5Select | null
    /**
     * Filter, which TCHRONOMESSAGES_HEAT5s to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT5WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT5s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT5OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TCHRONOMESSAGES_HEAT5s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT5WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT5s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT5s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT5ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT5 create
   */
  export type TCHRONOMESSAGES_HEAT5CreateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT5
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT5Select | null
    /**
     * The data needed to create a TCHRONOMESSAGES_HEAT5.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT5CreateInput, TCHRONOMESSAGES_HEAT5UncheckedCreateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT5 update
   */
  export type TCHRONOMESSAGES_HEAT5UpdateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT5
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT5Select | null
    /**
     * The data needed to update a TCHRONOMESSAGES_HEAT5.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT5UpdateInput, TCHRONOMESSAGES_HEAT5UncheckedUpdateInput>
    /**
     * Choose, which TCHRONOMESSAGES_HEAT5 to update.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT5WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT5 updateMany
   */
  export type TCHRONOMESSAGES_HEAT5UpdateManyArgs = {
    /**
     * The data used to update TCHRONOMESSAGES_HEAT5s.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT5UpdateManyMutationInput, TCHRONOMESSAGES_HEAT5UncheckedUpdateManyInput>
    /**
     * Filter which TCHRONOMESSAGES_HEAT5s to update
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT5WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT5 upsert
   */
  export type TCHRONOMESSAGES_HEAT5UpsertArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT5
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT5Select | null
    /**
     * The filter to search for the TCHRONOMESSAGES_HEAT5 to update in case it exists.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT5WhereUniqueInput
    /**
     * In case the TCHRONOMESSAGES_HEAT5 found by the `where` argument doesn't exist, create a new TCHRONOMESSAGES_HEAT5 with this data.
     * 
    **/
    create: XOR<TCHRONOMESSAGES_HEAT5CreateInput, TCHRONOMESSAGES_HEAT5UncheckedCreateInput>
    /**
     * In case the TCHRONOMESSAGES_HEAT5 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TCHRONOMESSAGES_HEAT5UpdateInput, TCHRONOMESSAGES_HEAT5UncheckedUpdateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT5 delete
   */
  export type TCHRONOMESSAGES_HEAT5DeleteArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT5
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT5Select | null
    /**
     * Filter which TCHRONOMESSAGES_HEAT5 to delete.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT5WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT5 deleteMany
   */
  export type TCHRONOMESSAGES_HEAT5DeleteManyArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT5s to delete
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT5WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT5 without action
   */
  export type TCHRONOMESSAGES_HEAT5Args = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT5
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT5Select | null
  }



  /**
   * Model TCHRONOMESSAGES_HEAT6
   */


  export type AggregateTCHRONOMESSAGES_HEAT6 = {
    _count: TCHRONOMESSAGES_HEAT6CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT6AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT6SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT6MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT6MaxAggregateOutputType | null
  }

  export type TCHRONOMESSAGES_HEAT6AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT6SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT6MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT6MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT6CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_TRANSPONDER: number
    C_CANAL: number
    C_MESSAGE: number
    _all: number
  }


  export type TCHRONOMESSAGES_HEAT6AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT6SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT6MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT6MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT6CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
    _all?: true
  }

  export type TCHRONOMESSAGES_HEAT6AggregateArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT6 to aggregate.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT6WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT6s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT6OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT6WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT6s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT6s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TCHRONOMESSAGES_HEAT6s
    **/
    _count?: true | TCHRONOMESSAGES_HEAT6CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TCHRONOMESSAGES_HEAT6AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TCHRONOMESSAGES_HEAT6SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TCHRONOMESSAGES_HEAT6MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TCHRONOMESSAGES_HEAT6MaxAggregateInputType
  }

  export type GetTCHRONOMESSAGES_HEAT6AggregateType<T extends TCHRONOMESSAGES_HEAT6AggregateArgs> = {
        [P in keyof T & keyof AggregateTCHRONOMESSAGES_HEAT6]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT6[P]>
      : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT6[P]>
  }




  export type TCHRONOMESSAGES_HEAT6GroupByArgs = {
    where?: TCHRONOMESSAGES_HEAT6WhereInput
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT6OrderByWithAggregationInput>
    by: Array<TCHRONOMESSAGES_HEAT6ScalarFieldEnum>
    having?: TCHRONOMESSAGES_HEAT6ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TCHRONOMESSAGES_HEAT6CountAggregateInputType | true
    _avg?: TCHRONOMESSAGES_HEAT6AvgAggregateInputType
    _sum?: TCHRONOMESSAGES_HEAT6SumAggregateInputType
    _min?: TCHRONOMESSAGES_HEAT6MinAggregateInputType
    _max?: TCHRONOMESSAGES_HEAT6MaxAggregateInputType
  }


  export type TCHRONOMESSAGES_HEAT6GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
    _count: TCHRONOMESSAGES_HEAT6CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT6AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT6SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT6MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT6MaxAggregateOutputType | null
  }

  type GetTCHRONOMESSAGES_HEAT6GroupByPayload<T extends TCHRONOMESSAGES_HEAT6GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TCHRONOMESSAGES_HEAT6GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TCHRONOMESSAGES_HEAT6GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TCHRONOMESSAGES_HEAT6GroupByOutputType[P]>
            : GetScalarType<T[P], TCHRONOMESSAGES_HEAT6GroupByOutputType[P]>
        }
      >
    >


  export type TCHRONOMESSAGES_HEAT6Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TRANSPONDER?: boolean
    C_CANAL?: boolean
    C_MESSAGE?: boolean
  }

  export type TCHRONOMESSAGES_HEAT6GetPayload<
    S extends boolean | null | undefined | TCHRONOMESSAGES_HEAT6Args,
    U = keyof S
      > = S extends true
        ? TCHRONOMESSAGES_HEAT6
    : S extends undefined
    ? never
    : S extends TCHRONOMESSAGES_HEAT6Args | TCHRONOMESSAGES_HEAT6FindManyArgs
    ?'include' extends U
    ? TCHRONOMESSAGES_HEAT6 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TCHRONOMESSAGES_HEAT6 ? TCHRONOMESSAGES_HEAT6[P] : never
  } 
    : TCHRONOMESSAGES_HEAT6
  : TCHRONOMESSAGES_HEAT6


  type TCHRONOMESSAGES_HEAT6CountArgs = Merge<
    Omit<TCHRONOMESSAGES_HEAT6FindManyArgs, 'select' | 'include'> & {
      select?: TCHRONOMESSAGES_HEAT6CountAggregateInputType | true
    }
  >

  export interface TCHRONOMESSAGES_HEAT6Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TCHRONOMESSAGES_HEAT6 that matches the filter.
     * @param {TCHRONOMESSAGES_HEAT6FindUniqueArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT6
     * @example
     * // Get one TCHRONOMESSAGES_HEAT6
     * const tCHRONOMESSAGES_HEAT6 = await prisma.tCHRONOMESSAGES_HEAT6.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TCHRONOMESSAGES_HEAT6FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT6FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TCHRONOMESSAGES_HEAT6'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT6Client<TCHRONOMESSAGES_HEAT6>, Prisma__TCHRONOMESSAGES_HEAT6Client<TCHRONOMESSAGES_HEAT6GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT6Client<TCHRONOMESSAGES_HEAT6 | null >, Prisma__TCHRONOMESSAGES_HEAT6Client<TCHRONOMESSAGES_HEAT6GetPayload<T> | null >>

    /**
     * Find the first TCHRONOMESSAGES_HEAT6 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT6FindFirstArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT6
     * @example
     * // Get one TCHRONOMESSAGES_HEAT6
     * const tCHRONOMESSAGES_HEAT6 = await prisma.tCHRONOMESSAGES_HEAT6.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TCHRONOMESSAGES_HEAT6FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT6FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TCHRONOMESSAGES_HEAT6'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT6Client<TCHRONOMESSAGES_HEAT6>, Prisma__TCHRONOMESSAGES_HEAT6Client<TCHRONOMESSAGES_HEAT6GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT6Client<TCHRONOMESSAGES_HEAT6 | null >, Prisma__TCHRONOMESSAGES_HEAT6Client<TCHRONOMESSAGES_HEAT6GetPayload<T> | null >>

    /**
     * Find zero or more TCHRONOMESSAGES_HEAT6s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT6FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TCHRONOMESSAGES_HEAT6s
     * const tCHRONOMESSAGES_HEAT6s = await prisma.tCHRONOMESSAGES_HEAT6.findMany()
     * 
     * // Get first 10 TCHRONOMESSAGES_HEAT6s
     * const tCHRONOMESSAGES_HEAT6s = await prisma.tCHRONOMESSAGES_HEAT6.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tCHRONOMESSAGES_HEAT6WithC_LINEOnly = await prisma.tCHRONOMESSAGES_HEAT6.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TCHRONOMESSAGES_HEAT6FindManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT6FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TCHRONOMESSAGES_HEAT6>>, PrismaPromise<Array<TCHRONOMESSAGES_HEAT6GetPayload<T>>>>

    /**
     * Create a TCHRONOMESSAGES_HEAT6.
     * @param {TCHRONOMESSAGES_HEAT6CreateArgs} args - Arguments to create a TCHRONOMESSAGES_HEAT6.
     * @example
     * // Create one TCHRONOMESSAGES_HEAT6
     * const TCHRONOMESSAGES_HEAT6 = await prisma.tCHRONOMESSAGES_HEAT6.create({
     *   data: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT6
     *   }
     * })
     * 
    **/
    create<T extends TCHRONOMESSAGES_HEAT6CreateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT6CreateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT6Client<TCHRONOMESSAGES_HEAT6>, Prisma__TCHRONOMESSAGES_HEAT6Client<TCHRONOMESSAGES_HEAT6GetPayload<T>>>

    /**
     * Delete a TCHRONOMESSAGES_HEAT6.
     * @param {TCHRONOMESSAGES_HEAT6DeleteArgs} args - Arguments to delete one TCHRONOMESSAGES_HEAT6.
     * @example
     * // Delete one TCHRONOMESSAGES_HEAT6
     * const TCHRONOMESSAGES_HEAT6 = await prisma.tCHRONOMESSAGES_HEAT6.delete({
     *   where: {
     *     // ... filter to delete one TCHRONOMESSAGES_HEAT6
     *   }
     * })
     * 
    **/
    delete<T extends TCHRONOMESSAGES_HEAT6DeleteArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT6DeleteArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT6Client<TCHRONOMESSAGES_HEAT6>, Prisma__TCHRONOMESSAGES_HEAT6Client<TCHRONOMESSAGES_HEAT6GetPayload<T>>>

    /**
     * Update one TCHRONOMESSAGES_HEAT6.
     * @param {TCHRONOMESSAGES_HEAT6UpdateArgs} args - Arguments to update one TCHRONOMESSAGES_HEAT6.
     * @example
     * // Update one TCHRONOMESSAGES_HEAT6
     * const tCHRONOMESSAGES_HEAT6 = await prisma.tCHRONOMESSAGES_HEAT6.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TCHRONOMESSAGES_HEAT6UpdateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT6UpdateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT6Client<TCHRONOMESSAGES_HEAT6>, Prisma__TCHRONOMESSAGES_HEAT6Client<TCHRONOMESSAGES_HEAT6GetPayload<T>>>

    /**
     * Delete zero or more TCHRONOMESSAGES_HEAT6s.
     * @param {TCHRONOMESSAGES_HEAT6DeleteManyArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT6s to delete.
     * @example
     * // Delete a few TCHRONOMESSAGES_HEAT6s
     * const { count } = await prisma.tCHRONOMESSAGES_HEAT6.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TCHRONOMESSAGES_HEAT6DeleteManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT6DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TCHRONOMESSAGES_HEAT6s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT6UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TCHRONOMESSAGES_HEAT6s
     * const tCHRONOMESSAGES_HEAT6 = await prisma.tCHRONOMESSAGES_HEAT6.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TCHRONOMESSAGES_HEAT6UpdateManyArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT6UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TCHRONOMESSAGES_HEAT6.
     * @param {TCHRONOMESSAGES_HEAT6UpsertArgs} args - Arguments to update or create a TCHRONOMESSAGES_HEAT6.
     * @example
     * // Update or create a TCHRONOMESSAGES_HEAT6
     * const tCHRONOMESSAGES_HEAT6 = await prisma.tCHRONOMESSAGES_HEAT6.upsert({
     *   create: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT6
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT6 we want to update
     *   }
     * })
    **/
    upsert<T extends TCHRONOMESSAGES_HEAT6UpsertArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT6UpsertArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT6Client<TCHRONOMESSAGES_HEAT6>, Prisma__TCHRONOMESSAGES_HEAT6Client<TCHRONOMESSAGES_HEAT6GetPayload<T>>>

    /**
     * Count the number of TCHRONOMESSAGES_HEAT6s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT6CountArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT6s to count.
     * @example
     * // Count the number of TCHRONOMESSAGES_HEAT6s
     * const count = await prisma.tCHRONOMESSAGES_HEAT6.count({
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT6s we want to count
     *   }
     * })
    **/
    count<T extends TCHRONOMESSAGES_HEAT6CountArgs>(
      args?: Subset<T, TCHRONOMESSAGES_HEAT6CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TCHRONOMESSAGES_HEAT6CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TCHRONOMESSAGES_HEAT6.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT6AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TCHRONOMESSAGES_HEAT6AggregateArgs>(args: Subset<T, TCHRONOMESSAGES_HEAT6AggregateArgs>): PrismaPromise<GetTCHRONOMESSAGES_HEAT6AggregateType<T>>

    /**
     * Group by TCHRONOMESSAGES_HEAT6.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT6GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TCHRONOMESSAGES_HEAT6GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TCHRONOMESSAGES_HEAT6GroupByArgs['orderBy'] }
        : { orderBy?: TCHRONOMESSAGES_HEAT6GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TCHRONOMESSAGES_HEAT6GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTCHRONOMESSAGES_HEAT6GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TCHRONOMESSAGES_HEAT6.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TCHRONOMESSAGES_HEAT6Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TCHRONOMESSAGES_HEAT6 findUnique
   */
  export type TCHRONOMESSAGES_HEAT6FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT6
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT6Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT6 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT6 to fetch.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT6WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT6 findFirst
   */
  export type TCHRONOMESSAGES_HEAT6FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT6
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT6Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT6 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT6 to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT6WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT6s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT6OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TCHRONOMESSAGES_HEAT6s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT6WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT6s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT6s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TCHRONOMESSAGES_HEAT6s.
     * 
    **/
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT6ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT6 findMany
   */
  export type TCHRONOMESSAGES_HEAT6FindManyArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT6
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT6Select | null
    /**
     * Filter, which TCHRONOMESSAGES_HEAT6s to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT6WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT6s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT6OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TCHRONOMESSAGES_HEAT6s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT6WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT6s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT6s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT6ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT6 create
   */
  export type TCHRONOMESSAGES_HEAT6CreateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT6
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT6Select | null
    /**
     * The data needed to create a TCHRONOMESSAGES_HEAT6.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT6CreateInput, TCHRONOMESSAGES_HEAT6UncheckedCreateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT6 update
   */
  export type TCHRONOMESSAGES_HEAT6UpdateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT6
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT6Select | null
    /**
     * The data needed to update a TCHRONOMESSAGES_HEAT6.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT6UpdateInput, TCHRONOMESSAGES_HEAT6UncheckedUpdateInput>
    /**
     * Choose, which TCHRONOMESSAGES_HEAT6 to update.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT6WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT6 updateMany
   */
  export type TCHRONOMESSAGES_HEAT6UpdateManyArgs = {
    /**
     * The data used to update TCHRONOMESSAGES_HEAT6s.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT6UpdateManyMutationInput, TCHRONOMESSAGES_HEAT6UncheckedUpdateManyInput>
    /**
     * Filter which TCHRONOMESSAGES_HEAT6s to update
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT6WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT6 upsert
   */
  export type TCHRONOMESSAGES_HEAT6UpsertArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT6
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT6Select | null
    /**
     * The filter to search for the TCHRONOMESSAGES_HEAT6 to update in case it exists.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT6WhereUniqueInput
    /**
     * In case the TCHRONOMESSAGES_HEAT6 found by the `where` argument doesn't exist, create a new TCHRONOMESSAGES_HEAT6 with this data.
     * 
    **/
    create: XOR<TCHRONOMESSAGES_HEAT6CreateInput, TCHRONOMESSAGES_HEAT6UncheckedCreateInput>
    /**
     * In case the TCHRONOMESSAGES_HEAT6 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TCHRONOMESSAGES_HEAT6UpdateInput, TCHRONOMESSAGES_HEAT6UncheckedUpdateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT6 delete
   */
  export type TCHRONOMESSAGES_HEAT6DeleteArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT6
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT6Select | null
    /**
     * Filter which TCHRONOMESSAGES_HEAT6 to delete.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT6WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT6 deleteMany
   */
  export type TCHRONOMESSAGES_HEAT6DeleteManyArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT6s to delete
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT6WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT6 without action
   */
  export type TCHRONOMESSAGES_HEAT6Args = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT6
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT6Select | null
  }



  /**
   * Model TCHRONOMESSAGES_HEAT7
   */


  export type AggregateTCHRONOMESSAGES_HEAT7 = {
    _count: TCHRONOMESSAGES_HEAT7CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT7AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT7SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT7MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT7MaxAggregateOutputType | null
  }

  export type TCHRONOMESSAGES_HEAT7AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT7SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT7MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT7MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT7CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_TRANSPONDER: number
    C_CANAL: number
    C_MESSAGE: number
    _all: number
  }


  export type TCHRONOMESSAGES_HEAT7AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT7SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT7MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT7MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT7CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
    _all?: true
  }

  export type TCHRONOMESSAGES_HEAT7AggregateArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT7 to aggregate.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT7WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT7s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT7OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT7WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT7s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT7s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TCHRONOMESSAGES_HEAT7s
    **/
    _count?: true | TCHRONOMESSAGES_HEAT7CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TCHRONOMESSAGES_HEAT7AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TCHRONOMESSAGES_HEAT7SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TCHRONOMESSAGES_HEAT7MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TCHRONOMESSAGES_HEAT7MaxAggregateInputType
  }

  export type GetTCHRONOMESSAGES_HEAT7AggregateType<T extends TCHRONOMESSAGES_HEAT7AggregateArgs> = {
        [P in keyof T & keyof AggregateTCHRONOMESSAGES_HEAT7]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT7[P]>
      : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT7[P]>
  }




  export type TCHRONOMESSAGES_HEAT7GroupByArgs = {
    where?: TCHRONOMESSAGES_HEAT7WhereInput
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT7OrderByWithAggregationInput>
    by: Array<TCHRONOMESSAGES_HEAT7ScalarFieldEnum>
    having?: TCHRONOMESSAGES_HEAT7ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TCHRONOMESSAGES_HEAT7CountAggregateInputType | true
    _avg?: TCHRONOMESSAGES_HEAT7AvgAggregateInputType
    _sum?: TCHRONOMESSAGES_HEAT7SumAggregateInputType
    _min?: TCHRONOMESSAGES_HEAT7MinAggregateInputType
    _max?: TCHRONOMESSAGES_HEAT7MaxAggregateInputType
  }


  export type TCHRONOMESSAGES_HEAT7GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
    _count: TCHRONOMESSAGES_HEAT7CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT7AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT7SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT7MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT7MaxAggregateOutputType | null
  }

  type GetTCHRONOMESSAGES_HEAT7GroupByPayload<T extends TCHRONOMESSAGES_HEAT7GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TCHRONOMESSAGES_HEAT7GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TCHRONOMESSAGES_HEAT7GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TCHRONOMESSAGES_HEAT7GroupByOutputType[P]>
            : GetScalarType<T[P], TCHRONOMESSAGES_HEAT7GroupByOutputType[P]>
        }
      >
    >


  export type TCHRONOMESSAGES_HEAT7Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TRANSPONDER?: boolean
    C_CANAL?: boolean
    C_MESSAGE?: boolean
  }

  export type TCHRONOMESSAGES_HEAT7GetPayload<
    S extends boolean | null | undefined | TCHRONOMESSAGES_HEAT7Args,
    U = keyof S
      > = S extends true
        ? TCHRONOMESSAGES_HEAT7
    : S extends undefined
    ? never
    : S extends TCHRONOMESSAGES_HEAT7Args | TCHRONOMESSAGES_HEAT7FindManyArgs
    ?'include' extends U
    ? TCHRONOMESSAGES_HEAT7 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TCHRONOMESSAGES_HEAT7 ? TCHRONOMESSAGES_HEAT7[P] : never
  } 
    : TCHRONOMESSAGES_HEAT7
  : TCHRONOMESSAGES_HEAT7


  type TCHRONOMESSAGES_HEAT7CountArgs = Merge<
    Omit<TCHRONOMESSAGES_HEAT7FindManyArgs, 'select' | 'include'> & {
      select?: TCHRONOMESSAGES_HEAT7CountAggregateInputType | true
    }
  >

  export interface TCHRONOMESSAGES_HEAT7Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TCHRONOMESSAGES_HEAT7 that matches the filter.
     * @param {TCHRONOMESSAGES_HEAT7FindUniqueArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT7
     * @example
     * // Get one TCHRONOMESSAGES_HEAT7
     * const tCHRONOMESSAGES_HEAT7 = await prisma.tCHRONOMESSAGES_HEAT7.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TCHRONOMESSAGES_HEAT7FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT7FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TCHRONOMESSAGES_HEAT7'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT7Client<TCHRONOMESSAGES_HEAT7>, Prisma__TCHRONOMESSAGES_HEAT7Client<TCHRONOMESSAGES_HEAT7GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT7Client<TCHRONOMESSAGES_HEAT7 | null >, Prisma__TCHRONOMESSAGES_HEAT7Client<TCHRONOMESSAGES_HEAT7GetPayload<T> | null >>

    /**
     * Find the first TCHRONOMESSAGES_HEAT7 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT7FindFirstArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT7
     * @example
     * // Get one TCHRONOMESSAGES_HEAT7
     * const tCHRONOMESSAGES_HEAT7 = await prisma.tCHRONOMESSAGES_HEAT7.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TCHRONOMESSAGES_HEAT7FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT7FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TCHRONOMESSAGES_HEAT7'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT7Client<TCHRONOMESSAGES_HEAT7>, Prisma__TCHRONOMESSAGES_HEAT7Client<TCHRONOMESSAGES_HEAT7GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT7Client<TCHRONOMESSAGES_HEAT7 | null >, Prisma__TCHRONOMESSAGES_HEAT7Client<TCHRONOMESSAGES_HEAT7GetPayload<T> | null >>

    /**
     * Find zero or more TCHRONOMESSAGES_HEAT7s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT7FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TCHRONOMESSAGES_HEAT7s
     * const tCHRONOMESSAGES_HEAT7s = await prisma.tCHRONOMESSAGES_HEAT7.findMany()
     * 
     * // Get first 10 TCHRONOMESSAGES_HEAT7s
     * const tCHRONOMESSAGES_HEAT7s = await prisma.tCHRONOMESSAGES_HEAT7.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tCHRONOMESSAGES_HEAT7WithC_LINEOnly = await prisma.tCHRONOMESSAGES_HEAT7.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TCHRONOMESSAGES_HEAT7FindManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT7FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TCHRONOMESSAGES_HEAT7>>, PrismaPromise<Array<TCHRONOMESSAGES_HEAT7GetPayload<T>>>>

    /**
     * Create a TCHRONOMESSAGES_HEAT7.
     * @param {TCHRONOMESSAGES_HEAT7CreateArgs} args - Arguments to create a TCHRONOMESSAGES_HEAT7.
     * @example
     * // Create one TCHRONOMESSAGES_HEAT7
     * const TCHRONOMESSAGES_HEAT7 = await prisma.tCHRONOMESSAGES_HEAT7.create({
     *   data: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT7
     *   }
     * })
     * 
    **/
    create<T extends TCHRONOMESSAGES_HEAT7CreateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT7CreateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT7Client<TCHRONOMESSAGES_HEAT7>, Prisma__TCHRONOMESSAGES_HEAT7Client<TCHRONOMESSAGES_HEAT7GetPayload<T>>>

    /**
     * Delete a TCHRONOMESSAGES_HEAT7.
     * @param {TCHRONOMESSAGES_HEAT7DeleteArgs} args - Arguments to delete one TCHRONOMESSAGES_HEAT7.
     * @example
     * // Delete one TCHRONOMESSAGES_HEAT7
     * const TCHRONOMESSAGES_HEAT7 = await prisma.tCHRONOMESSAGES_HEAT7.delete({
     *   where: {
     *     // ... filter to delete one TCHRONOMESSAGES_HEAT7
     *   }
     * })
     * 
    **/
    delete<T extends TCHRONOMESSAGES_HEAT7DeleteArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT7DeleteArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT7Client<TCHRONOMESSAGES_HEAT7>, Prisma__TCHRONOMESSAGES_HEAT7Client<TCHRONOMESSAGES_HEAT7GetPayload<T>>>

    /**
     * Update one TCHRONOMESSAGES_HEAT7.
     * @param {TCHRONOMESSAGES_HEAT7UpdateArgs} args - Arguments to update one TCHRONOMESSAGES_HEAT7.
     * @example
     * // Update one TCHRONOMESSAGES_HEAT7
     * const tCHRONOMESSAGES_HEAT7 = await prisma.tCHRONOMESSAGES_HEAT7.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TCHRONOMESSAGES_HEAT7UpdateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT7UpdateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT7Client<TCHRONOMESSAGES_HEAT7>, Prisma__TCHRONOMESSAGES_HEAT7Client<TCHRONOMESSAGES_HEAT7GetPayload<T>>>

    /**
     * Delete zero or more TCHRONOMESSAGES_HEAT7s.
     * @param {TCHRONOMESSAGES_HEAT7DeleteManyArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT7s to delete.
     * @example
     * // Delete a few TCHRONOMESSAGES_HEAT7s
     * const { count } = await prisma.tCHRONOMESSAGES_HEAT7.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TCHRONOMESSAGES_HEAT7DeleteManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT7DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TCHRONOMESSAGES_HEAT7s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT7UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TCHRONOMESSAGES_HEAT7s
     * const tCHRONOMESSAGES_HEAT7 = await prisma.tCHRONOMESSAGES_HEAT7.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TCHRONOMESSAGES_HEAT7UpdateManyArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT7UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TCHRONOMESSAGES_HEAT7.
     * @param {TCHRONOMESSAGES_HEAT7UpsertArgs} args - Arguments to update or create a TCHRONOMESSAGES_HEAT7.
     * @example
     * // Update or create a TCHRONOMESSAGES_HEAT7
     * const tCHRONOMESSAGES_HEAT7 = await prisma.tCHRONOMESSAGES_HEAT7.upsert({
     *   create: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT7
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT7 we want to update
     *   }
     * })
    **/
    upsert<T extends TCHRONOMESSAGES_HEAT7UpsertArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT7UpsertArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT7Client<TCHRONOMESSAGES_HEAT7>, Prisma__TCHRONOMESSAGES_HEAT7Client<TCHRONOMESSAGES_HEAT7GetPayload<T>>>

    /**
     * Count the number of TCHRONOMESSAGES_HEAT7s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT7CountArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT7s to count.
     * @example
     * // Count the number of TCHRONOMESSAGES_HEAT7s
     * const count = await prisma.tCHRONOMESSAGES_HEAT7.count({
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT7s we want to count
     *   }
     * })
    **/
    count<T extends TCHRONOMESSAGES_HEAT7CountArgs>(
      args?: Subset<T, TCHRONOMESSAGES_HEAT7CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TCHRONOMESSAGES_HEAT7CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TCHRONOMESSAGES_HEAT7.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT7AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TCHRONOMESSAGES_HEAT7AggregateArgs>(args: Subset<T, TCHRONOMESSAGES_HEAT7AggregateArgs>): PrismaPromise<GetTCHRONOMESSAGES_HEAT7AggregateType<T>>

    /**
     * Group by TCHRONOMESSAGES_HEAT7.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT7GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TCHRONOMESSAGES_HEAT7GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TCHRONOMESSAGES_HEAT7GroupByArgs['orderBy'] }
        : { orderBy?: TCHRONOMESSAGES_HEAT7GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TCHRONOMESSAGES_HEAT7GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTCHRONOMESSAGES_HEAT7GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TCHRONOMESSAGES_HEAT7.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TCHRONOMESSAGES_HEAT7Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TCHRONOMESSAGES_HEAT7 findUnique
   */
  export type TCHRONOMESSAGES_HEAT7FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT7
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT7Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT7 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT7 to fetch.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT7WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT7 findFirst
   */
  export type TCHRONOMESSAGES_HEAT7FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT7
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT7Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT7 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT7 to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT7WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT7s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT7OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TCHRONOMESSAGES_HEAT7s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT7WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT7s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT7s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TCHRONOMESSAGES_HEAT7s.
     * 
    **/
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT7ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT7 findMany
   */
  export type TCHRONOMESSAGES_HEAT7FindManyArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT7
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT7Select | null
    /**
     * Filter, which TCHRONOMESSAGES_HEAT7s to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT7WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT7s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT7OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TCHRONOMESSAGES_HEAT7s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT7WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT7s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT7s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT7ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT7 create
   */
  export type TCHRONOMESSAGES_HEAT7CreateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT7
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT7Select | null
    /**
     * The data needed to create a TCHRONOMESSAGES_HEAT7.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT7CreateInput, TCHRONOMESSAGES_HEAT7UncheckedCreateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT7 update
   */
  export type TCHRONOMESSAGES_HEAT7UpdateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT7
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT7Select | null
    /**
     * The data needed to update a TCHRONOMESSAGES_HEAT7.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT7UpdateInput, TCHRONOMESSAGES_HEAT7UncheckedUpdateInput>
    /**
     * Choose, which TCHRONOMESSAGES_HEAT7 to update.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT7WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT7 updateMany
   */
  export type TCHRONOMESSAGES_HEAT7UpdateManyArgs = {
    /**
     * The data used to update TCHRONOMESSAGES_HEAT7s.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT7UpdateManyMutationInput, TCHRONOMESSAGES_HEAT7UncheckedUpdateManyInput>
    /**
     * Filter which TCHRONOMESSAGES_HEAT7s to update
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT7WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT7 upsert
   */
  export type TCHRONOMESSAGES_HEAT7UpsertArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT7
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT7Select | null
    /**
     * The filter to search for the TCHRONOMESSAGES_HEAT7 to update in case it exists.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT7WhereUniqueInput
    /**
     * In case the TCHRONOMESSAGES_HEAT7 found by the `where` argument doesn't exist, create a new TCHRONOMESSAGES_HEAT7 with this data.
     * 
    **/
    create: XOR<TCHRONOMESSAGES_HEAT7CreateInput, TCHRONOMESSAGES_HEAT7UncheckedCreateInput>
    /**
     * In case the TCHRONOMESSAGES_HEAT7 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TCHRONOMESSAGES_HEAT7UpdateInput, TCHRONOMESSAGES_HEAT7UncheckedUpdateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT7 delete
   */
  export type TCHRONOMESSAGES_HEAT7DeleteArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT7
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT7Select | null
    /**
     * Filter which TCHRONOMESSAGES_HEAT7 to delete.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT7WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT7 deleteMany
   */
  export type TCHRONOMESSAGES_HEAT7DeleteManyArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT7s to delete
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT7WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT7 without action
   */
  export type TCHRONOMESSAGES_HEAT7Args = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT7
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT7Select | null
  }



  /**
   * Model TCHRONOMESSAGES_HEAT8
   */


  export type AggregateTCHRONOMESSAGES_HEAT8 = {
    _count: TCHRONOMESSAGES_HEAT8CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT8AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT8SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT8MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT8MaxAggregateOutputType | null
  }

  export type TCHRONOMESSAGES_HEAT8AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT8SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT8MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT8MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT8CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_TRANSPONDER: number
    C_CANAL: number
    C_MESSAGE: number
    _all: number
  }


  export type TCHRONOMESSAGES_HEAT8AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT8SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT8MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT8MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT8CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
    _all?: true
  }

  export type TCHRONOMESSAGES_HEAT8AggregateArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT8 to aggregate.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT8WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT8s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT8OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT8WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT8s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT8s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TCHRONOMESSAGES_HEAT8s
    **/
    _count?: true | TCHRONOMESSAGES_HEAT8CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TCHRONOMESSAGES_HEAT8AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TCHRONOMESSAGES_HEAT8SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TCHRONOMESSAGES_HEAT8MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TCHRONOMESSAGES_HEAT8MaxAggregateInputType
  }

  export type GetTCHRONOMESSAGES_HEAT8AggregateType<T extends TCHRONOMESSAGES_HEAT8AggregateArgs> = {
        [P in keyof T & keyof AggregateTCHRONOMESSAGES_HEAT8]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT8[P]>
      : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT8[P]>
  }




  export type TCHRONOMESSAGES_HEAT8GroupByArgs = {
    where?: TCHRONOMESSAGES_HEAT8WhereInput
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT8OrderByWithAggregationInput>
    by: Array<TCHRONOMESSAGES_HEAT8ScalarFieldEnum>
    having?: TCHRONOMESSAGES_HEAT8ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TCHRONOMESSAGES_HEAT8CountAggregateInputType | true
    _avg?: TCHRONOMESSAGES_HEAT8AvgAggregateInputType
    _sum?: TCHRONOMESSAGES_HEAT8SumAggregateInputType
    _min?: TCHRONOMESSAGES_HEAT8MinAggregateInputType
    _max?: TCHRONOMESSAGES_HEAT8MaxAggregateInputType
  }


  export type TCHRONOMESSAGES_HEAT8GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
    _count: TCHRONOMESSAGES_HEAT8CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT8AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT8SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT8MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT8MaxAggregateOutputType | null
  }

  type GetTCHRONOMESSAGES_HEAT8GroupByPayload<T extends TCHRONOMESSAGES_HEAT8GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TCHRONOMESSAGES_HEAT8GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TCHRONOMESSAGES_HEAT8GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TCHRONOMESSAGES_HEAT8GroupByOutputType[P]>
            : GetScalarType<T[P], TCHRONOMESSAGES_HEAT8GroupByOutputType[P]>
        }
      >
    >


  export type TCHRONOMESSAGES_HEAT8Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TRANSPONDER?: boolean
    C_CANAL?: boolean
    C_MESSAGE?: boolean
  }

  export type TCHRONOMESSAGES_HEAT8GetPayload<
    S extends boolean | null | undefined | TCHRONOMESSAGES_HEAT8Args,
    U = keyof S
      > = S extends true
        ? TCHRONOMESSAGES_HEAT8
    : S extends undefined
    ? never
    : S extends TCHRONOMESSAGES_HEAT8Args | TCHRONOMESSAGES_HEAT8FindManyArgs
    ?'include' extends U
    ? TCHRONOMESSAGES_HEAT8 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TCHRONOMESSAGES_HEAT8 ? TCHRONOMESSAGES_HEAT8[P] : never
  } 
    : TCHRONOMESSAGES_HEAT8
  : TCHRONOMESSAGES_HEAT8


  type TCHRONOMESSAGES_HEAT8CountArgs = Merge<
    Omit<TCHRONOMESSAGES_HEAT8FindManyArgs, 'select' | 'include'> & {
      select?: TCHRONOMESSAGES_HEAT8CountAggregateInputType | true
    }
  >

  export interface TCHRONOMESSAGES_HEAT8Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TCHRONOMESSAGES_HEAT8 that matches the filter.
     * @param {TCHRONOMESSAGES_HEAT8FindUniqueArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT8
     * @example
     * // Get one TCHRONOMESSAGES_HEAT8
     * const tCHRONOMESSAGES_HEAT8 = await prisma.tCHRONOMESSAGES_HEAT8.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TCHRONOMESSAGES_HEAT8FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT8FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TCHRONOMESSAGES_HEAT8'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT8Client<TCHRONOMESSAGES_HEAT8>, Prisma__TCHRONOMESSAGES_HEAT8Client<TCHRONOMESSAGES_HEAT8GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT8Client<TCHRONOMESSAGES_HEAT8 | null >, Prisma__TCHRONOMESSAGES_HEAT8Client<TCHRONOMESSAGES_HEAT8GetPayload<T> | null >>

    /**
     * Find the first TCHRONOMESSAGES_HEAT8 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT8FindFirstArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT8
     * @example
     * // Get one TCHRONOMESSAGES_HEAT8
     * const tCHRONOMESSAGES_HEAT8 = await prisma.tCHRONOMESSAGES_HEAT8.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TCHRONOMESSAGES_HEAT8FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT8FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TCHRONOMESSAGES_HEAT8'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT8Client<TCHRONOMESSAGES_HEAT8>, Prisma__TCHRONOMESSAGES_HEAT8Client<TCHRONOMESSAGES_HEAT8GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT8Client<TCHRONOMESSAGES_HEAT8 | null >, Prisma__TCHRONOMESSAGES_HEAT8Client<TCHRONOMESSAGES_HEAT8GetPayload<T> | null >>

    /**
     * Find zero or more TCHRONOMESSAGES_HEAT8s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT8FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TCHRONOMESSAGES_HEAT8s
     * const tCHRONOMESSAGES_HEAT8s = await prisma.tCHRONOMESSAGES_HEAT8.findMany()
     * 
     * // Get first 10 TCHRONOMESSAGES_HEAT8s
     * const tCHRONOMESSAGES_HEAT8s = await prisma.tCHRONOMESSAGES_HEAT8.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tCHRONOMESSAGES_HEAT8WithC_LINEOnly = await prisma.tCHRONOMESSAGES_HEAT8.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TCHRONOMESSAGES_HEAT8FindManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT8FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TCHRONOMESSAGES_HEAT8>>, PrismaPromise<Array<TCHRONOMESSAGES_HEAT8GetPayload<T>>>>

    /**
     * Create a TCHRONOMESSAGES_HEAT8.
     * @param {TCHRONOMESSAGES_HEAT8CreateArgs} args - Arguments to create a TCHRONOMESSAGES_HEAT8.
     * @example
     * // Create one TCHRONOMESSAGES_HEAT8
     * const TCHRONOMESSAGES_HEAT8 = await prisma.tCHRONOMESSAGES_HEAT8.create({
     *   data: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT8
     *   }
     * })
     * 
    **/
    create<T extends TCHRONOMESSAGES_HEAT8CreateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT8CreateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT8Client<TCHRONOMESSAGES_HEAT8>, Prisma__TCHRONOMESSAGES_HEAT8Client<TCHRONOMESSAGES_HEAT8GetPayload<T>>>

    /**
     * Delete a TCHRONOMESSAGES_HEAT8.
     * @param {TCHRONOMESSAGES_HEAT8DeleteArgs} args - Arguments to delete one TCHRONOMESSAGES_HEAT8.
     * @example
     * // Delete one TCHRONOMESSAGES_HEAT8
     * const TCHRONOMESSAGES_HEAT8 = await prisma.tCHRONOMESSAGES_HEAT8.delete({
     *   where: {
     *     // ... filter to delete one TCHRONOMESSAGES_HEAT8
     *   }
     * })
     * 
    **/
    delete<T extends TCHRONOMESSAGES_HEAT8DeleteArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT8DeleteArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT8Client<TCHRONOMESSAGES_HEAT8>, Prisma__TCHRONOMESSAGES_HEAT8Client<TCHRONOMESSAGES_HEAT8GetPayload<T>>>

    /**
     * Update one TCHRONOMESSAGES_HEAT8.
     * @param {TCHRONOMESSAGES_HEAT8UpdateArgs} args - Arguments to update one TCHRONOMESSAGES_HEAT8.
     * @example
     * // Update one TCHRONOMESSAGES_HEAT8
     * const tCHRONOMESSAGES_HEAT8 = await prisma.tCHRONOMESSAGES_HEAT8.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TCHRONOMESSAGES_HEAT8UpdateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT8UpdateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT8Client<TCHRONOMESSAGES_HEAT8>, Prisma__TCHRONOMESSAGES_HEAT8Client<TCHRONOMESSAGES_HEAT8GetPayload<T>>>

    /**
     * Delete zero or more TCHRONOMESSAGES_HEAT8s.
     * @param {TCHRONOMESSAGES_HEAT8DeleteManyArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT8s to delete.
     * @example
     * // Delete a few TCHRONOMESSAGES_HEAT8s
     * const { count } = await prisma.tCHRONOMESSAGES_HEAT8.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TCHRONOMESSAGES_HEAT8DeleteManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT8DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TCHRONOMESSAGES_HEAT8s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT8UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TCHRONOMESSAGES_HEAT8s
     * const tCHRONOMESSAGES_HEAT8 = await prisma.tCHRONOMESSAGES_HEAT8.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TCHRONOMESSAGES_HEAT8UpdateManyArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT8UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TCHRONOMESSAGES_HEAT8.
     * @param {TCHRONOMESSAGES_HEAT8UpsertArgs} args - Arguments to update or create a TCHRONOMESSAGES_HEAT8.
     * @example
     * // Update or create a TCHRONOMESSAGES_HEAT8
     * const tCHRONOMESSAGES_HEAT8 = await prisma.tCHRONOMESSAGES_HEAT8.upsert({
     *   create: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT8
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT8 we want to update
     *   }
     * })
    **/
    upsert<T extends TCHRONOMESSAGES_HEAT8UpsertArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT8UpsertArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT8Client<TCHRONOMESSAGES_HEAT8>, Prisma__TCHRONOMESSAGES_HEAT8Client<TCHRONOMESSAGES_HEAT8GetPayload<T>>>

    /**
     * Count the number of TCHRONOMESSAGES_HEAT8s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT8CountArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT8s to count.
     * @example
     * // Count the number of TCHRONOMESSAGES_HEAT8s
     * const count = await prisma.tCHRONOMESSAGES_HEAT8.count({
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT8s we want to count
     *   }
     * })
    **/
    count<T extends TCHRONOMESSAGES_HEAT8CountArgs>(
      args?: Subset<T, TCHRONOMESSAGES_HEAT8CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TCHRONOMESSAGES_HEAT8CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TCHRONOMESSAGES_HEAT8.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT8AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TCHRONOMESSAGES_HEAT8AggregateArgs>(args: Subset<T, TCHRONOMESSAGES_HEAT8AggregateArgs>): PrismaPromise<GetTCHRONOMESSAGES_HEAT8AggregateType<T>>

    /**
     * Group by TCHRONOMESSAGES_HEAT8.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT8GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TCHRONOMESSAGES_HEAT8GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TCHRONOMESSAGES_HEAT8GroupByArgs['orderBy'] }
        : { orderBy?: TCHRONOMESSAGES_HEAT8GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TCHRONOMESSAGES_HEAT8GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTCHRONOMESSAGES_HEAT8GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TCHRONOMESSAGES_HEAT8.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TCHRONOMESSAGES_HEAT8Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TCHRONOMESSAGES_HEAT8 findUnique
   */
  export type TCHRONOMESSAGES_HEAT8FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT8
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT8Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT8 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT8 to fetch.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT8WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT8 findFirst
   */
  export type TCHRONOMESSAGES_HEAT8FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT8
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT8Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT8 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT8 to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT8WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT8s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT8OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TCHRONOMESSAGES_HEAT8s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT8WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT8s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT8s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TCHRONOMESSAGES_HEAT8s.
     * 
    **/
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT8ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT8 findMany
   */
  export type TCHRONOMESSAGES_HEAT8FindManyArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT8
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT8Select | null
    /**
     * Filter, which TCHRONOMESSAGES_HEAT8s to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT8WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT8s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT8OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TCHRONOMESSAGES_HEAT8s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT8WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT8s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT8s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT8ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT8 create
   */
  export type TCHRONOMESSAGES_HEAT8CreateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT8
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT8Select | null
    /**
     * The data needed to create a TCHRONOMESSAGES_HEAT8.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT8CreateInput, TCHRONOMESSAGES_HEAT8UncheckedCreateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT8 update
   */
  export type TCHRONOMESSAGES_HEAT8UpdateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT8
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT8Select | null
    /**
     * The data needed to update a TCHRONOMESSAGES_HEAT8.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT8UpdateInput, TCHRONOMESSAGES_HEAT8UncheckedUpdateInput>
    /**
     * Choose, which TCHRONOMESSAGES_HEAT8 to update.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT8WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT8 updateMany
   */
  export type TCHRONOMESSAGES_HEAT8UpdateManyArgs = {
    /**
     * The data used to update TCHRONOMESSAGES_HEAT8s.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT8UpdateManyMutationInput, TCHRONOMESSAGES_HEAT8UncheckedUpdateManyInput>
    /**
     * Filter which TCHRONOMESSAGES_HEAT8s to update
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT8WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT8 upsert
   */
  export type TCHRONOMESSAGES_HEAT8UpsertArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT8
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT8Select | null
    /**
     * The filter to search for the TCHRONOMESSAGES_HEAT8 to update in case it exists.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT8WhereUniqueInput
    /**
     * In case the TCHRONOMESSAGES_HEAT8 found by the `where` argument doesn't exist, create a new TCHRONOMESSAGES_HEAT8 with this data.
     * 
    **/
    create: XOR<TCHRONOMESSAGES_HEAT8CreateInput, TCHRONOMESSAGES_HEAT8UncheckedCreateInput>
    /**
     * In case the TCHRONOMESSAGES_HEAT8 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TCHRONOMESSAGES_HEAT8UpdateInput, TCHRONOMESSAGES_HEAT8UncheckedUpdateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT8 delete
   */
  export type TCHRONOMESSAGES_HEAT8DeleteArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT8
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT8Select | null
    /**
     * Filter which TCHRONOMESSAGES_HEAT8 to delete.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT8WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT8 deleteMany
   */
  export type TCHRONOMESSAGES_HEAT8DeleteManyArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT8s to delete
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT8WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT8 without action
   */
  export type TCHRONOMESSAGES_HEAT8Args = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT8
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT8Select | null
  }



  /**
   * Model TCHRONOMESSAGES_HEAT9
   */


  export type AggregateTCHRONOMESSAGES_HEAT9 = {
    _count: TCHRONOMESSAGES_HEAT9CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT9AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT9SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT9MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT9MaxAggregateOutputType | null
  }

  export type TCHRONOMESSAGES_HEAT9AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT9SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
  }

  export type TCHRONOMESSAGES_HEAT9MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT9MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
  }

  export type TCHRONOMESSAGES_HEAT9CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_TRANSPONDER: number
    C_CANAL: number
    C_MESSAGE: number
    _all: number
  }


  export type TCHRONOMESSAGES_HEAT9AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT9SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
  }

  export type TCHRONOMESSAGES_HEAT9MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT9MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
  }

  export type TCHRONOMESSAGES_HEAT9CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_TRANSPONDER?: true
    C_CANAL?: true
    C_MESSAGE?: true
    _all?: true
  }

  export type TCHRONOMESSAGES_HEAT9AggregateArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT9 to aggregate.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT9WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT9s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT9OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT9WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT9s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT9s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TCHRONOMESSAGES_HEAT9s
    **/
    _count?: true | TCHRONOMESSAGES_HEAT9CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TCHRONOMESSAGES_HEAT9AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TCHRONOMESSAGES_HEAT9SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TCHRONOMESSAGES_HEAT9MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TCHRONOMESSAGES_HEAT9MaxAggregateInputType
  }

  export type GetTCHRONOMESSAGES_HEAT9AggregateType<T extends TCHRONOMESSAGES_HEAT9AggregateArgs> = {
        [P in keyof T & keyof AggregateTCHRONOMESSAGES_HEAT9]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT9[P]>
      : GetScalarType<T[P], AggregateTCHRONOMESSAGES_HEAT9[P]>
  }




  export type TCHRONOMESSAGES_HEAT9GroupByArgs = {
    where?: TCHRONOMESSAGES_HEAT9WhereInput
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT9OrderByWithAggregationInput>
    by: Array<TCHRONOMESSAGES_HEAT9ScalarFieldEnum>
    having?: TCHRONOMESSAGES_HEAT9ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TCHRONOMESSAGES_HEAT9CountAggregateInputType | true
    _avg?: TCHRONOMESSAGES_HEAT9AvgAggregateInputType
    _sum?: TCHRONOMESSAGES_HEAT9SumAggregateInputType
    _min?: TCHRONOMESSAGES_HEAT9MinAggregateInputType
    _max?: TCHRONOMESSAGES_HEAT9MaxAggregateInputType
  }


  export type TCHRONOMESSAGES_HEAT9GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_TRANSPONDER: string | null
    C_CANAL: string | null
    C_MESSAGE: string | null
    _count: TCHRONOMESSAGES_HEAT9CountAggregateOutputType | null
    _avg: TCHRONOMESSAGES_HEAT9AvgAggregateOutputType | null
    _sum: TCHRONOMESSAGES_HEAT9SumAggregateOutputType | null
    _min: TCHRONOMESSAGES_HEAT9MinAggregateOutputType | null
    _max: TCHRONOMESSAGES_HEAT9MaxAggregateOutputType | null
  }

  type GetTCHRONOMESSAGES_HEAT9GroupByPayload<T extends TCHRONOMESSAGES_HEAT9GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TCHRONOMESSAGES_HEAT9GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TCHRONOMESSAGES_HEAT9GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TCHRONOMESSAGES_HEAT9GroupByOutputType[P]>
            : GetScalarType<T[P], TCHRONOMESSAGES_HEAT9GroupByOutputType[P]>
        }
      >
    >


  export type TCHRONOMESSAGES_HEAT9Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TRANSPONDER?: boolean
    C_CANAL?: boolean
    C_MESSAGE?: boolean
  }

  export type TCHRONOMESSAGES_HEAT9GetPayload<
    S extends boolean | null | undefined | TCHRONOMESSAGES_HEAT9Args,
    U = keyof S
      > = S extends true
        ? TCHRONOMESSAGES_HEAT9
    : S extends undefined
    ? never
    : S extends TCHRONOMESSAGES_HEAT9Args | TCHRONOMESSAGES_HEAT9FindManyArgs
    ?'include' extends U
    ? TCHRONOMESSAGES_HEAT9 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TCHRONOMESSAGES_HEAT9 ? TCHRONOMESSAGES_HEAT9[P] : never
  } 
    : TCHRONOMESSAGES_HEAT9
  : TCHRONOMESSAGES_HEAT9


  type TCHRONOMESSAGES_HEAT9CountArgs = Merge<
    Omit<TCHRONOMESSAGES_HEAT9FindManyArgs, 'select' | 'include'> & {
      select?: TCHRONOMESSAGES_HEAT9CountAggregateInputType | true
    }
  >

  export interface TCHRONOMESSAGES_HEAT9Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TCHRONOMESSAGES_HEAT9 that matches the filter.
     * @param {TCHRONOMESSAGES_HEAT9FindUniqueArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT9
     * @example
     * // Get one TCHRONOMESSAGES_HEAT9
     * const tCHRONOMESSAGES_HEAT9 = await prisma.tCHRONOMESSAGES_HEAT9.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TCHRONOMESSAGES_HEAT9FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT9FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TCHRONOMESSAGES_HEAT9'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT9Client<TCHRONOMESSAGES_HEAT9>, Prisma__TCHRONOMESSAGES_HEAT9Client<TCHRONOMESSAGES_HEAT9GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT9Client<TCHRONOMESSAGES_HEAT9 | null >, Prisma__TCHRONOMESSAGES_HEAT9Client<TCHRONOMESSAGES_HEAT9GetPayload<T> | null >>

    /**
     * Find the first TCHRONOMESSAGES_HEAT9 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT9FindFirstArgs} args - Arguments to find a TCHRONOMESSAGES_HEAT9
     * @example
     * // Get one TCHRONOMESSAGES_HEAT9
     * const tCHRONOMESSAGES_HEAT9 = await prisma.tCHRONOMESSAGES_HEAT9.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TCHRONOMESSAGES_HEAT9FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT9FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TCHRONOMESSAGES_HEAT9'> extends True ? CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT9Client<TCHRONOMESSAGES_HEAT9>, Prisma__TCHRONOMESSAGES_HEAT9Client<TCHRONOMESSAGES_HEAT9GetPayload<T>>> : CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT9Client<TCHRONOMESSAGES_HEAT9 | null >, Prisma__TCHRONOMESSAGES_HEAT9Client<TCHRONOMESSAGES_HEAT9GetPayload<T> | null >>

    /**
     * Find zero or more TCHRONOMESSAGES_HEAT9s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT9FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TCHRONOMESSAGES_HEAT9s
     * const tCHRONOMESSAGES_HEAT9s = await prisma.tCHRONOMESSAGES_HEAT9.findMany()
     * 
     * // Get first 10 TCHRONOMESSAGES_HEAT9s
     * const tCHRONOMESSAGES_HEAT9s = await prisma.tCHRONOMESSAGES_HEAT9.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tCHRONOMESSAGES_HEAT9WithC_LINEOnly = await prisma.tCHRONOMESSAGES_HEAT9.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TCHRONOMESSAGES_HEAT9FindManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT9FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TCHRONOMESSAGES_HEAT9>>, PrismaPromise<Array<TCHRONOMESSAGES_HEAT9GetPayload<T>>>>

    /**
     * Create a TCHRONOMESSAGES_HEAT9.
     * @param {TCHRONOMESSAGES_HEAT9CreateArgs} args - Arguments to create a TCHRONOMESSAGES_HEAT9.
     * @example
     * // Create one TCHRONOMESSAGES_HEAT9
     * const TCHRONOMESSAGES_HEAT9 = await prisma.tCHRONOMESSAGES_HEAT9.create({
     *   data: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT9
     *   }
     * })
     * 
    **/
    create<T extends TCHRONOMESSAGES_HEAT9CreateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT9CreateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT9Client<TCHRONOMESSAGES_HEAT9>, Prisma__TCHRONOMESSAGES_HEAT9Client<TCHRONOMESSAGES_HEAT9GetPayload<T>>>

    /**
     * Delete a TCHRONOMESSAGES_HEAT9.
     * @param {TCHRONOMESSAGES_HEAT9DeleteArgs} args - Arguments to delete one TCHRONOMESSAGES_HEAT9.
     * @example
     * // Delete one TCHRONOMESSAGES_HEAT9
     * const TCHRONOMESSAGES_HEAT9 = await prisma.tCHRONOMESSAGES_HEAT9.delete({
     *   where: {
     *     // ... filter to delete one TCHRONOMESSAGES_HEAT9
     *   }
     * })
     * 
    **/
    delete<T extends TCHRONOMESSAGES_HEAT9DeleteArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT9DeleteArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT9Client<TCHRONOMESSAGES_HEAT9>, Prisma__TCHRONOMESSAGES_HEAT9Client<TCHRONOMESSAGES_HEAT9GetPayload<T>>>

    /**
     * Update one TCHRONOMESSAGES_HEAT9.
     * @param {TCHRONOMESSAGES_HEAT9UpdateArgs} args - Arguments to update one TCHRONOMESSAGES_HEAT9.
     * @example
     * // Update one TCHRONOMESSAGES_HEAT9
     * const tCHRONOMESSAGES_HEAT9 = await prisma.tCHRONOMESSAGES_HEAT9.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TCHRONOMESSAGES_HEAT9UpdateArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT9UpdateArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT9Client<TCHRONOMESSAGES_HEAT9>, Prisma__TCHRONOMESSAGES_HEAT9Client<TCHRONOMESSAGES_HEAT9GetPayload<T>>>

    /**
     * Delete zero or more TCHRONOMESSAGES_HEAT9s.
     * @param {TCHRONOMESSAGES_HEAT9DeleteManyArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT9s to delete.
     * @example
     * // Delete a few TCHRONOMESSAGES_HEAT9s
     * const { count } = await prisma.tCHRONOMESSAGES_HEAT9.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TCHRONOMESSAGES_HEAT9DeleteManyArgs>(
      args?: SelectSubset<T, TCHRONOMESSAGES_HEAT9DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TCHRONOMESSAGES_HEAT9s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT9UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TCHRONOMESSAGES_HEAT9s
     * const tCHRONOMESSAGES_HEAT9 = await prisma.tCHRONOMESSAGES_HEAT9.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TCHRONOMESSAGES_HEAT9UpdateManyArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT9UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TCHRONOMESSAGES_HEAT9.
     * @param {TCHRONOMESSAGES_HEAT9UpsertArgs} args - Arguments to update or create a TCHRONOMESSAGES_HEAT9.
     * @example
     * // Update or create a TCHRONOMESSAGES_HEAT9
     * const tCHRONOMESSAGES_HEAT9 = await prisma.tCHRONOMESSAGES_HEAT9.upsert({
     *   create: {
     *     // ... data to create a TCHRONOMESSAGES_HEAT9
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT9 we want to update
     *   }
     * })
    **/
    upsert<T extends TCHRONOMESSAGES_HEAT9UpsertArgs>(
      args: SelectSubset<T, TCHRONOMESSAGES_HEAT9UpsertArgs>
    ): CheckSelect<T, Prisma__TCHRONOMESSAGES_HEAT9Client<TCHRONOMESSAGES_HEAT9>, Prisma__TCHRONOMESSAGES_HEAT9Client<TCHRONOMESSAGES_HEAT9GetPayload<T>>>

    /**
     * Count the number of TCHRONOMESSAGES_HEAT9s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT9CountArgs} args - Arguments to filter TCHRONOMESSAGES_HEAT9s to count.
     * @example
     * // Count the number of TCHRONOMESSAGES_HEAT9s
     * const count = await prisma.tCHRONOMESSAGES_HEAT9.count({
     *   where: {
     *     // ... the filter for the TCHRONOMESSAGES_HEAT9s we want to count
     *   }
     * })
    **/
    count<T extends TCHRONOMESSAGES_HEAT9CountArgs>(
      args?: Subset<T, TCHRONOMESSAGES_HEAT9CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TCHRONOMESSAGES_HEAT9CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TCHRONOMESSAGES_HEAT9.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT9AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TCHRONOMESSAGES_HEAT9AggregateArgs>(args: Subset<T, TCHRONOMESSAGES_HEAT9AggregateArgs>): PrismaPromise<GetTCHRONOMESSAGES_HEAT9AggregateType<T>>

    /**
     * Group by TCHRONOMESSAGES_HEAT9.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TCHRONOMESSAGES_HEAT9GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TCHRONOMESSAGES_HEAT9GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TCHRONOMESSAGES_HEAT9GroupByArgs['orderBy'] }
        : { orderBy?: TCHRONOMESSAGES_HEAT9GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TCHRONOMESSAGES_HEAT9GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTCHRONOMESSAGES_HEAT9GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TCHRONOMESSAGES_HEAT9.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TCHRONOMESSAGES_HEAT9Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TCHRONOMESSAGES_HEAT9 findUnique
   */
  export type TCHRONOMESSAGES_HEAT9FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT9
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT9Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT9 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT9 to fetch.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT9WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT9 findFirst
   */
  export type TCHRONOMESSAGES_HEAT9FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT9
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT9Select | null
    /**
     * Throw an Error if a TCHRONOMESSAGES_HEAT9 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TCHRONOMESSAGES_HEAT9 to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT9WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT9s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT9OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TCHRONOMESSAGES_HEAT9s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT9WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT9s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT9s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TCHRONOMESSAGES_HEAT9s.
     * 
    **/
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT9ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT9 findMany
   */
  export type TCHRONOMESSAGES_HEAT9FindManyArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT9
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT9Select | null
    /**
     * Filter, which TCHRONOMESSAGES_HEAT9s to fetch.
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT9WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TCHRONOMESSAGES_HEAT9s to fetch.
     * 
    **/
    orderBy?: Enumerable<TCHRONOMESSAGES_HEAT9OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TCHRONOMESSAGES_HEAT9s.
     * 
    **/
    cursor?: TCHRONOMESSAGES_HEAT9WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TCHRONOMESSAGES_HEAT9s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TCHRONOMESSAGES_HEAT9s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TCHRONOMESSAGES_HEAT9ScalarFieldEnum>
  }


  /**
   * TCHRONOMESSAGES_HEAT9 create
   */
  export type TCHRONOMESSAGES_HEAT9CreateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT9
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT9Select | null
    /**
     * The data needed to create a TCHRONOMESSAGES_HEAT9.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT9CreateInput, TCHRONOMESSAGES_HEAT9UncheckedCreateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT9 update
   */
  export type TCHRONOMESSAGES_HEAT9UpdateArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT9
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT9Select | null
    /**
     * The data needed to update a TCHRONOMESSAGES_HEAT9.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT9UpdateInput, TCHRONOMESSAGES_HEAT9UncheckedUpdateInput>
    /**
     * Choose, which TCHRONOMESSAGES_HEAT9 to update.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT9WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT9 updateMany
   */
  export type TCHRONOMESSAGES_HEAT9UpdateManyArgs = {
    /**
     * The data used to update TCHRONOMESSAGES_HEAT9s.
     * 
    **/
    data: XOR<TCHRONOMESSAGES_HEAT9UpdateManyMutationInput, TCHRONOMESSAGES_HEAT9UncheckedUpdateManyInput>
    /**
     * Filter which TCHRONOMESSAGES_HEAT9s to update
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT9WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT9 upsert
   */
  export type TCHRONOMESSAGES_HEAT9UpsertArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT9
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT9Select | null
    /**
     * The filter to search for the TCHRONOMESSAGES_HEAT9 to update in case it exists.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT9WhereUniqueInput
    /**
     * In case the TCHRONOMESSAGES_HEAT9 found by the `where` argument doesn't exist, create a new TCHRONOMESSAGES_HEAT9 with this data.
     * 
    **/
    create: XOR<TCHRONOMESSAGES_HEAT9CreateInput, TCHRONOMESSAGES_HEAT9UncheckedCreateInput>
    /**
     * In case the TCHRONOMESSAGES_HEAT9 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TCHRONOMESSAGES_HEAT9UpdateInput, TCHRONOMESSAGES_HEAT9UncheckedUpdateInput>
  }


  /**
   * TCHRONOMESSAGES_HEAT9 delete
   */
  export type TCHRONOMESSAGES_HEAT9DeleteArgs = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT9
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT9Select | null
    /**
     * Filter which TCHRONOMESSAGES_HEAT9 to delete.
     * 
    **/
    where: TCHRONOMESSAGES_HEAT9WhereUniqueInput
  }


  /**
   * TCHRONOMESSAGES_HEAT9 deleteMany
   */
  export type TCHRONOMESSAGES_HEAT9DeleteManyArgs = {
    /**
     * Filter which TCHRONOMESSAGES_HEAT9s to delete
     * 
    **/
    where?: TCHRONOMESSAGES_HEAT9WhereInput
  }


  /**
   * TCHRONOMESSAGES_HEAT9 without action
   */
  export type TCHRONOMESSAGES_HEAT9Args = {
    /**
     * Select specific fields to fetch from the TCHRONOMESSAGES_HEAT9
     * 
    **/
    select?: TCHRONOMESSAGES_HEAT9Select | null
  }



  /**
   * Model TSTARTLIST_HEAT1
   */


  export type AggregateTSTARTLIST_HEAT1 = {
    _count: TSTARTLIST_HEAT1CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT1AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT1SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT1MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT1MaxAggregateOutputType | null
  }

  export type TSTARTLIST_HEAT1AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT1SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT1MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT1MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT1CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_START: number
    _all: number
  }


  export type TSTARTLIST_HEAT1AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT1SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT1MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT1MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT1CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
    _all?: true
  }

  export type TSTARTLIST_HEAT1AggregateArgs = {
    /**
     * Filter which TSTARTLIST_HEAT1 to aggregate.
     * 
    **/
    where?: TSTARTLIST_HEAT1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TSTARTLIST_HEAT1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TSTARTLIST_HEAT1s
    **/
    _count?: true | TSTARTLIST_HEAT1CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TSTARTLIST_HEAT1AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TSTARTLIST_HEAT1SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TSTARTLIST_HEAT1MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TSTARTLIST_HEAT1MaxAggregateInputType
  }

  export type GetTSTARTLIST_HEAT1AggregateType<T extends TSTARTLIST_HEAT1AggregateArgs> = {
        [P in keyof T & keyof AggregateTSTARTLIST_HEAT1]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTSTARTLIST_HEAT1[P]>
      : GetScalarType<T[P], AggregateTSTARTLIST_HEAT1[P]>
  }




  export type TSTARTLIST_HEAT1GroupByArgs = {
    where?: TSTARTLIST_HEAT1WhereInput
    orderBy?: Enumerable<TSTARTLIST_HEAT1OrderByWithAggregationInput>
    by: Array<TSTARTLIST_HEAT1ScalarFieldEnum>
    having?: TSTARTLIST_HEAT1ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TSTARTLIST_HEAT1CountAggregateInputType | true
    _avg?: TSTARTLIST_HEAT1AvgAggregateInputType
    _sum?: TSTARTLIST_HEAT1SumAggregateInputType
    _min?: TSTARTLIST_HEAT1MinAggregateInputType
    _max?: TSTARTLIST_HEAT1MaxAggregateInputType
  }


  export type TSTARTLIST_HEAT1GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_START: number | null
    _count: TSTARTLIST_HEAT1CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT1AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT1SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT1MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT1MaxAggregateOutputType | null
  }

  type GetTSTARTLIST_HEAT1GroupByPayload<T extends TSTARTLIST_HEAT1GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TSTARTLIST_HEAT1GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TSTARTLIST_HEAT1GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TSTARTLIST_HEAT1GroupByOutputType[P]>
            : GetScalarType<T[P], TSTARTLIST_HEAT1GroupByOutputType[P]>
        }
      >
    >


  export type TSTARTLIST_HEAT1Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_START?: boolean
  }

  export type TSTARTLIST_HEAT1GetPayload<
    S extends boolean | null | undefined | TSTARTLIST_HEAT1Args,
    U = keyof S
      > = S extends true
        ? TSTARTLIST_HEAT1
    : S extends undefined
    ? never
    : S extends TSTARTLIST_HEAT1Args | TSTARTLIST_HEAT1FindManyArgs
    ?'include' extends U
    ? TSTARTLIST_HEAT1 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TSTARTLIST_HEAT1 ? TSTARTLIST_HEAT1[P] : never
  } 
    : TSTARTLIST_HEAT1
  : TSTARTLIST_HEAT1


  type TSTARTLIST_HEAT1CountArgs = Merge<
    Omit<TSTARTLIST_HEAT1FindManyArgs, 'select' | 'include'> & {
      select?: TSTARTLIST_HEAT1CountAggregateInputType | true
    }
  >

  export interface TSTARTLIST_HEAT1Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TSTARTLIST_HEAT1 that matches the filter.
     * @param {TSTARTLIST_HEAT1FindUniqueArgs} args - Arguments to find a TSTARTLIST_HEAT1
     * @example
     * // Get one TSTARTLIST_HEAT1
     * const tSTARTLIST_HEAT1 = await prisma.tSTARTLIST_HEAT1.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TSTARTLIST_HEAT1FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TSTARTLIST_HEAT1FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TSTARTLIST_HEAT1'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT1Client<TSTARTLIST_HEAT1>, Prisma__TSTARTLIST_HEAT1Client<TSTARTLIST_HEAT1GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT1Client<TSTARTLIST_HEAT1 | null >, Prisma__TSTARTLIST_HEAT1Client<TSTARTLIST_HEAT1GetPayload<T> | null >>

    /**
     * Find the first TSTARTLIST_HEAT1 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT1FindFirstArgs} args - Arguments to find a TSTARTLIST_HEAT1
     * @example
     * // Get one TSTARTLIST_HEAT1
     * const tSTARTLIST_HEAT1 = await prisma.tSTARTLIST_HEAT1.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TSTARTLIST_HEAT1FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TSTARTLIST_HEAT1FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TSTARTLIST_HEAT1'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT1Client<TSTARTLIST_HEAT1>, Prisma__TSTARTLIST_HEAT1Client<TSTARTLIST_HEAT1GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT1Client<TSTARTLIST_HEAT1 | null >, Prisma__TSTARTLIST_HEAT1Client<TSTARTLIST_HEAT1GetPayload<T> | null >>

    /**
     * Find zero or more TSTARTLIST_HEAT1s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT1FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TSTARTLIST_HEAT1s
     * const tSTARTLIST_HEAT1s = await prisma.tSTARTLIST_HEAT1.findMany()
     * 
     * // Get first 10 TSTARTLIST_HEAT1s
     * const tSTARTLIST_HEAT1s = await prisma.tSTARTLIST_HEAT1.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tSTARTLIST_HEAT1WithC_LINEOnly = await prisma.tSTARTLIST_HEAT1.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TSTARTLIST_HEAT1FindManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT1FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TSTARTLIST_HEAT1>>, PrismaPromise<Array<TSTARTLIST_HEAT1GetPayload<T>>>>

    /**
     * Create a TSTARTLIST_HEAT1.
     * @param {TSTARTLIST_HEAT1CreateArgs} args - Arguments to create a TSTARTLIST_HEAT1.
     * @example
     * // Create one TSTARTLIST_HEAT1
     * const TSTARTLIST_HEAT1 = await prisma.tSTARTLIST_HEAT1.create({
     *   data: {
     *     // ... data to create a TSTARTLIST_HEAT1
     *   }
     * })
     * 
    **/
    create<T extends TSTARTLIST_HEAT1CreateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT1CreateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT1Client<TSTARTLIST_HEAT1>, Prisma__TSTARTLIST_HEAT1Client<TSTARTLIST_HEAT1GetPayload<T>>>

    /**
     * Delete a TSTARTLIST_HEAT1.
     * @param {TSTARTLIST_HEAT1DeleteArgs} args - Arguments to delete one TSTARTLIST_HEAT1.
     * @example
     * // Delete one TSTARTLIST_HEAT1
     * const TSTARTLIST_HEAT1 = await prisma.tSTARTLIST_HEAT1.delete({
     *   where: {
     *     // ... filter to delete one TSTARTLIST_HEAT1
     *   }
     * })
     * 
    **/
    delete<T extends TSTARTLIST_HEAT1DeleteArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT1DeleteArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT1Client<TSTARTLIST_HEAT1>, Prisma__TSTARTLIST_HEAT1Client<TSTARTLIST_HEAT1GetPayload<T>>>

    /**
     * Update one TSTARTLIST_HEAT1.
     * @param {TSTARTLIST_HEAT1UpdateArgs} args - Arguments to update one TSTARTLIST_HEAT1.
     * @example
     * // Update one TSTARTLIST_HEAT1
     * const tSTARTLIST_HEAT1 = await prisma.tSTARTLIST_HEAT1.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TSTARTLIST_HEAT1UpdateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT1UpdateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT1Client<TSTARTLIST_HEAT1>, Prisma__TSTARTLIST_HEAT1Client<TSTARTLIST_HEAT1GetPayload<T>>>

    /**
     * Delete zero or more TSTARTLIST_HEAT1s.
     * @param {TSTARTLIST_HEAT1DeleteManyArgs} args - Arguments to filter TSTARTLIST_HEAT1s to delete.
     * @example
     * // Delete a few TSTARTLIST_HEAT1s
     * const { count } = await prisma.tSTARTLIST_HEAT1.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TSTARTLIST_HEAT1DeleteManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT1DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TSTARTLIST_HEAT1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT1UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TSTARTLIST_HEAT1s
     * const tSTARTLIST_HEAT1 = await prisma.tSTARTLIST_HEAT1.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TSTARTLIST_HEAT1UpdateManyArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT1UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TSTARTLIST_HEAT1.
     * @param {TSTARTLIST_HEAT1UpsertArgs} args - Arguments to update or create a TSTARTLIST_HEAT1.
     * @example
     * // Update or create a TSTARTLIST_HEAT1
     * const tSTARTLIST_HEAT1 = await prisma.tSTARTLIST_HEAT1.upsert({
     *   create: {
     *     // ... data to create a TSTARTLIST_HEAT1
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT1 we want to update
     *   }
     * })
    **/
    upsert<T extends TSTARTLIST_HEAT1UpsertArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT1UpsertArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT1Client<TSTARTLIST_HEAT1>, Prisma__TSTARTLIST_HEAT1Client<TSTARTLIST_HEAT1GetPayload<T>>>

    /**
     * Count the number of TSTARTLIST_HEAT1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT1CountArgs} args - Arguments to filter TSTARTLIST_HEAT1s to count.
     * @example
     * // Count the number of TSTARTLIST_HEAT1s
     * const count = await prisma.tSTARTLIST_HEAT1.count({
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT1s we want to count
     *   }
     * })
    **/
    count<T extends TSTARTLIST_HEAT1CountArgs>(
      args?: Subset<T, TSTARTLIST_HEAT1CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TSTARTLIST_HEAT1CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TSTARTLIST_HEAT1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT1AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TSTARTLIST_HEAT1AggregateArgs>(args: Subset<T, TSTARTLIST_HEAT1AggregateArgs>): PrismaPromise<GetTSTARTLIST_HEAT1AggregateType<T>>

    /**
     * Group by TSTARTLIST_HEAT1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT1GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TSTARTLIST_HEAT1GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TSTARTLIST_HEAT1GroupByArgs['orderBy'] }
        : { orderBy?: TSTARTLIST_HEAT1GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TSTARTLIST_HEAT1GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTSTARTLIST_HEAT1GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TSTARTLIST_HEAT1.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TSTARTLIST_HEAT1Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TSTARTLIST_HEAT1 findUnique
   */
  export type TSTARTLIST_HEAT1FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT1
     * 
    **/
    select?: TSTARTLIST_HEAT1Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT1 to fetch.
     * 
    **/
    where: TSTARTLIST_HEAT1WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT1 findFirst
   */
  export type TSTARTLIST_HEAT1FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT1
     * 
    **/
    select?: TSTARTLIST_HEAT1Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT1 to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TSTARTLIST_HEAT1s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TSTARTLIST_HEAT1s.
     * 
    **/
    distinct?: Enumerable<TSTARTLIST_HEAT1ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT1 findMany
   */
  export type TSTARTLIST_HEAT1FindManyArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT1
     * 
    **/
    select?: TSTARTLIST_HEAT1Select | null
    /**
     * Filter, which TSTARTLIST_HEAT1s to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TSTARTLIST_HEAT1s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT1s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TSTARTLIST_HEAT1ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT1 create
   */
  export type TSTARTLIST_HEAT1CreateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT1
     * 
    **/
    select?: TSTARTLIST_HEAT1Select | null
    /**
     * The data needed to create a TSTARTLIST_HEAT1.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT1CreateInput, TSTARTLIST_HEAT1UncheckedCreateInput>
  }


  /**
   * TSTARTLIST_HEAT1 update
   */
  export type TSTARTLIST_HEAT1UpdateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT1
     * 
    **/
    select?: TSTARTLIST_HEAT1Select | null
    /**
     * The data needed to update a TSTARTLIST_HEAT1.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT1UpdateInput, TSTARTLIST_HEAT1UncheckedUpdateInput>
    /**
     * Choose, which TSTARTLIST_HEAT1 to update.
     * 
    **/
    where: TSTARTLIST_HEAT1WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT1 updateMany
   */
  export type TSTARTLIST_HEAT1UpdateManyArgs = {
    /**
     * The data used to update TSTARTLIST_HEAT1s.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT1UpdateManyMutationInput, TSTARTLIST_HEAT1UncheckedUpdateManyInput>
    /**
     * Filter which TSTARTLIST_HEAT1s to update
     * 
    **/
    where?: TSTARTLIST_HEAT1WhereInput
  }


  /**
   * TSTARTLIST_HEAT1 upsert
   */
  export type TSTARTLIST_HEAT1UpsertArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT1
     * 
    **/
    select?: TSTARTLIST_HEAT1Select | null
    /**
     * The filter to search for the TSTARTLIST_HEAT1 to update in case it exists.
     * 
    **/
    where: TSTARTLIST_HEAT1WhereUniqueInput
    /**
     * In case the TSTARTLIST_HEAT1 found by the `where` argument doesn't exist, create a new TSTARTLIST_HEAT1 with this data.
     * 
    **/
    create: XOR<TSTARTLIST_HEAT1CreateInput, TSTARTLIST_HEAT1UncheckedCreateInput>
    /**
     * In case the TSTARTLIST_HEAT1 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TSTARTLIST_HEAT1UpdateInput, TSTARTLIST_HEAT1UncheckedUpdateInput>
  }


  /**
   * TSTARTLIST_HEAT1 delete
   */
  export type TSTARTLIST_HEAT1DeleteArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT1
     * 
    **/
    select?: TSTARTLIST_HEAT1Select | null
    /**
     * Filter which TSTARTLIST_HEAT1 to delete.
     * 
    **/
    where: TSTARTLIST_HEAT1WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT1 deleteMany
   */
  export type TSTARTLIST_HEAT1DeleteManyArgs = {
    /**
     * Filter which TSTARTLIST_HEAT1s to delete
     * 
    **/
    where?: TSTARTLIST_HEAT1WhereInput
  }


  /**
   * TSTARTLIST_HEAT1 without action
   */
  export type TSTARTLIST_HEAT1Args = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT1
     * 
    **/
    select?: TSTARTLIST_HEAT1Select | null
  }



  /**
   * Model TSTARTLIST_HEAT2
   */


  export type AggregateTSTARTLIST_HEAT2 = {
    _count: TSTARTLIST_HEAT2CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT2AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT2SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT2MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT2MaxAggregateOutputType | null
  }

  export type TSTARTLIST_HEAT2AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT2SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT2MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT2MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT2CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_START: number
    _all: number
  }


  export type TSTARTLIST_HEAT2AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT2SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT2MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT2MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT2CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
    _all?: true
  }

  export type TSTARTLIST_HEAT2AggregateArgs = {
    /**
     * Filter which TSTARTLIST_HEAT2 to aggregate.
     * 
    **/
    where?: TSTARTLIST_HEAT2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TSTARTLIST_HEAT2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TSTARTLIST_HEAT2s
    **/
    _count?: true | TSTARTLIST_HEAT2CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TSTARTLIST_HEAT2AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TSTARTLIST_HEAT2SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TSTARTLIST_HEAT2MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TSTARTLIST_HEAT2MaxAggregateInputType
  }

  export type GetTSTARTLIST_HEAT2AggregateType<T extends TSTARTLIST_HEAT2AggregateArgs> = {
        [P in keyof T & keyof AggregateTSTARTLIST_HEAT2]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTSTARTLIST_HEAT2[P]>
      : GetScalarType<T[P], AggregateTSTARTLIST_HEAT2[P]>
  }




  export type TSTARTLIST_HEAT2GroupByArgs = {
    where?: TSTARTLIST_HEAT2WhereInput
    orderBy?: Enumerable<TSTARTLIST_HEAT2OrderByWithAggregationInput>
    by: Array<TSTARTLIST_HEAT2ScalarFieldEnum>
    having?: TSTARTLIST_HEAT2ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TSTARTLIST_HEAT2CountAggregateInputType | true
    _avg?: TSTARTLIST_HEAT2AvgAggregateInputType
    _sum?: TSTARTLIST_HEAT2SumAggregateInputType
    _min?: TSTARTLIST_HEAT2MinAggregateInputType
    _max?: TSTARTLIST_HEAT2MaxAggregateInputType
  }


  export type TSTARTLIST_HEAT2GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_START: number | null
    _count: TSTARTLIST_HEAT2CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT2AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT2SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT2MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT2MaxAggregateOutputType | null
  }

  type GetTSTARTLIST_HEAT2GroupByPayload<T extends TSTARTLIST_HEAT2GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TSTARTLIST_HEAT2GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TSTARTLIST_HEAT2GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TSTARTLIST_HEAT2GroupByOutputType[P]>
            : GetScalarType<T[P], TSTARTLIST_HEAT2GroupByOutputType[P]>
        }
      >
    >


  export type TSTARTLIST_HEAT2Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_START?: boolean
  }

  export type TSTARTLIST_HEAT2GetPayload<
    S extends boolean | null | undefined | TSTARTLIST_HEAT2Args,
    U = keyof S
      > = S extends true
        ? TSTARTLIST_HEAT2
    : S extends undefined
    ? never
    : S extends TSTARTLIST_HEAT2Args | TSTARTLIST_HEAT2FindManyArgs
    ?'include' extends U
    ? TSTARTLIST_HEAT2 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TSTARTLIST_HEAT2 ? TSTARTLIST_HEAT2[P] : never
  } 
    : TSTARTLIST_HEAT2
  : TSTARTLIST_HEAT2


  type TSTARTLIST_HEAT2CountArgs = Merge<
    Omit<TSTARTLIST_HEAT2FindManyArgs, 'select' | 'include'> & {
      select?: TSTARTLIST_HEAT2CountAggregateInputType | true
    }
  >

  export interface TSTARTLIST_HEAT2Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TSTARTLIST_HEAT2 that matches the filter.
     * @param {TSTARTLIST_HEAT2FindUniqueArgs} args - Arguments to find a TSTARTLIST_HEAT2
     * @example
     * // Get one TSTARTLIST_HEAT2
     * const tSTARTLIST_HEAT2 = await prisma.tSTARTLIST_HEAT2.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TSTARTLIST_HEAT2FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TSTARTLIST_HEAT2FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TSTARTLIST_HEAT2'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT2Client<TSTARTLIST_HEAT2>, Prisma__TSTARTLIST_HEAT2Client<TSTARTLIST_HEAT2GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT2Client<TSTARTLIST_HEAT2 | null >, Prisma__TSTARTLIST_HEAT2Client<TSTARTLIST_HEAT2GetPayload<T> | null >>

    /**
     * Find the first TSTARTLIST_HEAT2 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT2FindFirstArgs} args - Arguments to find a TSTARTLIST_HEAT2
     * @example
     * // Get one TSTARTLIST_HEAT2
     * const tSTARTLIST_HEAT2 = await prisma.tSTARTLIST_HEAT2.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TSTARTLIST_HEAT2FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TSTARTLIST_HEAT2FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TSTARTLIST_HEAT2'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT2Client<TSTARTLIST_HEAT2>, Prisma__TSTARTLIST_HEAT2Client<TSTARTLIST_HEAT2GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT2Client<TSTARTLIST_HEAT2 | null >, Prisma__TSTARTLIST_HEAT2Client<TSTARTLIST_HEAT2GetPayload<T> | null >>

    /**
     * Find zero or more TSTARTLIST_HEAT2s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT2FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TSTARTLIST_HEAT2s
     * const tSTARTLIST_HEAT2s = await prisma.tSTARTLIST_HEAT2.findMany()
     * 
     * // Get first 10 TSTARTLIST_HEAT2s
     * const tSTARTLIST_HEAT2s = await prisma.tSTARTLIST_HEAT2.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tSTARTLIST_HEAT2WithC_LINEOnly = await prisma.tSTARTLIST_HEAT2.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TSTARTLIST_HEAT2FindManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT2FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TSTARTLIST_HEAT2>>, PrismaPromise<Array<TSTARTLIST_HEAT2GetPayload<T>>>>

    /**
     * Create a TSTARTLIST_HEAT2.
     * @param {TSTARTLIST_HEAT2CreateArgs} args - Arguments to create a TSTARTLIST_HEAT2.
     * @example
     * // Create one TSTARTLIST_HEAT2
     * const TSTARTLIST_HEAT2 = await prisma.tSTARTLIST_HEAT2.create({
     *   data: {
     *     // ... data to create a TSTARTLIST_HEAT2
     *   }
     * })
     * 
    **/
    create<T extends TSTARTLIST_HEAT2CreateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT2CreateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT2Client<TSTARTLIST_HEAT2>, Prisma__TSTARTLIST_HEAT2Client<TSTARTLIST_HEAT2GetPayload<T>>>

    /**
     * Delete a TSTARTLIST_HEAT2.
     * @param {TSTARTLIST_HEAT2DeleteArgs} args - Arguments to delete one TSTARTLIST_HEAT2.
     * @example
     * // Delete one TSTARTLIST_HEAT2
     * const TSTARTLIST_HEAT2 = await prisma.tSTARTLIST_HEAT2.delete({
     *   where: {
     *     // ... filter to delete one TSTARTLIST_HEAT2
     *   }
     * })
     * 
    **/
    delete<T extends TSTARTLIST_HEAT2DeleteArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT2DeleteArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT2Client<TSTARTLIST_HEAT2>, Prisma__TSTARTLIST_HEAT2Client<TSTARTLIST_HEAT2GetPayload<T>>>

    /**
     * Update one TSTARTLIST_HEAT2.
     * @param {TSTARTLIST_HEAT2UpdateArgs} args - Arguments to update one TSTARTLIST_HEAT2.
     * @example
     * // Update one TSTARTLIST_HEAT2
     * const tSTARTLIST_HEAT2 = await prisma.tSTARTLIST_HEAT2.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TSTARTLIST_HEAT2UpdateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT2UpdateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT2Client<TSTARTLIST_HEAT2>, Prisma__TSTARTLIST_HEAT2Client<TSTARTLIST_HEAT2GetPayload<T>>>

    /**
     * Delete zero or more TSTARTLIST_HEAT2s.
     * @param {TSTARTLIST_HEAT2DeleteManyArgs} args - Arguments to filter TSTARTLIST_HEAT2s to delete.
     * @example
     * // Delete a few TSTARTLIST_HEAT2s
     * const { count } = await prisma.tSTARTLIST_HEAT2.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TSTARTLIST_HEAT2DeleteManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT2DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TSTARTLIST_HEAT2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT2UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TSTARTLIST_HEAT2s
     * const tSTARTLIST_HEAT2 = await prisma.tSTARTLIST_HEAT2.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TSTARTLIST_HEAT2UpdateManyArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT2UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TSTARTLIST_HEAT2.
     * @param {TSTARTLIST_HEAT2UpsertArgs} args - Arguments to update or create a TSTARTLIST_HEAT2.
     * @example
     * // Update or create a TSTARTLIST_HEAT2
     * const tSTARTLIST_HEAT2 = await prisma.tSTARTLIST_HEAT2.upsert({
     *   create: {
     *     // ... data to create a TSTARTLIST_HEAT2
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT2 we want to update
     *   }
     * })
    **/
    upsert<T extends TSTARTLIST_HEAT2UpsertArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT2UpsertArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT2Client<TSTARTLIST_HEAT2>, Prisma__TSTARTLIST_HEAT2Client<TSTARTLIST_HEAT2GetPayload<T>>>

    /**
     * Count the number of TSTARTLIST_HEAT2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT2CountArgs} args - Arguments to filter TSTARTLIST_HEAT2s to count.
     * @example
     * // Count the number of TSTARTLIST_HEAT2s
     * const count = await prisma.tSTARTLIST_HEAT2.count({
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT2s we want to count
     *   }
     * })
    **/
    count<T extends TSTARTLIST_HEAT2CountArgs>(
      args?: Subset<T, TSTARTLIST_HEAT2CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TSTARTLIST_HEAT2CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TSTARTLIST_HEAT2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT2AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TSTARTLIST_HEAT2AggregateArgs>(args: Subset<T, TSTARTLIST_HEAT2AggregateArgs>): PrismaPromise<GetTSTARTLIST_HEAT2AggregateType<T>>

    /**
     * Group by TSTARTLIST_HEAT2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT2GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TSTARTLIST_HEAT2GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TSTARTLIST_HEAT2GroupByArgs['orderBy'] }
        : { orderBy?: TSTARTLIST_HEAT2GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TSTARTLIST_HEAT2GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTSTARTLIST_HEAT2GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TSTARTLIST_HEAT2.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TSTARTLIST_HEAT2Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TSTARTLIST_HEAT2 findUnique
   */
  export type TSTARTLIST_HEAT2FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT2
     * 
    **/
    select?: TSTARTLIST_HEAT2Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT2 to fetch.
     * 
    **/
    where: TSTARTLIST_HEAT2WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT2 findFirst
   */
  export type TSTARTLIST_HEAT2FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT2
     * 
    **/
    select?: TSTARTLIST_HEAT2Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT2 to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TSTARTLIST_HEAT2s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TSTARTLIST_HEAT2s.
     * 
    **/
    distinct?: Enumerable<TSTARTLIST_HEAT2ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT2 findMany
   */
  export type TSTARTLIST_HEAT2FindManyArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT2
     * 
    **/
    select?: TSTARTLIST_HEAT2Select | null
    /**
     * Filter, which TSTARTLIST_HEAT2s to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TSTARTLIST_HEAT2s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT2s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TSTARTLIST_HEAT2ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT2 create
   */
  export type TSTARTLIST_HEAT2CreateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT2
     * 
    **/
    select?: TSTARTLIST_HEAT2Select | null
    /**
     * The data needed to create a TSTARTLIST_HEAT2.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT2CreateInput, TSTARTLIST_HEAT2UncheckedCreateInput>
  }


  /**
   * TSTARTLIST_HEAT2 update
   */
  export type TSTARTLIST_HEAT2UpdateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT2
     * 
    **/
    select?: TSTARTLIST_HEAT2Select | null
    /**
     * The data needed to update a TSTARTLIST_HEAT2.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT2UpdateInput, TSTARTLIST_HEAT2UncheckedUpdateInput>
    /**
     * Choose, which TSTARTLIST_HEAT2 to update.
     * 
    **/
    where: TSTARTLIST_HEAT2WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT2 updateMany
   */
  export type TSTARTLIST_HEAT2UpdateManyArgs = {
    /**
     * The data used to update TSTARTLIST_HEAT2s.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT2UpdateManyMutationInput, TSTARTLIST_HEAT2UncheckedUpdateManyInput>
    /**
     * Filter which TSTARTLIST_HEAT2s to update
     * 
    **/
    where?: TSTARTLIST_HEAT2WhereInput
  }


  /**
   * TSTARTLIST_HEAT2 upsert
   */
  export type TSTARTLIST_HEAT2UpsertArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT2
     * 
    **/
    select?: TSTARTLIST_HEAT2Select | null
    /**
     * The filter to search for the TSTARTLIST_HEAT2 to update in case it exists.
     * 
    **/
    where: TSTARTLIST_HEAT2WhereUniqueInput
    /**
     * In case the TSTARTLIST_HEAT2 found by the `where` argument doesn't exist, create a new TSTARTLIST_HEAT2 with this data.
     * 
    **/
    create: XOR<TSTARTLIST_HEAT2CreateInput, TSTARTLIST_HEAT2UncheckedCreateInput>
    /**
     * In case the TSTARTLIST_HEAT2 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TSTARTLIST_HEAT2UpdateInput, TSTARTLIST_HEAT2UncheckedUpdateInput>
  }


  /**
   * TSTARTLIST_HEAT2 delete
   */
  export type TSTARTLIST_HEAT2DeleteArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT2
     * 
    **/
    select?: TSTARTLIST_HEAT2Select | null
    /**
     * Filter which TSTARTLIST_HEAT2 to delete.
     * 
    **/
    where: TSTARTLIST_HEAT2WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT2 deleteMany
   */
  export type TSTARTLIST_HEAT2DeleteManyArgs = {
    /**
     * Filter which TSTARTLIST_HEAT2s to delete
     * 
    **/
    where?: TSTARTLIST_HEAT2WhereInput
  }


  /**
   * TSTARTLIST_HEAT2 without action
   */
  export type TSTARTLIST_HEAT2Args = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT2
     * 
    **/
    select?: TSTARTLIST_HEAT2Select | null
  }



  /**
   * Model TSTARTLIST_HEAT3
   */


  export type AggregateTSTARTLIST_HEAT3 = {
    _count: TSTARTLIST_HEAT3CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT3AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT3SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT3MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT3MaxAggregateOutputType | null
  }

  export type TSTARTLIST_HEAT3AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT3SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT3MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT3MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT3CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_START: number
    _all: number
  }


  export type TSTARTLIST_HEAT3AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT3SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT3MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT3MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT3CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
    _all?: true
  }

  export type TSTARTLIST_HEAT3AggregateArgs = {
    /**
     * Filter which TSTARTLIST_HEAT3 to aggregate.
     * 
    **/
    where?: TSTARTLIST_HEAT3WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT3s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT3OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TSTARTLIST_HEAT3WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT3s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT3s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TSTARTLIST_HEAT3s
    **/
    _count?: true | TSTARTLIST_HEAT3CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TSTARTLIST_HEAT3AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TSTARTLIST_HEAT3SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TSTARTLIST_HEAT3MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TSTARTLIST_HEAT3MaxAggregateInputType
  }

  export type GetTSTARTLIST_HEAT3AggregateType<T extends TSTARTLIST_HEAT3AggregateArgs> = {
        [P in keyof T & keyof AggregateTSTARTLIST_HEAT3]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTSTARTLIST_HEAT3[P]>
      : GetScalarType<T[P], AggregateTSTARTLIST_HEAT3[P]>
  }




  export type TSTARTLIST_HEAT3GroupByArgs = {
    where?: TSTARTLIST_HEAT3WhereInput
    orderBy?: Enumerable<TSTARTLIST_HEAT3OrderByWithAggregationInput>
    by: Array<TSTARTLIST_HEAT3ScalarFieldEnum>
    having?: TSTARTLIST_HEAT3ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TSTARTLIST_HEAT3CountAggregateInputType | true
    _avg?: TSTARTLIST_HEAT3AvgAggregateInputType
    _sum?: TSTARTLIST_HEAT3SumAggregateInputType
    _min?: TSTARTLIST_HEAT3MinAggregateInputType
    _max?: TSTARTLIST_HEAT3MaxAggregateInputType
  }


  export type TSTARTLIST_HEAT3GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_START: number | null
    _count: TSTARTLIST_HEAT3CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT3AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT3SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT3MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT3MaxAggregateOutputType | null
  }

  type GetTSTARTLIST_HEAT3GroupByPayload<T extends TSTARTLIST_HEAT3GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TSTARTLIST_HEAT3GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TSTARTLIST_HEAT3GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TSTARTLIST_HEAT3GroupByOutputType[P]>
            : GetScalarType<T[P], TSTARTLIST_HEAT3GroupByOutputType[P]>
        }
      >
    >


  export type TSTARTLIST_HEAT3Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_START?: boolean
  }

  export type TSTARTLIST_HEAT3GetPayload<
    S extends boolean | null | undefined | TSTARTLIST_HEAT3Args,
    U = keyof S
      > = S extends true
        ? TSTARTLIST_HEAT3
    : S extends undefined
    ? never
    : S extends TSTARTLIST_HEAT3Args | TSTARTLIST_HEAT3FindManyArgs
    ?'include' extends U
    ? TSTARTLIST_HEAT3 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TSTARTLIST_HEAT3 ? TSTARTLIST_HEAT3[P] : never
  } 
    : TSTARTLIST_HEAT3
  : TSTARTLIST_HEAT3


  type TSTARTLIST_HEAT3CountArgs = Merge<
    Omit<TSTARTLIST_HEAT3FindManyArgs, 'select' | 'include'> & {
      select?: TSTARTLIST_HEAT3CountAggregateInputType | true
    }
  >

  export interface TSTARTLIST_HEAT3Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TSTARTLIST_HEAT3 that matches the filter.
     * @param {TSTARTLIST_HEAT3FindUniqueArgs} args - Arguments to find a TSTARTLIST_HEAT3
     * @example
     * // Get one TSTARTLIST_HEAT3
     * const tSTARTLIST_HEAT3 = await prisma.tSTARTLIST_HEAT3.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TSTARTLIST_HEAT3FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TSTARTLIST_HEAT3FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TSTARTLIST_HEAT3'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT3Client<TSTARTLIST_HEAT3>, Prisma__TSTARTLIST_HEAT3Client<TSTARTLIST_HEAT3GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT3Client<TSTARTLIST_HEAT3 | null >, Prisma__TSTARTLIST_HEAT3Client<TSTARTLIST_HEAT3GetPayload<T> | null >>

    /**
     * Find the first TSTARTLIST_HEAT3 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT3FindFirstArgs} args - Arguments to find a TSTARTLIST_HEAT3
     * @example
     * // Get one TSTARTLIST_HEAT3
     * const tSTARTLIST_HEAT3 = await prisma.tSTARTLIST_HEAT3.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TSTARTLIST_HEAT3FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TSTARTLIST_HEAT3FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TSTARTLIST_HEAT3'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT3Client<TSTARTLIST_HEAT3>, Prisma__TSTARTLIST_HEAT3Client<TSTARTLIST_HEAT3GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT3Client<TSTARTLIST_HEAT3 | null >, Prisma__TSTARTLIST_HEAT3Client<TSTARTLIST_HEAT3GetPayload<T> | null >>

    /**
     * Find zero or more TSTARTLIST_HEAT3s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT3FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TSTARTLIST_HEAT3s
     * const tSTARTLIST_HEAT3s = await prisma.tSTARTLIST_HEAT3.findMany()
     * 
     * // Get first 10 TSTARTLIST_HEAT3s
     * const tSTARTLIST_HEAT3s = await prisma.tSTARTLIST_HEAT3.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tSTARTLIST_HEAT3WithC_LINEOnly = await prisma.tSTARTLIST_HEAT3.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TSTARTLIST_HEAT3FindManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT3FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TSTARTLIST_HEAT3>>, PrismaPromise<Array<TSTARTLIST_HEAT3GetPayload<T>>>>

    /**
     * Create a TSTARTLIST_HEAT3.
     * @param {TSTARTLIST_HEAT3CreateArgs} args - Arguments to create a TSTARTLIST_HEAT3.
     * @example
     * // Create one TSTARTLIST_HEAT3
     * const TSTARTLIST_HEAT3 = await prisma.tSTARTLIST_HEAT3.create({
     *   data: {
     *     // ... data to create a TSTARTLIST_HEAT3
     *   }
     * })
     * 
    **/
    create<T extends TSTARTLIST_HEAT3CreateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT3CreateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT3Client<TSTARTLIST_HEAT3>, Prisma__TSTARTLIST_HEAT3Client<TSTARTLIST_HEAT3GetPayload<T>>>

    /**
     * Delete a TSTARTLIST_HEAT3.
     * @param {TSTARTLIST_HEAT3DeleteArgs} args - Arguments to delete one TSTARTLIST_HEAT3.
     * @example
     * // Delete one TSTARTLIST_HEAT3
     * const TSTARTLIST_HEAT3 = await prisma.tSTARTLIST_HEAT3.delete({
     *   where: {
     *     // ... filter to delete one TSTARTLIST_HEAT3
     *   }
     * })
     * 
    **/
    delete<T extends TSTARTLIST_HEAT3DeleteArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT3DeleteArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT3Client<TSTARTLIST_HEAT3>, Prisma__TSTARTLIST_HEAT3Client<TSTARTLIST_HEAT3GetPayload<T>>>

    /**
     * Update one TSTARTLIST_HEAT3.
     * @param {TSTARTLIST_HEAT3UpdateArgs} args - Arguments to update one TSTARTLIST_HEAT3.
     * @example
     * // Update one TSTARTLIST_HEAT3
     * const tSTARTLIST_HEAT3 = await prisma.tSTARTLIST_HEAT3.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TSTARTLIST_HEAT3UpdateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT3UpdateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT3Client<TSTARTLIST_HEAT3>, Prisma__TSTARTLIST_HEAT3Client<TSTARTLIST_HEAT3GetPayload<T>>>

    /**
     * Delete zero or more TSTARTLIST_HEAT3s.
     * @param {TSTARTLIST_HEAT3DeleteManyArgs} args - Arguments to filter TSTARTLIST_HEAT3s to delete.
     * @example
     * // Delete a few TSTARTLIST_HEAT3s
     * const { count } = await prisma.tSTARTLIST_HEAT3.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TSTARTLIST_HEAT3DeleteManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT3DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TSTARTLIST_HEAT3s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT3UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TSTARTLIST_HEAT3s
     * const tSTARTLIST_HEAT3 = await prisma.tSTARTLIST_HEAT3.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TSTARTLIST_HEAT3UpdateManyArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT3UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TSTARTLIST_HEAT3.
     * @param {TSTARTLIST_HEAT3UpsertArgs} args - Arguments to update or create a TSTARTLIST_HEAT3.
     * @example
     * // Update or create a TSTARTLIST_HEAT3
     * const tSTARTLIST_HEAT3 = await prisma.tSTARTLIST_HEAT3.upsert({
     *   create: {
     *     // ... data to create a TSTARTLIST_HEAT3
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT3 we want to update
     *   }
     * })
    **/
    upsert<T extends TSTARTLIST_HEAT3UpsertArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT3UpsertArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT3Client<TSTARTLIST_HEAT3>, Prisma__TSTARTLIST_HEAT3Client<TSTARTLIST_HEAT3GetPayload<T>>>

    /**
     * Count the number of TSTARTLIST_HEAT3s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT3CountArgs} args - Arguments to filter TSTARTLIST_HEAT3s to count.
     * @example
     * // Count the number of TSTARTLIST_HEAT3s
     * const count = await prisma.tSTARTLIST_HEAT3.count({
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT3s we want to count
     *   }
     * })
    **/
    count<T extends TSTARTLIST_HEAT3CountArgs>(
      args?: Subset<T, TSTARTLIST_HEAT3CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TSTARTLIST_HEAT3CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TSTARTLIST_HEAT3.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT3AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TSTARTLIST_HEAT3AggregateArgs>(args: Subset<T, TSTARTLIST_HEAT3AggregateArgs>): PrismaPromise<GetTSTARTLIST_HEAT3AggregateType<T>>

    /**
     * Group by TSTARTLIST_HEAT3.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT3GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TSTARTLIST_HEAT3GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TSTARTLIST_HEAT3GroupByArgs['orderBy'] }
        : { orderBy?: TSTARTLIST_HEAT3GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TSTARTLIST_HEAT3GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTSTARTLIST_HEAT3GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TSTARTLIST_HEAT3.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TSTARTLIST_HEAT3Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TSTARTLIST_HEAT3 findUnique
   */
  export type TSTARTLIST_HEAT3FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT3
     * 
    **/
    select?: TSTARTLIST_HEAT3Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT3 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT3 to fetch.
     * 
    **/
    where: TSTARTLIST_HEAT3WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT3 findFirst
   */
  export type TSTARTLIST_HEAT3FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT3
     * 
    **/
    select?: TSTARTLIST_HEAT3Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT3 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT3 to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT3WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT3s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT3OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TSTARTLIST_HEAT3s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT3WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT3s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT3s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TSTARTLIST_HEAT3s.
     * 
    **/
    distinct?: Enumerable<TSTARTLIST_HEAT3ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT3 findMany
   */
  export type TSTARTLIST_HEAT3FindManyArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT3
     * 
    **/
    select?: TSTARTLIST_HEAT3Select | null
    /**
     * Filter, which TSTARTLIST_HEAT3s to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT3WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT3s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT3OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TSTARTLIST_HEAT3s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT3WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT3s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT3s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TSTARTLIST_HEAT3ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT3 create
   */
  export type TSTARTLIST_HEAT3CreateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT3
     * 
    **/
    select?: TSTARTLIST_HEAT3Select | null
    /**
     * The data needed to create a TSTARTLIST_HEAT3.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT3CreateInput, TSTARTLIST_HEAT3UncheckedCreateInput>
  }


  /**
   * TSTARTLIST_HEAT3 update
   */
  export type TSTARTLIST_HEAT3UpdateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT3
     * 
    **/
    select?: TSTARTLIST_HEAT3Select | null
    /**
     * The data needed to update a TSTARTLIST_HEAT3.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT3UpdateInput, TSTARTLIST_HEAT3UncheckedUpdateInput>
    /**
     * Choose, which TSTARTLIST_HEAT3 to update.
     * 
    **/
    where: TSTARTLIST_HEAT3WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT3 updateMany
   */
  export type TSTARTLIST_HEAT3UpdateManyArgs = {
    /**
     * The data used to update TSTARTLIST_HEAT3s.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT3UpdateManyMutationInput, TSTARTLIST_HEAT3UncheckedUpdateManyInput>
    /**
     * Filter which TSTARTLIST_HEAT3s to update
     * 
    **/
    where?: TSTARTLIST_HEAT3WhereInput
  }


  /**
   * TSTARTLIST_HEAT3 upsert
   */
  export type TSTARTLIST_HEAT3UpsertArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT3
     * 
    **/
    select?: TSTARTLIST_HEAT3Select | null
    /**
     * The filter to search for the TSTARTLIST_HEAT3 to update in case it exists.
     * 
    **/
    where: TSTARTLIST_HEAT3WhereUniqueInput
    /**
     * In case the TSTARTLIST_HEAT3 found by the `where` argument doesn't exist, create a new TSTARTLIST_HEAT3 with this data.
     * 
    **/
    create: XOR<TSTARTLIST_HEAT3CreateInput, TSTARTLIST_HEAT3UncheckedCreateInput>
    /**
     * In case the TSTARTLIST_HEAT3 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TSTARTLIST_HEAT3UpdateInput, TSTARTLIST_HEAT3UncheckedUpdateInput>
  }


  /**
   * TSTARTLIST_HEAT3 delete
   */
  export type TSTARTLIST_HEAT3DeleteArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT3
     * 
    **/
    select?: TSTARTLIST_HEAT3Select | null
    /**
     * Filter which TSTARTLIST_HEAT3 to delete.
     * 
    **/
    where: TSTARTLIST_HEAT3WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT3 deleteMany
   */
  export type TSTARTLIST_HEAT3DeleteManyArgs = {
    /**
     * Filter which TSTARTLIST_HEAT3s to delete
     * 
    **/
    where?: TSTARTLIST_HEAT3WhereInput
  }


  /**
   * TSTARTLIST_HEAT3 without action
   */
  export type TSTARTLIST_HEAT3Args = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT3
     * 
    **/
    select?: TSTARTLIST_HEAT3Select | null
  }



  /**
   * Model TSTARTLIST_HEAT4
   */


  export type AggregateTSTARTLIST_HEAT4 = {
    _count: TSTARTLIST_HEAT4CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT4AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT4SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT4MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT4MaxAggregateOutputType | null
  }

  export type TSTARTLIST_HEAT4AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT4SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT4MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT4MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT4CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_START: number
    _all: number
  }


  export type TSTARTLIST_HEAT4AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT4SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT4MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT4MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT4CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
    _all?: true
  }

  export type TSTARTLIST_HEAT4AggregateArgs = {
    /**
     * Filter which TSTARTLIST_HEAT4 to aggregate.
     * 
    **/
    where?: TSTARTLIST_HEAT4WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT4s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT4OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TSTARTLIST_HEAT4WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT4s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT4s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TSTARTLIST_HEAT4s
    **/
    _count?: true | TSTARTLIST_HEAT4CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TSTARTLIST_HEAT4AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TSTARTLIST_HEAT4SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TSTARTLIST_HEAT4MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TSTARTLIST_HEAT4MaxAggregateInputType
  }

  export type GetTSTARTLIST_HEAT4AggregateType<T extends TSTARTLIST_HEAT4AggregateArgs> = {
        [P in keyof T & keyof AggregateTSTARTLIST_HEAT4]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTSTARTLIST_HEAT4[P]>
      : GetScalarType<T[P], AggregateTSTARTLIST_HEAT4[P]>
  }




  export type TSTARTLIST_HEAT4GroupByArgs = {
    where?: TSTARTLIST_HEAT4WhereInput
    orderBy?: Enumerable<TSTARTLIST_HEAT4OrderByWithAggregationInput>
    by: Array<TSTARTLIST_HEAT4ScalarFieldEnum>
    having?: TSTARTLIST_HEAT4ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TSTARTLIST_HEAT4CountAggregateInputType | true
    _avg?: TSTARTLIST_HEAT4AvgAggregateInputType
    _sum?: TSTARTLIST_HEAT4SumAggregateInputType
    _min?: TSTARTLIST_HEAT4MinAggregateInputType
    _max?: TSTARTLIST_HEAT4MaxAggregateInputType
  }


  export type TSTARTLIST_HEAT4GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_START: number | null
    _count: TSTARTLIST_HEAT4CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT4AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT4SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT4MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT4MaxAggregateOutputType | null
  }

  type GetTSTARTLIST_HEAT4GroupByPayload<T extends TSTARTLIST_HEAT4GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TSTARTLIST_HEAT4GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TSTARTLIST_HEAT4GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TSTARTLIST_HEAT4GroupByOutputType[P]>
            : GetScalarType<T[P], TSTARTLIST_HEAT4GroupByOutputType[P]>
        }
      >
    >


  export type TSTARTLIST_HEAT4Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_START?: boolean
  }

  export type TSTARTLIST_HEAT4GetPayload<
    S extends boolean | null | undefined | TSTARTLIST_HEAT4Args,
    U = keyof S
      > = S extends true
        ? TSTARTLIST_HEAT4
    : S extends undefined
    ? never
    : S extends TSTARTLIST_HEAT4Args | TSTARTLIST_HEAT4FindManyArgs
    ?'include' extends U
    ? TSTARTLIST_HEAT4 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TSTARTLIST_HEAT4 ? TSTARTLIST_HEAT4[P] : never
  } 
    : TSTARTLIST_HEAT4
  : TSTARTLIST_HEAT4


  type TSTARTLIST_HEAT4CountArgs = Merge<
    Omit<TSTARTLIST_HEAT4FindManyArgs, 'select' | 'include'> & {
      select?: TSTARTLIST_HEAT4CountAggregateInputType | true
    }
  >

  export interface TSTARTLIST_HEAT4Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TSTARTLIST_HEAT4 that matches the filter.
     * @param {TSTARTLIST_HEAT4FindUniqueArgs} args - Arguments to find a TSTARTLIST_HEAT4
     * @example
     * // Get one TSTARTLIST_HEAT4
     * const tSTARTLIST_HEAT4 = await prisma.tSTARTLIST_HEAT4.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TSTARTLIST_HEAT4FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TSTARTLIST_HEAT4FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TSTARTLIST_HEAT4'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT4Client<TSTARTLIST_HEAT4>, Prisma__TSTARTLIST_HEAT4Client<TSTARTLIST_HEAT4GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT4Client<TSTARTLIST_HEAT4 | null >, Prisma__TSTARTLIST_HEAT4Client<TSTARTLIST_HEAT4GetPayload<T> | null >>

    /**
     * Find the first TSTARTLIST_HEAT4 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT4FindFirstArgs} args - Arguments to find a TSTARTLIST_HEAT4
     * @example
     * // Get one TSTARTLIST_HEAT4
     * const tSTARTLIST_HEAT4 = await prisma.tSTARTLIST_HEAT4.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TSTARTLIST_HEAT4FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TSTARTLIST_HEAT4FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TSTARTLIST_HEAT4'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT4Client<TSTARTLIST_HEAT4>, Prisma__TSTARTLIST_HEAT4Client<TSTARTLIST_HEAT4GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT4Client<TSTARTLIST_HEAT4 | null >, Prisma__TSTARTLIST_HEAT4Client<TSTARTLIST_HEAT4GetPayload<T> | null >>

    /**
     * Find zero or more TSTARTLIST_HEAT4s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT4FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TSTARTLIST_HEAT4s
     * const tSTARTLIST_HEAT4s = await prisma.tSTARTLIST_HEAT4.findMany()
     * 
     * // Get first 10 TSTARTLIST_HEAT4s
     * const tSTARTLIST_HEAT4s = await prisma.tSTARTLIST_HEAT4.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tSTARTLIST_HEAT4WithC_LINEOnly = await prisma.tSTARTLIST_HEAT4.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TSTARTLIST_HEAT4FindManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT4FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TSTARTLIST_HEAT4>>, PrismaPromise<Array<TSTARTLIST_HEAT4GetPayload<T>>>>

    /**
     * Create a TSTARTLIST_HEAT4.
     * @param {TSTARTLIST_HEAT4CreateArgs} args - Arguments to create a TSTARTLIST_HEAT4.
     * @example
     * // Create one TSTARTLIST_HEAT4
     * const TSTARTLIST_HEAT4 = await prisma.tSTARTLIST_HEAT4.create({
     *   data: {
     *     // ... data to create a TSTARTLIST_HEAT4
     *   }
     * })
     * 
    **/
    create<T extends TSTARTLIST_HEAT4CreateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT4CreateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT4Client<TSTARTLIST_HEAT4>, Prisma__TSTARTLIST_HEAT4Client<TSTARTLIST_HEAT4GetPayload<T>>>

    /**
     * Delete a TSTARTLIST_HEAT4.
     * @param {TSTARTLIST_HEAT4DeleteArgs} args - Arguments to delete one TSTARTLIST_HEAT4.
     * @example
     * // Delete one TSTARTLIST_HEAT4
     * const TSTARTLIST_HEAT4 = await prisma.tSTARTLIST_HEAT4.delete({
     *   where: {
     *     // ... filter to delete one TSTARTLIST_HEAT4
     *   }
     * })
     * 
    **/
    delete<T extends TSTARTLIST_HEAT4DeleteArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT4DeleteArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT4Client<TSTARTLIST_HEAT4>, Prisma__TSTARTLIST_HEAT4Client<TSTARTLIST_HEAT4GetPayload<T>>>

    /**
     * Update one TSTARTLIST_HEAT4.
     * @param {TSTARTLIST_HEAT4UpdateArgs} args - Arguments to update one TSTARTLIST_HEAT4.
     * @example
     * // Update one TSTARTLIST_HEAT4
     * const tSTARTLIST_HEAT4 = await prisma.tSTARTLIST_HEAT4.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TSTARTLIST_HEAT4UpdateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT4UpdateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT4Client<TSTARTLIST_HEAT4>, Prisma__TSTARTLIST_HEAT4Client<TSTARTLIST_HEAT4GetPayload<T>>>

    /**
     * Delete zero or more TSTARTLIST_HEAT4s.
     * @param {TSTARTLIST_HEAT4DeleteManyArgs} args - Arguments to filter TSTARTLIST_HEAT4s to delete.
     * @example
     * // Delete a few TSTARTLIST_HEAT4s
     * const { count } = await prisma.tSTARTLIST_HEAT4.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TSTARTLIST_HEAT4DeleteManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT4DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TSTARTLIST_HEAT4s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT4UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TSTARTLIST_HEAT4s
     * const tSTARTLIST_HEAT4 = await prisma.tSTARTLIST_HEAT4.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TSTARTLIST_HEAT4UpdateManyArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT4UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TSTARTLIST_HEAT4.
     * @param {TSTARTLIST_HEAT4UpsertArgs} args - Arguments to update or create a TSTARTLIST_HEAT4.
     * @example
     * // Update or create a TSTARTLIST_HEAT4
     * const tSTARTLIST_HEAT4 = await prisma.tSTARTLIST_HEAT4.upsert({
     *   create: {
     *     // ... data to create a TSTARTLIST_HEAT4
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT4 we want to update
     *   }
     * })
    **/
    upsert<T extends TSTARTLIST_HEAT4UpsertArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT4UpsertArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT4Client<TSTARTLIST_HEAT4>, Prisma__TSTARTLIST_HEAT4Client<TSTARTLIST_HEAT4GetPayload<T>>>

    /**
     * Count the number of TSTARTLIST_HEAT4s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT4CountArgs} args - Arguments to filter TSTARTLIST_HEAT4s to count.
     * @example
     * // Count the number of TSTARTLIST_HEAT4s
     * const count = await prisma.tSTARTLIST_HEAT4.count({
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT4s we want to count
     *   }
     * })
    **/
    count<T extends TSTARTLIST_HEAT4CountArgs>(
      args?: Subset<T, TSTARTLIST_HEAT4CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TSTARTLIST_HEAT4CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TSTARTLIST_HEAT4.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT4AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TSTARTLIST_HEAT4AggregateArgs>(args: Subset<T, TSTARTLIST_HEAT4AggregateArgs>): PrismaPromise<GetTSTARTLIST_HEAT4AggregateType<T>>

    /**
     * Group by TSTARTLIST_HEAT4.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT4GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TSTARTLIST_HEAT4GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TSTARTLIST_HEAT4GroupByArgs['orderBy'] }
        : { orderBy?: TSTARTLIST_HEAT4GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TSTARTLIST_HEAT4GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTSTARTLIST_HEAT4GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TSTARTLIST_HEAT4.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TSTARTLIST_HEAT4Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TSTARTLIST_HEAT4 findUnique
   */
  export type TSTARTLIST_HEAT4FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT4
     * 
    **/
    select?: TSTARTLIST_HEAT4Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT4 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT4 to fetch.
     * 
    **/
    where: TSTARTLIST_HEAT4WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT4 findFirst
   */
  export type TSTARTLIST_HEAT4FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT4
     * 
    **/
    select?: TSTARTLIST_HEAT4Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT4 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT4 to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT4WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT4s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT4OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TSTARTLIST_HEAT4s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT4WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT4s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT4s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TSTARTLIST_HEAT4s.
     * 
    **/
    distinct?: Enumerable<TSTARTLIST_HEAT4ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT4 findMany
   */
  export type TSTARTLIST_HEAT4FindManyArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT4
     * 
    **/
    select?: TSTARTLIST_HEAT4Select | null
    /**
     * Filter, which TSTARTLIST_HEAT4s to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT4WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT4s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT4OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TSTARTLIST_HEAT4s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT4WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT4s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT4s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TSTARTLIST_HEAT4ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT4 create
   */
  export type TSTARTLIST_HEAT4CreateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT4
     * 
    **/
    select?: TSTARTLIST_HEAT4Select | null
    /**
     * The data needed to create a TSTARTLIST_HEAT4.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT4CreateInput, TSTARTLIST_HEAT4UncheckedCreateInput>
  }


  /**
   * TSTARTLIST_HEAT4 update
   */
  export type TSTARTLIST_HEAT4UpdateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT4
     * 
    **/
    select?: TSTARTLIST_HEAT4Select | null
    /**
     * The data needed to update a TSTARTLIST_HEAT4.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT4UpdateInput, TSTARTLIST_HEAT4UncheckedUpdateInput>
    /**
     * Choose, which TSTARTLIST_HEAT4 to update.
     * 
    **/
    where: TSTARTLIST_HEAT4WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT4 updateMany
   */
  export type TSTARTLIST_HEAT4UpdateManyArgs = {
    /**
     * The data used to update TSTARTLIST_HEAT4s.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT4UpdateManyMutationInput, TSTARTLIST_HEAT4UncheckedUpdateManyInput>
    /**
     * Filter which TSTARTLIST_HEAT4s to update
     * 
    **/
    where?: TSTARTLIST_HEAT4WhereInput
  }


  /**
   * TSTARTLIST_HEAT4 upsert
   */
  export type TSTARTLIST_HEAT4UpsertArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT4
     * 
    **/
    select?: TSTARTLIST_HEAT4Select | null
    /**
     * The filter to search for the TSTARTLIST_HEAT4 to update in case it exists.
     * 
    **/
    where: TSTARTLIST_HEAT4WhereUniqueInput
    /**
     * In case the TSTARTLIST_HEAT4 found by the `where` argument doesn't exist, create a new TSTARTLIST_HEAT4 with this data.
     * 
    **/
    create: XOR<TSTARTLIST_HEAT4CreateInput, TSTARTLIST_HEAT4UncheckedCreateInput>
    /**
     * In case the TSTARTLIST_HEAT4 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TSTARTLIST_HEAT4UpdateInput, TSTARTLIST_HEAT4UncheckedUpdateInput>
  }


  /**
   * TSTARTLIST_HEAT4 delete
   */
  export type TSTARTLIST_HEAT4DeleteArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT4
     * 
    **/
    select?: TSTARTLIST_HEAT4Select | null
    /**
     * Filter which TSTARTLIST_HEAT4 to delete.
     * 
    **/
    where: TSTARTLIST_HEAT4WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT4 deleteMany
   */
  export type TSTARTLIST_HEAT4DeleteManyArgs = {
    /**
     * Filter which TSTARTLIST_HEAT4s to delete
     * 
    **/
    where?: TSTARTLIST_HEAT4WhereInput
  }


  /**
   * TSTARTLIST_HEAT4 without action
   */
  export type TSTARTLIST_HEAT4Args = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT4
     * 
    **/
    select?: TSTARTLIST_HEAT4Select | null
  }



  /**
   * Model TSTARTLIST_HEAT5
   */


  export type AggregateTSTARTLIST_HEAT5 = {
    _count: TSTARTLIST_HEAT5CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT5AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT5SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT5MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT5MaxAggregateOutputType | null
  }

  export type TSTARTLIST_HEAT5AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT5SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT5MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT5MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT5CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_START: number
    _all: number
  }


  export type TSTARTLIST_HEAT5AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT5SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT5MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT5MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT5CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
    _all?: true
  }

  export type TSTARTLIST_HEAT5AggregateArgs = {
    /**
     * Filter which TSTARTLIST_HEAT5 to aggregate.
     * 
    **/
    where?: TSTARTLIST_HEAT5WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT5s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT5OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TSTARTLIST_HEAT5WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT5s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT5s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TSTARTLIST_HEAT5s
    **/
    _count?: true | TSTARTLIST_HEAT5CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TSTARTLIST_HEAT5AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TSTARTLIST_HEAT5SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TSTARTLIST_HEAT5MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TSTARTLIST_HEAT5MaxAggregateInputType
  }

  export type GetTSTARTLIST_HEAT5AggregateType<T extends TSTARTLIST_HEAT5AggregateArgs> = {
        [P in keyof T & keyof AggregateTSTARTLIST_HEAT5]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTSTARTLIST_HEAT5[P]>
      : GetScalarType<T[P], AggregateTSTARTLIST_HEAT5[P]>
  }




  export type TSTARTLIST_HEAT5GroupByArgs = {
    where?: TSTARTLIST_HEAT5WhereInput
    orderBy?: Enumerable<TSTARTLIST_HEAT5OrderByWithAggregationInput>
    by: Array<TSTARTLIST_HEAT5ScalarFieldEnum>
    having?: TSTARTLIST_HEAT5ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TSTARTLIST_HEAT5CountAggregateInputType | true
    _avg?: TSTARTLIST_HEAT5AvgAggregateInputType
    _sum?: TSTARTLIST_HEAT5SumAggregateInputType
    _min?: TSTARTLIST_HEAT5MinAggregateInputType
    _max?: TSTARTLIST_HEAT5MaxAggregateInputType
  }


  export type TSTARTLIST_HEAT5GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_START: number | null
    _count: TSTARTLIST_HEAT5CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT5AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT5SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT5MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT5MaxAggregateOutputType | null
  }

  type GetTSTARTLIST_HEAT5GroupByPayload<T extends TSTARTLIST_HEAT5GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TSTARTLIST_HEAT5GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TSTARTLIST_HEAT5GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TSTARTLIST_HEAT5GroupByOutputType[P]>
            : GetScalarType<T[P], TSTARTLIST_HEAT5GroupByOutputType[P]>
        }
      >
    >


  export type TSTARTLIST_HEAT5Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_START?: boolean
  }

  export type TSTARTLIST_HEAT5GetPayload<
    S extends boolean | null | undefined | TSTARTLIST_HEAT5Args,
    U = keyof S
      > = S extends true
        ? TSTARTLIST_HEAT5
    : S extends undefined
    ? never
    : S extends TSTARTLIST_HEAT5Args | TSTARTLIST_HEAT5FindManyArgs
    ?'include' extends U
    ? TSTARTLIST_HEAT5 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TSTARTLIST_HEAT5 ? TSTARTLIST_HEAT5[P] : never
  } 
    : TSTARTLIST_HEAT5
  : TSTARTLIST_HEAT5


  type TSTARTLIST_HEAT5CountArgs = Merge<
    Omit<TSTARTLIST_HEAT5FindManyArgs, 'select' | 'include'> & {
      select?: TSTARTLIST_HEAT5CountAggregateInputType | true
    }
  >

  export interface TSTARTLIST_HEAT5Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TSTARTLIST_HEAT5 that matches the filter.
     * @param {TSTARTLIST_HEAT5FindUniqueArgs} args - Arguments to find a TSTARTLIST_HEAT5
     * @example
     * // Get one TSTARTLIST_HEAT5
     * const tSTARTLIST_HEAT5 = await prisma.tSTARTLIST_HEAT5.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TSTARTLIST_HEAT5FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TSTARTLIST_HEAT5FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TSTARTLIST_HEAT5'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT5Client<TSTARTLIST_HEAT5>, Prisma__TSTARTLIST_HEAT5Client<TSTARTLIST_HEAT5GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT5Client<TSTARTLIST_HEAT5 | null >, Prisma__TSTARTLIST_HEAT5Client<TSTARTLIST_HEAT5GetPayload<T> | null >>

    /**
     * Find the first TSTARTLIST_HEAT5 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT5FindFirstArgs} args - Arguments to find a TSTARTLIST_HEAT5
     * @example
     * // Get one TSTARTLIST_HEAT5
     * const tSTARTLIST_HEAT5 = await prisma.tSTARTLIST_HEAT5.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TSTARTLIST_HEAT5FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TSTARTLIST_HEAT5FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TSTARTLIST_HEAT5'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT5Client<TSTARTLIST_HEAT5>, Prisma__TSTARTLIST_HEAT5Client<TSTARTLIST_HEAT5GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT5Client<TSTARTLIST_HEAT5 | null >, Prisma__TSTARTLIST_HEAT5Client<TSTARTLIST_HEAT5GetPayload<T> | null >>

    /**
     * Find zero or more TSTARTLIST_HEAT5s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT5FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TSTARTLIST_HEAT5s
     * const tSTARTLIST_HEAT5s = await prisma.tSTARTLIST_HEAT5.findMany()
     * 
     * // Get first 10 TSTARTLIST_HEAT5s
     * const tSTARTLIST_HEAT5s = await prisma.tSTARTLIST_HEAT5.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tSTARTLIST_HEAT5WithC_LINEOnly = await prisma.tSTARTLIST_HEAT5.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TSTARTLIST_HEAT5FindManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT5FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TSTARTLIST_HEAT5>>, PrismaPromise<Array<TSTARTLIST_HEAT5GetPayload<T>>>>

    /**
     * Create a TSTARTLIST_HEAT5.
     * @param {TSTARTLIST_HEAT5CreateArgs} args - Arguments to create a TSTARTLIST_HEAT5.
     * @example
     * // Create one TSTARTLIST_HEAT5
     * const TSTARTLIST_HEAT5 = await prisma.tSTARTLIST_HEAT5.create({
     *   data: {
     *     // ... data to create a TSTARTLIST_HEAT5
     *   }
     * })
     * 
    **/
    create<T extends TSTARTLIST_HEAT5CreateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT5CreateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT5Client<TSTARTLIST_HEAT5>, Prisma__TSTARTLIST_HEAT5Client<TSTARTLIST_HEAT5GetPayload<T>>>

    /**
     * Delete a TSTARTLIST_HEAT5.
     * @param {TSTARTLIST_HEAT5DeleteArgs} args - Arguments to delete one TSTARTLIST_HEAT5.
     * @example
     * // Delete one TSTARTLIST_HEAT5
     * const TSTARTLIST_HEAT5 = await prisma.tSTARTLIST_HEAT5.delete({
     *   where: {
     *     // ... filter to delete one TSTARTLIST_HEAT5
     *   }
     * })
     * 
    **/
    delete<T extends TSTARTLIST_HEAT5DeleteArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT5DeleteArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT5Client<TSTARTLIST_HEAT5>, Prisma__TSTARTLIST_HEAT5Client<TSTARTLIST_HEAT5GetPayload<T>>>

    /**
     * Update one TSTARTLIST_HEAT5.
     * @param {TSTARTLIST_HEAT5UpdateArgs} args - Arguments to update one TSTARTLIST_HEAT5.
     * @example
     * // Update one TSTARTLIST_HEAT5
     * const tSTARTLIST_HEAT5 = await prisma.tSTARTLIST_HEAT5.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TSTARTLIST_HEAT5UpdateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT5UpdateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT5Client<TSTARTLIST_HEAT5>, Prisma__TSTARTLIST_HEAT5Client<TSTARTLIST_HEAT5GetPayload<T>>>

    /**
     * Delete zero or more TSTARTLIST_HEAT5s.
     * @param {TSTARTLIST_HEAT5DeleteManyArgs} args - Arguments to filter TSTARTLIST_HEAT5s to delete.
     * @example
     * // Delete a few TSTARTLIST_HEAT5s
     * const { count } = await prisma.tSTARTLIST_HEAT5.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TSTARTLIST_HEAT5DeleteManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT5DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TSTARTLIST_HEAT5s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT5UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TSTARTLIST_HEAT5s
     * const tSTARTLIST_HEAT5 = await prisma.tSTARTLIST_HEAT5.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TSTARTLIST_HEAT5UpdateManyArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT5UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TSTARTLIST_HEAT5.
     * @param {TSTARTLIST_HEAT5UpsertArgs} args - Arguments to update or create a TSTARTLIST_HEAT5.
     * @example
     * // Update or create a TSTARTLIST_HEAT5
     * const tSTARTLIST_HEAT5 = await prisma.tSTARTLIST_HEAT5.upsert({
     *   create: {
     *     // ... data to create a TSTARTLIST_HEAT5
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT5 we want to update
     *   }
     * })
    **/
    upsert<T extends TSTARTLIST_HEAT5UpsertArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT5UpsertArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT5Client<TSTARTLIST_HEAT5>, Prisma__TSTARTLIST_HEAT5Client<TSTARTLIST_HEAT5GetPayload<T>>>

    /**
     * Count the number of TSTARTLIST_HEAT5s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT5CountArgs} args - Arguments to filter TSTARTLIST_HEAT5s to count.
     * @example
     * // Count the number of TSTARTLIST_HEAT5s
     * const count = await prisma.tSTARTLIST_HEAT5.count({
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT5s we want to count
     *   }
     * })
    **/
    count<T extends TSTARTLIST_HEAT5CountArgs>(
      args?: Subset<T, TSTARTLIST_HEAT5CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TSTARTLIST_HEAT5CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TSTARTLIST_HEAT5.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT5AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TSTARTLIST_HEAT5AggregateArgs>(args: Subset<T, TSTARTLIST_HEAT5AggregateArgs>): PrismaPromise<GetTSTARTLIST_HEAT5AggregateType<T>>

    /**
     * Group by TSTARTLIST_HEAT5.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT5GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TSTARTLIST_HEAT5GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TSTARTLIST_HEAT5GroupByArgs['orderBy'] }
        : { orderBy?: TSTARTLIST_HEAT5GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TSTARTLIST_HEAT5GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTSTARTLIST_HEAT5GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TSTARTLIST_HEAT5.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TSTARTLIST_HEAT5Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TSTARTLIST_HEAT5 findUnique
   */
  export type TSTARTLIST_HEAT5FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT5
     * 
    **/
    select?: TSTARTLIST_HEAT5Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT5 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT5 to fetch.
     * 
    **/
    where: TSTARTLIST_HEAT5WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT5 findFirst
   */
  export type TSTARTLIST_HEAT5FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT5
     * 
    **/
    select?: TSTARTLIST_HEAT5Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT5 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT5 to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT5WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT5s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT5OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TSTARTLIST_HEAT5s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT5WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT5s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT5s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TSTARTLIST_HEAT5s.
     * 
    **/
    distinct?: Enumerable<TSTARTLIST_HEAT5ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT5 findMany
   */
  export type TSTARTLIST_HEAT5FindManyArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT5
     * 
    **/
    select?: TSTARTLIST_HEAT5Select | null
    /**
     * Filter, which TSTARTLIST_HEAT5s to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT5WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT5s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT5OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TSTARTLIST_HEAT5s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT5WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT5s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT5s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TSTARTLIST_HEAT5ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT5 create
   */
  export type TSTARTLIST_HEAT5CreateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT5
     * 
    **/
    select?: TSTARTLIST_HEAT5Select | null
    /**
     * The data needed to create a TSTARTLIST_HEAT5.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT5CreateInput, TSTARTLIST_HEAT5UncheckedCreateInput>
  }


  /**
   * TSTARTLIST_HEAT5 update
   */
  export type TSTARTLIST_HEAT5UpdateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT5
     * 
    **/
    select?: TSTARTLIST_HEAT5Select | null
    /**
     * The data needed to update a TSTARTLIST_HEAT5.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT5UpdateInput, TSTARTLIST_HEAT5UncheckedUpdateInput>
    /**
     * Choose, which TSTARTLIST_HEAT5 to update.
     * 
    **/
    where: TSTARTLIST_HEAT5WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT5 updateMany
   */
  export type TSTARTLIST_HEAT5UpdateManyArgs = {
    /**
     * The data used to update TSTARTLIST_HEAT5s.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT5UpdateManyMutationInput, TSTARTLIST_HEAT5UncheckedUpdateManyInput>
    /**
     * Filter which TSTARTLIST_HEAT5s to update
     * 
    **/
    where?: TSTARTLIST_HEAT5WhereInput
  }


  /**
   * TSTARTLIST_HEAT5 upsert
   */
  export type TSTARTLIST_HEAT5UpsertArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT5
     * 
    **/
    select?: TSTARTLIST_HEAT5Select | null
    /**
     * The filter to search for the TSTARTLIST_HEAT5 to update in case it exists.
     * 
    **/
    where: TSTARTLIST_HEAT5WhereUniqueInput
    /**
     * In case the TSTARTLIST_HEAT5 found by the `where` argument doesn't exist, create a new TSTARTLIST_HEAT5 with this data.
     * 
    **/
    create: XOR<TSTARTLIST_HEAT5CreateInput, TSTARTLIST_HEAT5UncheckedCreateInput>
    /**
     * In case the TSTARTLIST_HEAT5 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TSTARTLIST_HEAT5UpdateInput, TSTARTLIST_HEAT5UncheckedUpdateInput>
  }


  /**
   * TSTARTLIST_HEAT5 delete
   */
  export type TSTARTLIST_HEAT5DeleteArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT5
     * 
    **/
    select?: TSTARTLIST_HEAT5Select | null
    /**
     * Filter which TSTARTLIST_HEAT5 to delete.
     * 
    **/
    where: TSTARTLIST_HEAT5WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT5 deleteMany
   */
  export type TSTARTLIST_HEAT5DeleteManyArgs = {
    /**
     * Filter which TSTARTLIST_HEAT5s to delete
     * 
    **/
    where?: TSTARTLIST_HEAT5WhereInput
  }


  /**
   * TSTARTLIST_HEAT5 without action
   */
  export type TSTARTLIST_HEAT5Args = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT5
     * 
    **/
    select?: TSTARTLIST_HEAT5Select | null
  }



  /**
   * Model TSTARTLIST_HEAT6
   */


  export type AggregateTSTARTLIST_HEAT6 = {
    _count: TSTARTLIST_HEAT6CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT6AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT6SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT6MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT6MaxAggregateOutputType | null
  }

  export type TSTARTLIST_HEAT6AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT6SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT6MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT6MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT6CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_START: number
    _all: number
  }


  export type TSTARTLIST_HEAT6AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT6SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT6MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT6MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT6CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
    _all?: true
  }

  export type TSTARTLIST_HEAT6AggregateArgs = {
    /**
     * Filter which TSTARTLIST_HEAT6 to aggregate.
     * 
    **/
    where?: TSTARTLIST_HEAT6WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT6s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT6OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TSTARTLIST_HEAT6WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT6s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT6s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TSTARTLIST_HEAT6s
    **/
    _count?: true | TSTARTLIST_HEAT6CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TSTARTLIST_HEAT6AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TSTARTLIST_HEAT6SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TSTARTLIST_HEAT6MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TSTARTLIST_HEAT6MaxAggregateInputType
  }

  export type GetTSTARTLIST_HEAT6AggregateType<T extends TSTARTLIST_HEAT6AggregateArgs> = {
        [P in keyof T & keyof AggregateTSTARTLIST_HEAT6]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTSTARTLIST_HEAT6[P]>
      : GetScalarType<T[P], AggregateTSTARTLIST_HEAT6[P]>
  }




  export type TSTARTLIST_HEAT6GroupByArgs = {
    where?: TSTARTLIST_HEAT6WhereInput
    orderBy?: Enumerable<TSTARTLIST_HEAT6OrderByWithAggregationInput>
    by: Array<TSTARTLIST_HEAT6ScalarFieldEnum>
    having?: TSTARTLIST_HEAT6ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TSTARTLIST_HEAT6CountAggregateInputType | true
    _avg?: TSTARTLIST_HEAT6AvgAggregateInputType
    _sum?: TSTARTLIST_HEAT6SumAggregateInputType
    _min?: TSTARTLIST_HEAT6MinAggregateInputType
    _max?: TSTARTLIST_HEAT6MaxAggregateInputType
  }


  export type TSTARTLIST_HEAT6GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_START: number | null
    _count: TSTARTLIST_HEAT6CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT6AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT6SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT6MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT6MaxAggregateOutputType | null
  }

  type GetTSTARTLIST_HEAT6GroupByPayload<T extends TSTARTLIST_HEAT6GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TSTARTLIST_HEAT6GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TSTARTLIST_HEAT6GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TSTARTLIST_HEAT6GroupByOutputType[P]>
            : GetScalarType<T[P], TSTARTLIST_HEAT6GroupByOutputType[P]>
        }
      >
    >


  export type TSTARTLIST_HEAT6Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_START?: boolean
  }

  export type TSTARTLIST_HEAT6GetPayload<
    S extends boolean | null | undefined | TSTARTLIST_HEAT6Args,
    U = keyof S
      > = S extends true
        ? TSTARTLIST_HEAT6
    : S extends undefined
    ? never
    : S extends TSTARTLIST_HEAT6Args | TSTARTLIST_HEAT6FindManyArgs
    ?'include' extends U
    ? TSTARTLIST_HEAT6 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TSTARTLIST_HEAT6 ? TSTARTLIST_HEAT6[P] : never
  } 
    : TSTARTLIST_HEAT6
  : TSTARTLIST_HEAT6


  type TSTARTLIST_HEAT6CountArgs = Merge<
    Omit<TSTARTLIST_HEAT6FindManyArgs, 'select' | 'include'> & {
      select?: TSTARTLIST_HEAT6CountAggregateInputType | true
    }
  >

  export interface TSTARTLIST_HEAT6Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TSTARTLIST_HEAT6 that matches the filter.
     * @param {TSTARTLIST_HEAT6FindUniqueArgs} args - Arguments to find a TSTARTLIST_HEAT6
     * @example
     * // Get one TSTARTLIST_HEAT6
     * const tSTARTLIST_HEAT6 = await prisma.tSTARTLIST_HEAT6.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TSTARTLIST_HEAT6FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TSTARTLIST_HEAT6FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TSTARTLIST_HEAT6'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT6Client<TSTARTLIST_HEAT6>, Prisma__TSTARTLIST_HEAT6Client<TSTARTLIST_HEAT6GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT6Client<TSTARTLIST_HEAT6 | null >, Prisma__TSTARTLIST_HEAT6Client<TSTARTLIST_HEAT6GetPayload<T> | null >>

    /**
     * Find the first TSTARTLIST_HEAT6 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT6FindFirstArgs} args - Arguments to find a TSTARTLIST_HEAT6
     * @example
     * // Get one TSTARTLIST_HEAT6
     * const tSTARTLIST_HEAT6 = await prisma.tSTARTLIST_HEAT6.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TSTARTLIST_HEAT6FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TSTARTLIST_HEAT6FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TSTARTLIST_HEAT6'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT6Client<TSTARTLIST_HEAT6>, Prisma__TSTARTLIST_HEAT6Client<TSTARTLIST_HEAT6GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT6Client<TSTARTLIST_HEAT6 | null >, Prisma__TSTARTLIST_HEAT6Client<TSTARTLIST_HEAT6GetPayload<T> | null >>

    /**
     * Find zero or more TSTARTLIST_HEAT6s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT6FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TSTARTLIST_HEAT6s
     * const tSTARTLIST_HEAT6s = await prisma.tSTARTLIST_HEAT6.findMany()
     * 
     * // Get first 10 TSTARTLIST_HEAT6s
     * const tSTARTLIST_HEAT6s = await prisma.tSTARTLIST_HEAT6.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tSTARTLIST_HEAT6WithC_LINEOnly = await prisma.tSTARTLIST_HEAT6.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TSTARTLIST_HEAT6FindManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT6FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TSTARTLIST_HEAT6>>, PrismaPromise<Array<TSTARTLIST_HEAT6GetPayload<T>>>>

    /**
     * Create a TSTARTLIST_HEAT6.
     * @param {TSTARTLIST_HEAT6CreateArgs} args - Arguments to create a TSTARTLIST_HEAT6.
     * @example
     * // Create one TSTARTLIST_HEAT6
     * const TSTARTLIST_HEAT6 = await prisma.tSTARTLIST_HEAT6.create({
     *   data: {
     *     // ... data to create a TSTARTLIST_HEAT6
     *   }
     * })
     * 
    **/
    create<T extends TSTARTLIST_HEAT6CreateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT6CreateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT6Client<TSTARTLIST_HEAT6>, Prisma__TSTARTLIST_HEAT6Client<TSTARTLIST_HEAT6GetPayload<T>>>

    /**
     * Delete a TSTARTLIST_HEAT6.
     * @param {TSTARTLIST_HEAT6DeleteArgs} args - Arguments to delete one TSTARTLIST_HEAT6.
     * @example
     * // Delete one TSTARTLIST_HEAT6
     * const TSTARTLIST_HEAT6 = await prisma.tSTARTLIST_HEAT6.delete({
     *   where: {
     *     // ... filter to delete one TSTARTLIST_HEAT6
     *   }
     * })
     * 
    **/
    delete<T extends TSTARTLIST_HEAT6DeleteArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT6DeleteArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT6Client<TSTARTLIST_HEAT6>, Prisma__TSTARTLIST_HEAT6Client<TSTARTLIST_HEAT6GetPayload<T>>>

    /**
     * Update one TSTARTLIST_HEAT6.
     * @param {TSTARTLIST_HEAT6UpdateArgs} args - Arguments to update one TSTARTLIST_HEAT6.
     * @example
     * // Update one TSTARTLIST_HEAT6
     * const tSTARTLIST_HEAT6 = await prisma.tSTARTLIST_HEAT6.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TSTARTLIST_HEAT6UpdateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT6UpdateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT6Client<TSTARTLIST_HEAT6>, Prisma__TSTARTLIST_HEAT6Client<TSTARTLIST_HEAT6GetPayload<T>>>

    /**
     * Delete zero or more TSTARTLIST_HEAT6s.
     * @param {TSTARTLIST_HEAT6DeleteManyArgs} args - Arguments to filter TSTARTLIST_HEAT6s to delete.
     * @example
     * // Delete a few TSTARTLIST_HEAT6s
     * const { count } = await prisma.tSTARTLIST_HEAT6.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TSTARTLIST_HEAT6DeleteManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT6DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TSTARTLIST_HEAT6s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT6UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TSTARTLIST_HEAT6s
     * const tSTARTLIST_HEAT6 = await prisma.tSTARTLIST_HEAT6.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TSTARTLIST_HEAT6UpdateManyArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT6UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TSTARTLIST_HEAT6.
     * @param {TSTARTLIST_HEAT6UpsertArgs} args - Arguments to update or create a TSTARTLIST_HEAT6.
     * @example
     * // Update or create a TSTARTLIST_HEAT6
     * const tSTARTLIST_HEAT6 = await prisma.tSTARTLIST_HEAT6.upsert({
     *   create: {
     *     // ... data to create a TSTARTLIST_HEAT6
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT6 we want to update
     *   }
     * })
    **/
    upsert<T extends TSTARTLIST_HEAT6UpsertArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT6UpsertArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT6Client<TSTARTLIST_HEAT6>, Prisma__TSTARTLIST_HEAT6Client<TSTARTLIST_HEAT6GetPayload<T>>>

    /**
     * Count the number of TSTARTLIST_HEAT6s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT6CountArgs} args - Arguments to filter TSTARTLIST_HEAT6s to count.
     * @example
     * // Count the number of TSTARTLIST_HEAT6s
     * const count = await prisma.tSTARTLIST_HEAT6.count({
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT6s we want to count
     *   }
     * })
    **/
    count<T extends TSTARTLIST_HEAT6CountArgs>(
      args?: Subset<T, TSTARTLIST_HEAT6CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TSTARTLIST_HEAT6CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TSTARTLIST_HEAT6.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT6AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TSTARTLIST_HEAT6AggregateArgs>(args: Subset<T, TSTARTLIST_HEAT6AggregateArgs>): PrismaPromise<GetTSTARTLIST_HEAT6AggregateType<T>>

    /**
     * Group by TSTARTLIST_HEAT6.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT6GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TSTARTLIST_HEAT6GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TSTARTLIST_HEAT6GroupByArgs['orderBy'] }
        : { orderBy?: TSTARTLIST_HEAT6GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TSTARTLIST_HEAT6GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTSTARTLIST_HEAT6GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TSTARTLIST_HEAT6.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TSTARTLIST_HEAT6Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TSTARTLIST_HEAT6 findUnique
   */
  export type TSTARTLIST_HEAT6FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT6
     * 
    **/
    select?: TSTARTLIST_HEAT6Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT6 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT6 to fetch.
     * 
    **/
    where: TSTARTLIST_HEAT6WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT6 findFirst
   */
  export type TSTARTLIST_HEAT6FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT6
     * 
    **/
    select?: TSTARTLIST_HEAT6Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT6 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT6 to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT6WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT6s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT6OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TSTARTLIST_HEAT6s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT6WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT6s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT6s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TSTARTLIST_HEAT6s.
     * 
    **/
    distinct?: Enumerable<TSTARTLIST_HEAT6ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT6 findMany
   */
  export type TSTARTLIST_HEAT6FindManyArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT6
     * 
    **/
    select?: TSTARTLIST_HEAT6Select | null
    /**
     * Filter, which TSTARTLIST_HEAT6s to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT6WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT6s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT6OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TSTARTLIST_HEAT6s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT6WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT6s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT6s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TSTARTLIST_HEAT6ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT6 create
   */
  export type TSTARTLIST_HEAT6CreateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT6
     * 
    **/
    select?: TSTARTLIST_HEAT6Select | null
    /**
     * The data needed to create a TSTARTLIST_HEAT6.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT6CreateInput, TSTARTLIST_HEAT6UncheckedCreateInput>
  }


  /**
   * TSTARTLIST_HEAT6 update
   */
  export type TSTARTLIST_HEAT6UpdateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT6
     * 
    **/
    select?: TSTARTLIST_HEAT6Select | null
    /**
     * The data needed to update a TSTARTLIST_HEAT6.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT6UpdateInput, TSTARTLIST_HEAT6UncheckedUpdateInput>
    /**
     * Choose, which TSTARTLIST_HEAT6 to update.
     * 
    **/
    where: TSTARTLIST_HEAT6WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT6 updateMany
   */
  export type TSTARTLIST_HEAT6UpdateManyArgs = {
    /**
     * The data used to update TSTARTLIST_HEAT6s.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT6UpdateManyMutationInput, TSTARTLIST_HEAT6UncheckedUpdateManyInput>
    /**
     * Filter which TSTARTLIST_HEAT6s to update
     * 
    **/
    where?: TSTARTLIST_HEAT6WhereInput
  }


  /**
   * TSTARTLIST_HEAT6 upsert
   */
  export type TSTARTLIST_HEAT6UpsertArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT6
     * 
    **/
    select?: TSTARTLIST_HEAT6Select | null
    /**
     * The filter to search for the TSTARTLIST_HEAT6 to update in case it exists.
     * 
    **/
    where: TSTARTLIST_HEAT6WhereUniqueInput
    /**
     * In case the TSTARTLIST_HEAT6 found by the `where` argument doesn't exist, create a new TSTARTLIST_HEAT6 with this data.
     * 
    **/
    create: XOR<TSTARTLIST_HEAT6CreateInput, TSTARTLIST_HEAT6UncheckedCreateInput>
    /**
     * In case the TSTARTLIST_HEAT6 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TSTARTLIST_HEAT6UpdateInput, TSTARTLIST_HEAT6UncheckedUpdateInput>
  }


  /**
   * TSTARTLIST_HEAT6 delete
   */
  export type TSTARTLIST_HEAT6DeleteArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT6
     * 
    **/
    select?: TSTARTLIST_HEAT6Select | null
    /**
     * Filter which TSTARTLIST_HEAT6 to delete.
     * 
    **/
    where: TSTARTLIST_HEAT6WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT6 deleteMany
   */
  export type TSTARTLIST_HEAT6DeleteManyArgs = {
    /**
     * Filter which TSTARTLIST_HEAT6s to delete
     * 
    **/
    where?: TSTARTLIST_HEAT6WhereInput
  }


  /**
   * TSTARTLIST_HEAT6 without action
   */
  export type TSTARTLIST_HEAT6Args = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT6
     * 
    **/
    select?: TSTARTLIST_HEAT6Select | null
  }



  /**
   * Model TSTARTLIST_HEAT7
   */


  export type AggregateTSTARTLIST_HEAT7 = {
    _count: TSTARTLIST_HEAT7CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT7AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT7SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT7MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT7MaxAggregateOutputType | null
  }

  export type TSTARTLIST_HEAT7AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT7SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT7MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT7MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT7CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_START: number
    _all: number
  }


  export type TSTARTLIST_HEAT7AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT7SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT7MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT7MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT7CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
    _all?: true
  }

  export type TSTARTLIST_HEAT7AggregateArgs = {
    /**
     * Filter which TSTARTLIST_HEAT7 to aggregate.
     * 
    **/
    where?: TSTARTLIST_HEAT7WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT7s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT7OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TSTARTLIST_HEAT7WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT7s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT7s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TSTARTLIST_HEAT7s
    **/
    _count?: true | TSTARTLIST_HEAT7CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TSTARTLIST_HEAT7AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TSTARTLIST_HEAT7SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TSTARTLIST_HEAT7MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TSTARTLIST_HEAT7MaxAggregateInputType
  }

  export type GetTSTARTLIST_HEAT7AggregateType<T extends TSTARTLIST_HEAT7AggregateArgs> = {
        [P in keyof T & keyof AggregateTSTARTLIST_HEAT7]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTSTARTLIST_HEAT7[P]>
      : GetScalarType<T[P], AggregateTSTARTLIST_HEAT7[P]>
  }




  export type TSTARTLIST_HEAT7GroupByArgs = {
    where?: TSTARTLIST_HEAT7WhereInput
    orderBy?: Enumerable<TSTARTLIST_HEAT7OrderByWithAggregationInput>
    by: Array<TSTARTLIST_HEAT7ScalarFieldEnum>
    having?: TSTARTLIST_HEAT7ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TSTARTLIST_HEAT7CountAggregateInputType | true
    _avg?: TSTARTLIST_HEAT7AvgAggregateInputType
    _sum?: TSTARTLIST_HEAT7SumAggregateInputType
    _min?: TSTARTLIST_HEAT7MinAggregateInputType
    _max?: TSTARTLIST_HEAT7MaxAggregateInputType
  }


  export type TSTARTLIST_HEAT7GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_START: number | null
    _count: TSTARTLIST_HEAT7CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT7AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT7SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT7MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT7MaxAggregateOutputType | null
  }

  type GetTSTARTLIST_HEAT7GroupByPayload<T extends TSTARTLIST_HEAT7GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TSTARTLIST_HEAT7GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TSTARTLIST_HEAT7GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TSTARTLIST_HEAT7GroupByOutputType[P]>
            : GetScalarType<T[P], TSTARTLIST_HEAT7GroupByOutputType[P]>
        }
      >
    >


  export type TSTARTLIST_HEAT7Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_START?: boolean
  }

  export type TSTARTLIST_HEAT7GetPayload<
    S extends boolean | null | undefined | TSTARTLIST_HEAT7Args,
    U = keyof S
      > = S extends true
        ? TSTARTLIST_HEAT7
    : S extends undefined
    ? never
    : S extends TSTARTLIST_HEAT7Args | TSTARTLIST_HEAT7FindManyArgs
    ?'include' extends U
    ? TSTARTLIST_HEAT7 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TSTARTLIST_HEAT7 ? TSTARTLIST_HEAT7[P] : never
  } 
    : TSTARTLIST_HEAT7
  : TSTARTLIST_HEAT7


  type TSTARTLIST_HEAT7CountArgs = Merge<
    Omit<TSTARTLIST_HEAT7FindManyArgs, 'select' | 'include'> & {
      select?: TSTARTLIST_HEAT7CountAggregateInputType | true
    }
  >

  export interface TSTARTLIST_HEAT7Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TSTARTLIST_HEAT7 that matches the filter.
     * @param {TSTARTLIST_HEAT7FindUniqueArgs} args - Arguments to find a TSTARTLIST_HEAT7
     * @example
     * // Get one TSTARTLIST_HEAT7
     * const tSTARTLIST_HEAT7 = await prisma.tSTARTLIST_HEAT7.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TSTARTLIST_HEAT7FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TSTARTLIST_HEAT7FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TSTARTLIST_HEAT7'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT7Client<TSTARTLIST_HEAT7>, Prisma__TSTARTLIST_HEAT7Client<TSTARTLIST_HEAT7GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT7Client<TSTARTLIST_HEAT7 | null >, Prisma__TSTARTLIST_HEAT7Client<TSTARTLIST_HEAT7GetPayload<T> | null >>

    /**
     * Find the first TSTARTLIST_HEAT7 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT7FindFirstArgs} args - Arguments to find a TSTARTLIST_HEAT7
     * @example
     * // Get one TSTARTLIST_HEAT7
     * const tSTARTLIST_HEAT7 = await prisma.tSTARTLIST_HEAT7.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TSTARTLIST_HEAT7FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TSTARTLIST_HEAT7FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TSTARTLIST_HEAT7'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT7Client<TSTARTLIST_HEAT7>, Prisma__TSTARTLIST_HEAT7Client<TSTARTLIST_HEAT7GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT7Client<TSTARTLIST_HEAT7 | null >, Prisma__TSTARTLIST_HEAT7Client<TSTARTLIST_HEAT7GetPayload<T> | null >>

    /**
     * Find zero or more TSTARTLIST_HEAT7s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT7FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TSTARTLIST_HEAT7s
     * const tSTARTLIST_HEAT7s = await prisma.tSTARTLIST_HEAT7.findMany()
     * 
     * // Get first 10 TSTARTLIST_HEAT7s
     * const tSTARTLIST_HEAT7s = await prisma.tSTARTLIST_HEAT7.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tSTARTLIST_HEAT7WithC_LINEOnly = await prisma.tSTARTLIST_HEAT7.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TSTARTLIST_HEAT7FindManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT7FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TSTARTLIST_HEAT7>>, PrismaPromise<Array<TSTARTLIST_HEAT7GetPayload<T>>>>

    /**
     * Create a TSTARTLIST_HEAT7.
     * @param {TSTARTLIST_HEAT7CreateArgs} args - Arguments to create a TSTARTLIST_HEAT7.
     * @example
     * // Create one TSTARTLIST_HEAT7
     * const TSTARTLIST_HEAT7 = await prisma.tSTARTLIST_HEAT7.create({
     *   data: {
     *     // ... data to create a TSTARTLIST_HEAT7
     *   }
     * })
     * 
    **/
    create<T extends TSTARTLIST_HEAT7CreateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT7CreateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT7Client<TSTARTLIST_HEAT7>, Prisma__TSTARTLIST_HEAT7Client<TSTARTLIST_HEAT7GetPayload<T>>>

    /**
     * Delete a TSTARTLIST_HEAT7.
     * @param {TSTARTLIST_HEAT7DeleteArgs} args - Arguments to delete one TSTARTLIST_HEAT7.
     * @example
     * // Delete one TSTARTLIST_HEAT7
     * const TSTARTLIST_HEAT7 = await prisma.tSTARTLIST_HEAT7.delete({
     *   where: {
     *     // ... filter to delete one TSTARTLIST_HEAT7
     *   }
     * })
     * 
    **/
    delete<T extends TSTARTLIST_HEAT7DeleteArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT7DeleteArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT7Client<TSTARTLIST_HEAT7>, Prisma__TSTARTLIST_HEAT7Client<TSTARTLIST_HEAT7GetPayload<T>>>

    /**
     * Update one TSTARTLIST_HEAT7.
     * @param {TSTARTLIST_HEAT7UpdateArgs} args - Arguments to update one TSTARTLIST_HEAT7.
     * @example
     * // Update one TSTARTLIST_HEAT7
     * const tSTARTLIST_HEAT7 = await prisma.tSTARTLIST_HEAT7.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TSTARTLIST_HEAT7UpdateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT7UpdateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT7Client<TSTARTLIST_HEAT7>, Prisma__TSTARTLIST_HEAT7Client<TSTARTLIST_HEAT7GetPayload<T>>>

    /**
     * Delete zero or more TSTARTLIST_HEAT7s.
     * @param {TSTARTLIST_HEAT7DeleteManyArgs} args - Arguments to filter TSTARTLIST_HEAT7s to delete.
     * @example
     * // Delete a few TSTARTLIST_HEAT7s
     * const { count } = await prisma.tSTARTLIST_HEAT7.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TSTARTLIST_HEAT7DeleteManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT7DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TSTARTLIST_HEAT7s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT7UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TSTARTLIST_HEAT7s
     * const tSTARTLIST_HEAT7 = await prisma.tSTARTLIST_HEAT7.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TSTARTLIST_HEAT7UpdateManyArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT7UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TSTARTLIST_HEAT7.
     * @param {TSTARTLIST_HEAT7UpsertArgs} args - Arguments to update or create a TSTARTLIST_HEAT7.
     * @example
     * // Update or create a TSTARTLIST_HEAT7
     * const tSTARTLIST_HEAT7 = await prisma.tSTARTLIST_HEAT7.upsert({
     *   create: {
     *     // ... data to create a TSTARTLIST_HEAT7
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT7 we want to update
     *   }
     * })
    **/
    upsert<T extends TSTARTLIST_HEAT7UpsertArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT7UpsertArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT7Client<TSTARTLIST_HEAT7>, Prisma__TSTARTLIST_HEAT7Client<TSTARTLIST_HEAT7GetPayload<T>>>

    /**
     * Count the number of TSTARTLIST_HEAT7s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT7CountArgs} args - Arguments to filter TSTARTLIST_HEAT7s to count.
     * @example
     * // Count the number of TSTARTLIST_HEAT7s
     * const count = await prisma.tSTARTLIST_HEAT7.count({
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT7s we want to count
     *   }
     * })
    **/
    count<T extends TSTARTLIST_HEAT7CountArgs>(
      args?: Subset<T, TSTARTLIST_HEAT7CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TSTARTLIST_HEAT7CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TSTARTLIST_HEAT7.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT7AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TSTARTLIST_HEAT7AggregateArgs>(args: Subset<T, TSTARTLIST_HEAT7AggregateArgs>): PrismaPromise<GetTSTARTLIST_HEAT7AggregateType<T>>

    /**
     * Group by TSTARTLIST_HEAT7.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT7GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TSTARTLIST_HEAT7GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TSTARTLIST_HEAT7GroupByArgs['orderBy'] }
        : { orderBy?: TSTARTLIST_HEAT7GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TSTARTLIST_HEAT7GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTSTARTLIST_HEAT7GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TSTARTLIST_HEAT7.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TSTARTLIST_HEAT7Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TSTARTLIST_HEAT7 findUnique
   */
  export type TSTARTLIST_HEAT7FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT7
     * 
    **/
    select?: TSTARTLIST_HEAT7Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT7 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT7 to fetch.
     * 
    **/
    where: TSTARTLIST_HEAT7WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT7 findFirst
   */
  export type TSTARTLIST_HEAT7FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT7
     * 
    **/
    select?: TSTARTLIST_HEAT7Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT7 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT7 to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT7WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT7s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT7OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TSTARTLIST_HEAT7s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT7WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT7s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT7s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TSTARTLIST_HEAT7s.
     * 
    **/
    distinct?: Enumerable<TSTARTLIST_HEAT7ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT7 findMany
   */
  export type TSTARTLIST_HEAT7FindManyArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT7
     * 
    **/
    select?: TSTARTLIST_HEAT7Select | null
    /**
     * Filter, which TSTARTLIST_HEAT7s to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT7WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT7s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT7OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TSTARTLIST_HEAT7s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT7WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT7s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT7s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TSTARTLIST_HEAT7ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT7 create
   */
  export type TSTARTLIST_HEAT7CreateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT7
     * 
    **/
    select?: TSTARTLIST_HEAT7Select | null
    /**
     * The data needed to create a TSTARTLIST_HEAT7.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT7CreateInput, TSTARTLIST_HEAT7UncheckedCreateInput>
  }


  /**
   * TSTARTLIST_HEAT7 update
   */
  export type TSTARTLIST_HEAT7UpdateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT7
     * 
    **/
    select?: TSTARTLIST_HEAT7Select | null
    /**
     * The data needed to update a TSTARTLIST_HEAT7.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT7UpdateInput, TSTARTLIST_HEAT7UncheckedUpdateInput>
    /**
     * Choose, which TSTARTLIST_HEAT7 to update.
     * 
    **/
    where: TSTARTLIST_HEAT7WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT7 updateMany
   */
  export type TSTARTLIST_HEAT7UpdateManyArgs = {
    /**
     * The data used to update TSTARTLIST_HEAT7s.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT7UpdateManyMutationInput, TSTARTLIST_HEAT7UncheckedUpdateManyInput>
    /**
     * Filter which TSTARTLIST_HEAT7s to update
     * 
    **/
    where?: TSTARTLIST_HEAT7WhereInput
  }


  /**
   * TSTARTLIST_HEAT7 upsert
   */
  export type TSTARTLIST_HEAT7UpsertArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT7
     * 
    **/
    select?: TSTARTLIST_HEAT7Select | null
    /**
     * The filter to search for the TSTARTLIST_HEAT7 to update in case it exists.
     * 
    **/
    where: TSTARTLIST_HEAT7WhereUniqueInput
    /**
     * In case the TSTARTLIST_HEAT7 found by the `where` argument doesn't exist, create a new TSTARTLIST_HEAT7 with this data.
     * 
    **/
    create: XOR<TSTARTLIST_HEAT7CreateInput, TSTARTLIST_HEAT7UncheckedCreateInput>
    /**
     * In case the TSTARTLIST_HEAT7 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TSTARTLIST_HEAT7UpdateInput, TSTARTLIST_HEAT7UncheckedUpdateInput>
  }


  /**
   * TSTARTLIST_HEAT7 delete
   */
  export type TSTARTLIST_HEAT7DeleteArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT7
     * 
    **/
    select?: TSTARTLIST_HEAT7Select | null
    /**
     * Filter which TSTARTLIST_HEAT7 to delete.
     * 
    **/
    where: TSTARTLIST_HEAT7WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT7 deleteMany
   */
  export type TSTARTLIST_HEAT7DeleteManyArgs = {
    /**
     * Filter which TSTARTLIST_HEAT7s to delete
     * 
    **/
    where?: TSTARTLIST_HEAT7WhereInput
  }


  /**
   * TSTARTLIST_HEAT7 without action
   */
  export type TSTARTLIST_HEAT7Args = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT7
     * 
    **/
    select?: TSTARTLIST_HEAT7Select | null
  }



  /**
   * Model TSTARTLIST_HEAT8
   */


  export type AggregateTSTARTLIST_HEAT8 = {
    _count: TSTARTLIST_HEAT8CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT8AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT8SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT8MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT8MaxAggregateOutputType | null
  }

  export type TSTARTLIST_HEAT8AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT8SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT8MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT8MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT8CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_START: number
    _all: number
  }


  export type TSTARTLIST_HEAT8AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT8SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT8MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT8MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT8CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
    _all?: true
  }

  export type TSTARTLIST_HEAT8AggregateArgs = {
    /**
     * Filter which TSTARTLIST_HEAT8 to aggregate.
     * 
    **/
    where?: TSTARTLIST_HEAT8WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT8s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT8OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TSTARTLIST_HEAT8WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT8s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT8s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TSTARTLIST_HEAT8s
    **/
    _count?: true | TSTARTLIST_HEAT8CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TSTARTLIST_HEAT8AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TSTARTLIST_HEAT8SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TSTARTLIST_HEAT8MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TSTARTLIST_HEAT8MaxAggregateInputType
  }

  export type GetTSTARTLIST_HEAT8AggregateType<T extends TSTARTLIST_HEAT8AggregateArgs> = {
        [P in keyof T & keyof AggregateTSTARTLIST_HEAT8]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTSTARTLIST_HEAT8[P]>
      : GetScalarType<T[P], AggregateTSTARTLIST_HEAT8[P]>
  }




  export type TSTARTLIST_HEAT8GroupByArgs = {
    where?: TSTARTLIST_HEAT8WhereInput
    orderBy?: Enumerable<TSTARTLIST_HEAT8OrderByWithAggregationInput>
    by: Array<TSTARTLIST_HEAT8ScalarFieldEnum>
    having?: TSTARTLIST_HEAT8ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TSTARTLIST_HEAT8CountAggregateInputType | true
    _avg?: TSTARTLIST_HEAT8AvgAggregateInputType
    _sum?: TSTARTLIST_HEAT8SumAggregateInputType
    _min?: TSTARTLIST_HEAT8MinAggregateInputType
    _max?: TSTARTLIST_HEAT8MaxAggregateInputType
  }


  export type TSTARTLIST_HEAT8GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_START: number | null
    _count: TSTARTLIST_HEAT8CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT8AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT8SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT8MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT8MaxAggregateOutputType | null
  }

  type GetTSTARTLIST_HEAT8GroupByPayload<T extends TSTARTLIST_HEAT8GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TSTARTLIST_HEAT8GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TSTARTLIST_HEAT8GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TSTARTLIST_HEAT8GroupByOutputType[P]>
            : GetScalarType<T[P], TSTARTLIST_HEAT8GroupByOutputType[P]>
        }
      >
    >


  export type TSTARTLIST_HEAT8Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_START?: boolean
  }

  export type TSTARTLIST_HEAT8GetPayload<
    S extends boolean | null | undefined | TSTARTLIST_HEAT8Args,
    U = keyof S
      > = S extends true
        ? TSTARTLIST_HEAT8
    : S extends undefined
    ? never
    : S extends TSTARTLIST_HEAT8Args | TSTARTLIST_HEAT8FindManyArgs
    ?'include' extends U
    ? TSTARTLIST_HEAT8 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TSTARTLIST_HEAT8 ? TSTARTLIST_HEAT8[P] : never
  } 
    : TSTARTLIST_HEAT8
  : TSTARTLIST_HEAT8


  type TSTARTLIST_HEAT8CountArgs = Merge<
    Omit<TSTARTLIST_HEAT8FindManyArgs, 'select' | 'include'> & {
      select?: TSTARTLIST_HEAT8CountAggregateInputType | true
    }
  >

  export interface TSTARTLIST_HEAT8Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TSTARTLIST_HEAT8 that matches the filter.
     * @param {TSTARTLIST_HEAT8FindUniqueArgs} args - Arguments to find a TSTARTLIST_HEAT8
     * @example
     * // Get one TSTARTLIST_HEAT8
     * const tSTARTLIST_HEAT8 = await prisma.tSTARTLIST_HEAT8.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TSTARTLIST_HEAT8FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TSTARTLIST_HEAT8FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TSTARTLIST_HEAT8'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT8Client<TSTARTLIST_HEAT8>, Prisma__TSTARTLIST_HEAT8Client<TSTARTLIST_HEAT8GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT8Client<TSTARTLIST_HEAT8 | null >, Prisma__TSTARTLIST_HEAT8Client<TSTARTLIST_HEAT8GetPayload<T> | null >>

    /**
     * Find the first TSTARTLIST_HEAT8 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT8FindFirstArgs} args - Arguments to find a TSTARTLIST_HEAT8
     * @example
     * // Get one TSTARTLIST_HEAT8
     * const tSTARTLIST_HEAT8 = await prisma.tSTARTLIST_HEAT8.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TSTARTLIST_HEAT8FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TSTARTLIST_HEAT8FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TSTARTLIST_HEAT8'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT8Client<TSTARTLIST_HEAT8>, Prisma__TSTARTLIST_HEAT8Client<TSTARTLIST_HEAT8GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT8Client<TSTARTLIST_HEAT8 | null >, Prisma__TSTARTLIST_HEAT8Client<TSTARTLIST_HEAT8GetPayload<T> | null >>

    /**
     * Find zero or more TSTARTLIST_HEAT8s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT8FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TSTARTLIST_HEAT8s
     * const tSTARTLIST_HEAT8s = await prisma.tSTARTLIST_HEAT8.findMany()
     * 
     * // Get first 10 TSTARTLIST_HEAT8s
     * const tSTARTLIST_HEAT8s = await prisma.tSTARTLIST_HEAT8.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tSTARTLIST_HEAT8WithC_LINEOnly = await prisma.tSTARTLIST_HEAT8.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TSTARTLIST_HEAT8FindManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT8FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TSTARTLIST_HEAT8>>, PrismaPromise<Array<TSTARTLIST_HEAT8GetPayload<T>>>>

    /**
     * Create a TSTARTLIST_HEAT8.
     * @param {TSTARTLIST_HEAT8CreateArgs} args - Arguments to create a TSTARTLIST_HEAT8.
     * @example
     * // Create one TSTARTLIST_HEAT8
     * const TSTARTLIST_HEAT8 = await prisma.tSTARTLIST_HEAT8.create({
     *   data: {
     *     // ... data to create a TSTARTLIST_HEAT8
     *   }
     * })
     * 
    **/
    create<T extends TSTARTLIST_HEAT8CreateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT8CreateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT8Client<TSTARTLIST_HEAT8>, Prisma__TSTARTLIST_HEAT8Client<TSTARTLIST_HEAT8GetPayload<T>>>

    /**
     * Delete a TSTARTLIST_HEAT8.
     * @param {TSTARTLIST_HEAT8DeleteArgs} args - Arguments to delete one TSTARTLIST_HEAT8.
     * @example
     * // Delete one TSTARTLIST_HEAT8
     * const TSTARTLIST_HEAT8 = await prisma.tSTARTLIST_HEAT8.delete({
     *   where: {
     *     // ... filter to delete one TSTARTLIST_HEAT8
     *   }
     * })
     * 
    **/
    delete<T extends TSTARTLIST_HEAT8DeleteArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT8DeleteArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT8Client<TSTARTLIST_HEAT8>, Prisma__TSTARTLIST_HEAT8Client<TSTARTLIST_HEAT8GetPayload<T>>>

    /**
     * Update one TSTARTLIST_HEAT8.
     * @param {TSTARTLIST_HEAT8UpdateArgs} args - Arguments to update one TSTARTLIST_HEAT8.
     * @example
     * // Update one TSTARTLIST_HEAT8
     * const tSTARTLIST_HEAT8 = await prisma.tSTARTLIST_HEAT8.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TSTARTLIST_HEAT8UpdateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT8UpdateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT8Client<TSTARTLIST_HEAT8>, Prisma__TSTARTLIST_HEAT8Client<TSTARTLIST_HEAT8GetPayload<T>>>

    /**
     * Delete zero or more TSTARTLIST_HEAT8s.
     * @param {TSTARTLIST_HEAT8DeleteManyArgs} args - Arguments to filter TSTARTLIST_HEAT8s to delete.
     * @example
     * // Delete a few TSTARTLIST_HEAT8s
     * const { count } = await prisma.tSTARTLIST_HEAT8.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TSTARTLIST_HEAT8DeleteManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT8DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TSTARTLIST_HEAT8s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT8UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TSTARTLIST_HEAT8s
     * const tSTARTLIST_HEAT8 = await prisma.tSTARTLIST_HEAT8.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TSTARTLIST_HEAT8UpdateManyArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT8UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TSTARTLIST_HEAT8.
     * @param {TSTARTLIST_HEAT8UpsertArgs} args - Arguments to update or create a TSTARTLIST_HEAT8.
     * @example
     * // Update or create a TSTARTLIST_HEAT8
     * const tSTARTLIST_HEAT8 = await prisma.tSTARTLIST_HEAT8.upsert({
     *   create: {
     *     // ... data to create a TSTARTLIST_HEAT8
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT8 we want to update
     *   }
     * })
    **/
    upsert<T extends TSTARTLIST_HEAT8UpsertArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT8UpsertArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT8Client<TSTARTLIST_HEAT8>, Prisma__TSTARTLIST_HEAT8Client<TSTARTLIST_HEAT8GetPayload<T>>>

    /**
     * Count the number of TSTARTLIST_HEAT8s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT8CountArgs} args - Arguments to filter TSTARTLIST_HEAT8s to count.
     * @example
     * // Count the number of TSTARTLIST_HEAT8s
     * const count = await prisma.tSTARTLIST_HEAT8.count({
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT8s we want to count
     *   }
     * })
    **/
    count<T extends TSTARTLIST_HEAT8CountArgs>(
      args?: Subset<T, TSTARTLIST_HEAT8CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TSTARTLIST_HEAT8CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TSTARTLIST_HEAT8.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT8AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TSTARTLIST_HEAT8AggregateArgs>(args: Subset<T, TSTARTLIST_HEAT8AggregateArgs>): PrismaPromise<GetTSTARTLIST_HEAT8AggregateType<T>>

    /**
     * Group by TSTARTLIST_HEAT8.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT8GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TSTARTLIST_HEAT8GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TSTARTLIST_HEAT8GroupByArgs['orderBy'] }
        : { orderBy?: TSTARTLIST_HEAT8GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TSTARTLIST_HEAT8GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTSTARTLIST_HEAT8GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TSTARTLIST_HEAT8.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TSTARTLIST_HEAT8Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TSTARTLIST_HEAT8 findUnique
   */
  export type TSTARTLIST_HEAT8FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT8
     * 
    **/
    select?: TSTARTLIST_HEAT8Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT8 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT8 to fetch.
     * 
    **/
    where: TSTARTLIST_HEAT8WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT8 findFirst
   */
  export type TSTARTLIST_HEAT8FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT8
     * 
    **/
    select?: TSTARTLIST_HEAT8Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT8 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT8 to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT8WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT8s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT8OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TSTARTLIST_HEAT8s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT8WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT8s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT8s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TSTARTLIST_HEAT8s.
     * 
    **/
    distinct?: Enumerable<TSTARTLIST_HEAT8ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT8 findMany
   */
  export type TSTARTLIST_HEAT8FindManyArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT8
     * 
    **/
    select?: TSTARTLIST_HEAT8Select | null
    /**
     * Filter, which TSTARTLIST_HEAT8s to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT8WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT8s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT8OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TSTARTLIST_HEAT8s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT8WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT8s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT8s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TSTARTLIST_HEAT8ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT8 create
   */
  export type TSTARTLIST_HEAT8CreateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT8
     * 
    **/
    select?: TSTARTLIST_HEAT8Select | null
    /**
     * The data needed to create a TSTARTLIST_HEAT8.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT8CreateInput, TSTARTLIST_HEAT8UncheckedCreateInput>
  }


  /**
   * TSTARTLIST_HEAT8 update
   */
  export type TSTARTLIST_HEAT8UpdateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT8
     * 
    **/
    select?: TSTARTLIST_HEAT8Select | null
    /**
     * The data needed to update a TSTARTLIST_HEAT8.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT8UpdateInput, TSTARTLIST_HEAT8UncheckedUpdateInput>
    /**
     * Choose, which TSTARTLIST_HEAT8 to update.
     * 
    **/
    where: TSTARTLIST_HEAT8WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT8 updateMany
   */
  export type TSTARTLIST_HEAT8UpdateManyArgs = {
    /**
     * The data used to update TSTARTLIST_HEAT8s.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT8UpdateManyMutationInput, TSTARTLIST_HEAT8UncheckedUpdateManyInput>
    /**
     * Filter which TSTARTLIST_HEAT8s to update
     * 
    **/
    where?: TSTARTLIST_HEAT8WhereInput
  }


  /**
   * TSTARTLIST_HEAT8 upsert
   */
  export type TSTARTLIST_HEAT8UpsertArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT8
     * 
    **/
    select?: TSTARTLIST_HEAT8Select | null
    /**
     * The filter to search for the TSTARTLIST_HEAT8 to update in case it exists.
     * 
    **/
    where: TSTARTLIST_HEAT8WhereUniqueInput
    /**
     * In case the TSTARTLIST_HEAT8 found by the `where` argument doesn't exist, create a new TSTARTLIST_HEAT8 with this data.
     * 
    **/
    create: XOR<TSTARTLIST_HEAT8CreateInput, TSTARTLIST_HEAT8UncheckedCreateInput>
    /**
     * In case the TSTARTLIST_HEAT8 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TSTARTLIST_HEAT8UpdateInput, TSTARTLIST_HEAT8UncheckedUpdateInput>
  }


  /**
   * TSTARTLIST_HEAT8 delete
   */
  export type TSTARTLIST_HEAT8DeleteArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT8
     * 
    **/
    select?: TSTARTLIST_HEAT8Select | null
    /**
     * Filter which TSTARTLIST_HEAT8 to delete.
     * 
    **/
    where: TSTARTLIST_HEAT8WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT8 deleteMany
   */
  export type TSTARTLIST_HEAT8DeleteManyArgs = {
    /**
     * Filter which TSTARTLIST_HEAT8s to delete
     * 
    **/
    where?: TSTARTLIST_HEAT8WhereInput
  }


  /**
   * TSTARTLIST_HEAT8 without action
   */
  export type TSTARTLIST_HEAT8Args = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT8
     * 
    **/
    select?: TSTARTLIST_HEAT8Select | null
  }



  /**
   * Model TSTARTLIST_HEAT9
   */


  export type AggregateTSTARTLIST_HEAT9 = {
    _count: TSTARTLIST_HEAT9CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT9AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT9SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT9MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT9MaxAggregateOutputType | null
  }

  export type TSTARTLIST_HEAT9AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT9SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT9MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT9MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_START: number | null
  }

  export type TSTARTLIST_HEAT9CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_START: number
    _all: number
  }


  export type TSTARTLIST_HEAT9AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT9SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT9MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT9MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
  }

  export type TSTARTLIST_HEAT9CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_START?: true
    _all?: true
  }

  export type TSTARTLIST_HEAT9AggregateArgs = {
    /**
     * Filter which TSTARTLIST_HEAT9 to aggregate.
     * 
    **/
    where?: TSTARTLIST_HEAT9WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT9s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT9OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TSTARTLIST_HEAT9WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT9s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT9s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TSTARTLIST_HEAT9s
    **/
    _count?: true | TSTARTLIST_HEAT9CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TSTARTLIST_HEAT9AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TSTARTLIST_HEAT9SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TSTARTLIST_HEAT9MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TSTARTLIST_HEAT9MaxAggregateInputType
  }

  export type GetTSTARTLIST_HEAT9AggregateType<T extends TSTARTLIST_HEAT9AggregateArgs> = {
        [P in keyof T & keyof AggregateTSTARTLIST_HEAT9]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTSTARTLIST_HEAT9[P]>
      : GetScalarType<T[P], AggregateTSTARTLIST_HEAT9[P]>
  }




  export type TSTARTLIST_HEAT9GroupByArgs = {
    where?: TSTARTLIST_HEAT9WhereInput
    orderBy?: Enumerable<TSTARTLIST_HEAT9OrderByWithAggregationInput>
    by: Array<TSTARTLIST_HEAT9ScalarFieldEnum>
    having?: TSTARTLIST_HEAT9ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TSTARTLIST_HEAT9CountAggregateInputType | true
    _avg?: TSTARTLIST_HEAT9AvgAggregateInputType
    _sum?: TSTARTLIST_HEAT9SumAggregateInputType
    _min?: TSTARTLIST_HEAT9MinAggregateInputType
    _max?: TSTARTLIST_HEAT9MaxAggregateInputType
  }


  export type TSTARTLIST_HEAT9GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_START: number | null
    _count: TSTARTLIST_HEAT9CountAggregateOutputType | null
    _avg: TSTARTLIST_HEAT9AvgAggregateOutputType | null
    _sum: TSTARTLIST_HEAT9SumAggregateOutputType | null
    _min: TSTARTLIST_HEAT9MinAggregateOutputType | null
    _max: TSTARTLIST_HEAT9MaxAggregateOutputType | null
  }

  type GetTSTARTLIST_HEAT9GroupByPayload<T extends TSTARTLIST_HEAT9GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TSTARTLIST_HEAT9GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TSTARTLIST_HEAT9GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TSTARTLIST_HEAT9GroupByOutputType[P]>
            : GetScalarType<T[P], TSTARTLIST_HEAT9GroupByOutputType[P]>
        }
      >
    >


  export type TSTARTLIST_HEAT9Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_START?: boolean
  }

  export type TSTARTLIST_HEAT9GetPayload<
    S extends boolean | null | undefined | TSTARTLIST_HEAT9Args,
    U = keyof S
      > = S extends true
        ? TSTARTLIST_HEAT9
    : S extends undefined
    ? never
    : S extends TSTARTLIST_HEAT9Args | TSTARTLIST_HEAT9FindManyArgs
    ?'include' extends U
    ? TSTARTLIST_HEAT9 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TSTARTLIST_HEAT9 ? TSTARTLIST_HEAT9[P] : never
  } 
    : TSTARTLIST_HEAT9
  : TSTARTLIST_HEAT9


  type TSTARTLIST_HEAT9CountArgs = Merge<
    Omit<TSTARTLIST_HEAT9FindManyArgs, 'select' | 'include'> & {
      select?: TSTARTLIST_HEAT9CountAggregateInputType | true
    }
  >

  export interface TSTARTLIST_HEAT9Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TSTARTLIST_HEAT9 that matches the filter.
     * @param {TSTARTLIST_HEAT9FindUniqueArgs} args - Arguments to find a TSTARTLIST_HEAT9
     * @example
     * // Get one TSTARTLIST_HEAT9
     * const tSTARTLIST_HEAT9 = await prisma.tSTARTLIST_HEAT9.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TSTARTLIST_HEAT9FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TSTARTLIST_HEAT9FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TSTARTLIST_HEAT9'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT9Client<TSTARTLIST_HEAT9>, Prisma__TSTARTLIST_HEAT9Client<TSTARTLIST_HEAT9GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT9Client<TSTARTLIST_HEAT9 | null >, Prisma__TSTARTLIST_HEAT9Client<TSTARTLIST_HEAT9GetPayload<T> | null >>

    /**
     * Find the first TSTARTLIST_HEAT9 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT9FindFirstArgs} args - Arguments to find a TSTARTLIST_HEAT9
     * @example
     * // Get one TSTARTLIST_HEAT9
     * const tSTARTLIST_HEAT9 = await prisma.tSTARTLIST_HEAT9.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TSTARTLIST_HEAT9FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TSTARTLIST_HEAT9FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TSTARTLIST_HEAT9'> extends True ? CheckSelect<T, Prisma__TSTARTLIST_HEAT9Client<TSTARTLIST_HEAT9>, Prisma__TSTARTLIST_HEAT9Client<TSTARTLIST_HEAT9GetPayload<T>>> : CheckSelect<T, Prisma__TSTARTLIST_HEAT9Client<TSTARTLIST_HEAT9 | null >, Prisma__TSTARTLIST_HEAT9Client<TSTARTLIST_HEAT9GetPayload<T> | null >>

    /**
     * Find zero or more TSTARTLIST_HEAT9s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT9FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TSTARTLIST_HEAT9s
     * const tSTARTLIST_HEAT9s = await prisma.tSTARTLIST_HEAT9.findMany()
     * 
     * // Get first 10 TSTARTLIST_HEAT9s
     * const tSTARTLIST_HEAT9s = await prisma.tSTARTLIST_HEAT9.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tSTARTLIST_HEAT9WithC_LINEOnly = await prisma.tSTARTLIST_HEAT9.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TSTARTLIST_HEAT9FindManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT9FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TSTARTLIST_HEAT9>>, PrismaPromise<Array<TSTARTLIST_HEAT9GetPayload<T>>>>

    /**
     * Create a TSTARTLIST_HEAT9.
     * @param {TSTARTLIST_HEAT9CreateArgs} args - Arguments to create a TSTARTLIST_HEAT9.
     * @example
     * // Create one TSTARTLIST_HEAT9
     * const TSTARTLIST_HEAT9 = await prisma.tSTARTLIST_HEAT9.create({
     *   data: {
     *     // ... data to create a TSTARTLIST_HEAT9
     *   }
     * })
     * 
    **/
    create<T extends TSTARTLIST_HEAT9CreateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT9CreateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT9Client<TSTARTLIST_HEAT9>, Prisma__TSTARTLIST_HEAT9Client<TSTARTLIST_HEAT9GetPayload<T>>>

    /**
     * Delete a TSTARTLIST_HEAT9.
     * @param {TSTARTLIST_HEAT9DeleteArgs} args - Arguments to delete one TSTARTLIST_HEAT9.
     * @example
     * // Delete one TSTARTLIST_HEAT9
     * const TSTARTLIST_HEAT9 = await prisma.tSTARTLIST_HEAT9.delete({
     *   where: {
     *     // ... filter to delete one TSTARTLIST_HEAT9
     *   }
     * })
     * 
    **/
    delete<T extends TSTARTLIST_HEAT9DeleteArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT9DeleteArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT9Client<TSTARTLIST_HEAT9>, Prisma__TSTARTLIST_HEAT9Client<TSTARTLIST_HEAT9GetPayload<T>>>

    /**
     * Update one TSTARTLIST_HEAT9.
     * @param {TSTARTLIST_HEAT9UpdateArgs} args - Arguments to update one TSTARTLIST_HEAT9.
     * @example
     * // Update one TSTARTLIST_HEAT9
     * const tSTARTLIST_HEAT9 = await prisma.tSTARTLIST_HEAT9.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TSTARTLIST_HEAT9UpdateArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT9UpdateArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT9Client<TSTARTLIST_HEAT9>, Prisma__TSTARTLIST_HEAT9Client<TSTARTLIST_HEAT9GetPayload<T>>>

    /**
     * Delete zero or more TSTARTLIST_HEAT9s.
     * @param {TSTARTLIST_HEAT9DeleteManyArgs} args - Arguments to filter TSTARTLIST_HEAT9s to delete.
     * @example
     * // Delete a few TSTARTLIST_HEAT9s
     * const { count } = await prisma.tSTARTLIST_HEAT9.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TSTARTLIST_HEAT9DeleteManyArgs>(
      args?: SelectSubset<T, TSTARTLIST_HEAT9DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TSTARTLIST_HEAT9s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT9UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TSTARTLIST_HEAT9s
     * const tSTARTLIST_HEAT9 = await prisma.tSTARTLIST_HEAT9.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TSTARTLIST_HEAT9UpdateManyArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT9UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TSTARTLIST_HEAT9.
     * @param {TSTARTLIST_HEAT9UpsertArgs} args - Arguments to update or create a TSTARTLIST_HEAT9.
     * @example
     * // Update or create a TSTARTLIST_HEAT9
     * const tSTARTLIST_HEAT9 = await prisma.tSTARTLIST_HEAT9.upsert({
     *   create: {
     *     // ... data to create a TSTARTLIST_HEAT9
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT9 we want to update
     *   }
     * })
    **/
    upsert<T extends TSTARTLIST_HEAT9UpsertArgs>(
      args: SelectSubset<T, TSTARTLIST_HEAT9UpsertArgs>
    ): CheckSelect<T, Prisma__TSTARTLIST_HEAT9Client<TSTARTLIST_HEAT9>, Prisma__TSTARTLIST_HEAT9Client<TSTARTLIST_HEAT9GetPayload<T>>>

    /**
     * Count the number of TSTARTLIST_HEAT9s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT9CountArgs} args - Arguments to filter TSTARTLIST_HEAT9s to count.
     * @example
     * // Count the number of TSTARTLIST_HEAT9s
     * const count = await prisma.tSTARTLIST_HEAT9.count({
     *   where: {
     *     // ... the filter for the TSTARTLIST_HEAT9s we want to count
     *   }
     * })
    **/
    count<T extends TSTARTLIST_HEAT9CountArgs>(
      args?: Subset<T, TSTARTLIST_HEAT9CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TSTARTLIST_HEAT9CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TSTARTLIST_HEAT9.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT9AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TSTARTLIST_HEAT9AggregateArgs>(args: Subset<T, TSTARTLIST_HEAT9AggregateArgs>): PrismaPromise<GetTSTARTLIST_HEAT9AggregateType<T>>

    /**
     * Group by TSTARTLIST_HEAT9.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TSTARTLIST_HEAT9GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TSTARTLIST_HEAT9GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TSTARTLIST_HEAT9GroupByArgs['orderBy'] }
        : { orderBy?: TSTARTLIST_HEAT9GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TSTARTLIST_HEAT9GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTSTARTLIST_HEAT9GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TSTARTLIST_HEAT9.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TSTARTLIST_HEAT9Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TSTARTLIST_HEAT9 findUnique
   */
  export type TSTARTLIST_HEAT9FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT9
     * 
    **/
    select?: TSTARTLIST_HEAT9Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT9 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT9 to fetch.
     * 
    **/
    where: TSTARTLIST_HEAT9WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT9 findFirst
   */
  export type TSTARTLIST_HEAT9FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT9
     * 
    **/
    select?: TSTARTLIST_HEAT9Select | null
    /**
     * Throw an Error if a TSTARTLIST_HEAT9 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TSTARTLIST_HEAT9 to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT9WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT9s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT9OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TSTARTLIST_HEAT9s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT9WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT9s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT9s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TSTARTLIST_HEAT9s.
     * 
    **/
    distinct?: Enumerable<TSTARTLIST_HEAT9ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT9 findMany
   */
  export type TSTARTLIST_HEAT9FindManyArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT9
     * 
    **/
    select?: TSTARTLIST_HEAT9Select | null
    /**
     * Filter, which TSTARTLIST_HEAT9s to fetch.
     * 
    **/
    where?: TSTARTLIST_HEAT9WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TSTARTLIST_HEAT9s to fetch.
     * 
    **/
    orderBy?: Enumerable<TSTARTLIST_HEAT9OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TSTARTLIST_HEAT9s.
     * 
    **/
    cursor?: TSTARTLIST_HEAT9WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TSTARTLIST_HEAT9s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TSTARTLIST_HEAT9s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TSTARTLIST_HEAT9ScalarFieldEnum>
  }


  /**
   * TSTARTLIST_HEAT9 create
   */
  export type TSTARTLIST_HEAT9CreateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT9
     * 
    **/
    select?: TSTARTLIST_HEAT9Select | null
    /**
     * The data needed to create a TSTARTLIST_HEAT9.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT9CreateInput, TSTARTLIST_HEAT9UncheckedCreateInput>
  }


  /**
   * TSTARTLIST_HEAT9 update
   */
  export type TSTARTLIST_HEAT9UpdateArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT9
     * 
    **/
    select?: TSTARTLIST_HEAT9Select | null
    /**
     * The data needed to update a TSTARTLIST_HEAT9.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT9UpdateInput, TSTARTLIST_HEAT9UncheckedUpdateInput>
    /**
     * Choose, which TSTARTLIST_HEAT9 to update.
     * 
    **/
    where: TSTARTLIST_HEAT9WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT9 updateMany
   */
  export type TSTARTLIST_HEAT9UpdateManyArgs = {
    /**
     * The data used to update TSTARTLIST_HEAT9s.
     * 
    **/
    data: XOR<TSTARTLIST_HEAT9UpdateManyMutationInput, TSTARTLIST_HEAT9UncheckedUpdateManyInput>
    /**
     * Filter which TSTARTLIST_HEAT9s to update
     * 
    **/
    where?: TSTARTLIST_HEAT9WhereInput
  }


  /**
   * TSTARTLIST_HEAT9 upsert
   */
  export type TSTARTLIST_HEAT9UpsertArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT9
     * 
    **/
    select?: TSTARTLIST_HEAT9Select | null
    /**
     * The filter to search for the TSTARTLIST_HEAT9 to update in case it exists.
     * 
    **/
    where: TSTARTLIST_HEAT9WhereUniqueInput
    /**
     * In case the TSTARTLIST_HEAT9 found by the `where` argument doesn't exist, create a new TSTARTLIST_HEAT9 with this data.
     * 
    **/
    create: XOR<TSTARTLIST_HEAT9CreateInput, TSTARTLIST_HEAT9UncheckedCreateInput>
    /**
     * In case the TSTARTLIST_HEAT9 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TSTARTLIST_HEAT9UpdateInput, TSTARTLIST_HEAT9UncheckedUpdateInput>
  }


  /**
   * TSTARTLIST_HEAT9 delete
   */
  export type TSTARTLIST_HEAT9DeleteArgs = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT9
     * 
    **/
    select?: TSTARTLIST_HEAT9Select | null
    /**
     * Filter which TSTARTLIST_HEAT9 to delete.
     * 
    **/
    where: TSTARTLIST_HEAT9WhereUniqueInput
  }


  /**
   * TSTARTLIST_HEAT9 deleteMany
   */
  export type TSTARTLIST_HEAT9DeleteManyArgs = {
    /**
     * Filter which TSTARTLIST_HEAT9s to delete
     * 
    **/
    where?: TSTARTLIST_HEAT9WhereInput
  }


  /**
   * TSTARTLIST_HEAT9 without action
   */
  export type TSTARTLIST_HEAT9Args = {
    /**
     * Select specific fields to fetch from the TSTARTLIST_HEAT9
     * 
    **/
    select?: TSTARTLIST_HEAT9Select | null
  }



  /**
   * Model TTIMEINFOS_HEAT1
   */


  export type AggregateTTIMEINFOS_HEAT1 = {
    _count: TTIMEINFOS_HEAT1CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT1AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT1SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT1MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT1MaxAggregateOutputType | null
  }

  export type TTIMEINFOS_HEAT1AvgAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT1SumAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT1MinAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT1MaxAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT1CountAggregateOutputType = {
    C_NUM: number
    C_STATUS: number
    C_TIME: number
    C_PENALTY: number
    C_INTER1: number
    C_INTER2: number
    C_INTER3: number
    C_INTER4: number
    C_INTER5: number
    C_INTER6: number
    C_INTER7: number
    C_INTER8: number
    C_INTER9: number
    C_SPEED1: number
    C_SPEED2: number
    C_SPEED3: number
    C_SPEED4: number
    C_SPEED5: number
    C_SPEED6: number
    C_SPEED7: number
    C_SPEED8: number
    C_SPEED9: number
    C_DATA1: number
    C_DATA2: number
    C_DATA3: number
    C_DATA4: number
    C_DATA5: number
    C_DATA6: number
    C_DATA7: number
    C_DATA8: number
    C_REASON: number
    _all: number
  }


  export type TTIMEINFOS_HEAT1AvgAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT1SumAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT1MinAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT1MaxAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT1CountAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
    _all?: true
  }

  export type TTIMEINFOS_HEAT1AggregateArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT1 to aggregate.
     * 
    **/
    where?: TTIMEINFOS_HEAT1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMEINFOS_HEAT1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMEINFOS_HEAT1s
    **/
    _count?: true | TTIMEINFOS_HEAT1CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMEINFOS_HEAT1AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMEINFOS_HEAT1SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMEINFOS_HEAT1MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMEINFOS_HEAT1MaxAggregateInputType
  }

  export type GetTTIMEINFOS_HEAT1AggregateType<T extends TTIMEINFOS_HEAT1AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMEINFOS_HEAT1]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT1[P]>
      : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT1[P]>
  }




  export type TTIMEINFOS_HEAT1GroupByArgs = {
    where?: TTIMEINFOS_HEAT1WhereInput
    orderBy?: Enumerable<TTIMEINFOS_HEAT1OrderByWithAggregationInput>
    by: Array<TTIMEINFOS_HEAT1ScalarFieldEnum>
    having?: TTIMEINFOS_HEAT1ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMEINFOS_HEAT1CountAggregateInputType | true
    _avg?: TTIMEINFOS_HEAT1AvgAggregateInputType
    _sum?: TTIMEINFOS_HEAT1SumAggregateInputType
    _min?: TTIMEINFOS_HEAT1MinAggregateInputType
    _max?: TTIMEINFOS_HEAT1MaxAggregateInputType
  }


  export type TTIMEINFOS_HEAT1GroupByOutputType = {
    C_NUM: number
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
    _count: TTIMEINFOS_HEAT1CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT1AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT1SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT1MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT1MaxAggregateOutputType | null
  }

  type GetTTIMEINFOS_HEAT1GroupByPayload<T extends TTIMEINFOS_HEAT1GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMEINFOS_HEAT1GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMEINFOS_HEAT1GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMEINFOS_HEAT1GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMEINFOS_HEAT1GroupByOutputType[P]>
        }
      >
    >


  export type TTIMEINFOS_HEAT1Select = {
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TIME?: boolean
    C_PENALTY?: boolean
    C_INTER1?: boolean
    C_INTER2?: boolean
    C_INTER3?: boolean
    C_INTER4?: boolean
    C_INTER5?: boolean
    C_INTER6?: boolean
    C_INTER7?: boolean
    C_INTER8?: boolean
    C_INTER9?: boolean
    C_SPEED1?: boolean
    C_SPEED2?: boolean
    C_SPEED3?: boolean
    C_SPEED4?: boolean
    C_SPEED5?: boolean
    C_SPEED6?: boolean
    C_SPEED7?: boolean
    C_SPEED8?: boolean
    C_SPEED9?: boolean
    C_DATA1?: boolean
    C_DATA2?: boolean
    C_DATA3?: boolean
    C_DATA4?: boolean
    C_DATA5?: boolean
    C_DATA6?: boolean
    C_DATA7?: boolean
    C_DATA8?: boolean
    C_REASON?: boolean
  }

  export type TTIMEINFOS_HEAT1GetPayload<
    S extends boolean | null | undefined | TTIMEINFOS_HEAT1Args,
    U = keyof S
      > = S extends true
        ? TTIMEINFOS_HEAT1
    : S extends undefined
    ? never
    : S extends TTIMEINFOS_HEAT1Args | TTIMEINFOS_HEAT1FindManyArgs
    ?'include' extends U
    ? TTIMEINFOS_HEAT1 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMEINFOS_HEAT1 ? TTIMEINFOS_HEAT1[P] : never
  } 
    : TTIMEINFOS_HEAT1
  : TTIMEINFOS_HEAT1


  type TTIMEINFOS_HEAT1CountArgs = Merge<
    Omit<TTIMEINFOS_HEAT1FindManyArgs, 'select' | 'include'> & {
      select?: TTIMEINFOS_HEAT1CountAggregateInputType | true
    }
  >

  export interface TTIMEINFOS_HEAT1Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMEINFOS_HEAT1 that matches the filter.
     * @param {TTIMEINFOS_HEAT1FindUniqueArgs} args - Arguments to find a TTIMEINFOS_HEAT1
     * @example
     * // Get one TTIMEINFOS_HEAT1
     * const tTIMEINFOS_HEAT1 = await prisma.tTIMEINFOS_HEAT1.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMEINFOS_HEAT1FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMEINFOS_HEAT1FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMEINFOS_HEAT1'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT1Client<TTIMEINFOS_HEAT1>, Prisma__TTIMEINFOS_HEAT1Client<TTIMEINFOS_HEAT1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT1Client<TTIMEINFOS_HEAT1 | null >, Prisma__TTIMEINFOS_HEAT1Client<TTIMEINFOS_HEAT1GetPayload<T> | null >>

    /**
     * Find the first TTIMEINFOS_HEAT1 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT1FindFirstArgs} args - Arguments to find a TTIMEINFOS_HEAT1
     * @example
     * // Get one TTIMEINFOS_HEAT1
     * const tTIMEINFOS_HEAT1 = await prisma.tTIMEINFOS_HEAT1.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMEINFOS_HEAT1FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT1FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMEINFOS_HEAT1'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT1Client<TTIMEINFOS_HEAT1>, Prisma__TTIMEINFOS_HEAT1Client<TTIMEINFOS_HEAT1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT1Client<TTIMEINFOS_HEAT1 | null >, Prisma__TTIMEINFOS_HEAT1Client<TTIMEINFOS_HEAT1GetPayload<T> | null >>

    /**
     * Find zero or more TTIMEINFOS_HEAT1s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT1FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMEINFOS_HEAT1s
     * const tTIMEINFOS_HEAT1s = await prisma.tTIMEINFOS_HEAT1.findMany()
     * 
     * // Get first 10 TTIMEINFOS_HEAT1s
     * const tTIMEINFOS_HEAT1s = await prisma.tTIMEINFOS_HEAT1.findMany({ take: 10 })
     * 
     * // Only select the `C_NUM`
     * const tTIMEINFOS_HEAT1WithC_NUMOnly = await prisma.tTIMEINFOS_HEAT1.findMany({ select: { C_NUM: true } })
     * 
    **/
    findMany<T extends TTIMEINFOS_HEAT1FindManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT1FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMEINFOS_HEAT1>>, PrismaPromise<Array<TTIMEINFOS_HEAT1GetPayload<T>>>>

    /**
     * Create a TTIMEINFOS_HEAT1.
     * @param {TTIMEINFOS_HEAT1CreateArgs} args - Arguments to create a TTIMEINFOS_HEAT1.
     * @example
     * // Create one TTIMEINFOS_HEAT1
     * const TTIMEINFOS_HEAT1 = await prisma.tTIMEINFOS_HEAT1.create({
     *   data: {
     *     // ... data to create a TTIMEINFOS_HEAT1
     *   }
     * })
     * 
    **/
    create<T extends TTIMEINFOS_HEAT1CreateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT1CreateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT1Client<TTIMEINFOS_HEAT1>, Prisma__TTIMEINFOS_HEAT1Client<TTIMEINFOS_HEAT1GetPayload<T>>>

    /**
     * Delete a TTIMEINFOS_HEAT1.
     * @param {TTIMEINFOS_HEAT1DeleteArgs} args - Arguments to delete one TTIMEINFOS_HEAT1.
     * @example
     * // Delete one TTIMEINFOS_HEAT1
     * const TTIMEINFOS_HEAT1 = await prisma.tTIMEINFOS_HEAT1.delete({
     *   where: {
     *     // ... filter to delete one TTIMEINFOS_HEAT1
     *   }
     * })
     * 
    **/
    delete<T extends TTIMEINFOS_HEAT1DeleteArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT1DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT1Client<TTIMEINFOS_HEAT1>, Prisma__TTIMEINFOS_HEAT1Client<TTIMEINFOS_HEAT1GetPayload<T>>>

    /**
     * Update one TTIMEINFOS_HEAT1.
     * @param {TTIMEINFOS_HEAT1UpdateArgs} args - Arguments to update one TTIMEINFOS_HEAT1.
     * @example
     * // Update one TTIMEINFOS_HEAT1
     * const tTIMEINFOS_HEAT1 = await prisma.tTIMEINFOS_HEAT1.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMEINFOS_HEAT1UpdateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT1UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT1Client<TTIMEINFOS_HEAT1>, Prisma__TTIMEINFOS_HEAT1Client<TTIMEINFOS_HEAT1GetPayload<T>>>

    /**
     * Delete zero or more TTIMEINFOS_HEAT1s.
     * @param {TTIMEINFOS_HEAT1DeleteManyArgs} args - Arguments to filter TTIMEINFOS_HEAT1s to delete.
     * @example
     * // Delete a few TTIMEINFOS_HEAT1s
     * const { count } = await prisma.tTIMEINFOS_HEAT1.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMEINFOS_HEAT1DeleteManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT1DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMEINFOS_HEAT1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT1UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMEINFOS_HEAT1s
     * const tTIMEINFOS_HEAT1 = await prisma.tTIMEINFOS_HEAT1.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMEINFOS_HEAT1UpdateManyArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT1UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMEINFOS_HEAT1.
     * @param {TTIMEINFOS_HEAT1UpsertArgs} args - Arguments to update or create a TTIMEINFOS_HEAT1.
     * @example
     * // Update or create a TTIMEINFOS_HEAT1
     * const tTIMEINFOS_HEAT1 = await prisma.tTIMEINFOS_HEAT1.upsert({
     *   create: {
     *     // ... data to create a TTIMEINFOS_HEAT1
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT1 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMEINFOS_HEAT1UpsertArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT1UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT1Client<TTIMEINFOS_HEAT1>, Prisma__TTIMEINFOS_HEAT1Client<TTIMEINFOS_HEAT1GetPayload<T>>>

    /**
     * Count the number of TTIMEINFOS_HEAT1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT1CountArgs} args - Arguments to filter TTIMEINFOS_HEAT1s to count.
     * @example
     * // Count the number of TTIMEINFOS_HEAT1s
     * const count = await prisma.tTIMEINFOS_HEAT1.count({
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT1s we want to count
     *   }
     * })
    **/
    count<T extends TTIMEINFOS_HEAT1CountArgs>(
      args?: Subset<T, TTIMEINFOS_HEAT1CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMEINFOS_HEAT1CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMEINFOS_HEAT1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT1AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMEINFOS_HEAT1AggregateArgs>(args: Subset<T, TTIMEINFOS_HEAT1AggregateArgs>): PrismaPromise<GetTTIMEINFOS_HEAT1AggregateType<T>>

    /**
     * Group by TTIMEINFOS_HEAT1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT1GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMEINFOS_HEAT1GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMEINFOS_HEAT1GroupByArgs['orderBy'] }
        : { orderBy?: TTIMEINFOS_HEAT1GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMEINFOS_HEAT1GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMEINFOS_HEAT1GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMEINFOS_HEAT1.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMEINFOS_HEAT1Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMEINFOS_HEAT1 findUnique
   */
  export type TTIMEINFOS_HEAT1FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT1
     * 
    **/
    select?: TTIMEINFOS_HEAT1Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT1 to fetch.
     * 
    **/
    where: TTIMEINFOS_HEAT1WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT1 findFirst
   */
  export type TTIMEINFOS_HEAT1FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT1
     * 
    **/
    select?: TTIMEINFOS_HEAT1Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT1 to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMEINFOS_HEAT1s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMEINFOS_HEAT1s.
     * 
    **/
    distinct?: Enumerable<TTIMEINFOS_HEAT1ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT1 findMany
   */
  export type TTIMEINFOS_HEAT1FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT1
     * 
    **/
    select?: TTIMEINFOS_HEAT1Select | null
    /**
     * Filter, which TTIMEINFOS_HEAT1s to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMEINFOS_HEAT1s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT1s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMEINFOS_HEAT1ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT1 create
   */
  export type TTIMEINFOS_HEAT1CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT1
     * 
    **/
    select?: TTIMEINFOS_HEAT1Select | null
    /**
     * The data needed to create a TTIMEINFOS_HEAT1.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT1CreateInput, TTIMEINFOS_HEAT1UncheckedCreateInput>
  }


  /**
   * TTIMEINFOS_HEAT1 update
   */
  export type TTIMEINFOS_HEAT1UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT1
     * 
    **/
    select?: TTIMEINFOS_HEAT1Select | null
    /**
     * The data needed to update a TTIMEINFOS_HEAT1.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT1UpdateInput, TTIMEINFOS_HEAT1UncheckedUpdateInput>
    /**
     * Choose, which TTIMEINFOS_HEAT1 to update.
     * 
    **/
    where: TTIMEINFOS_HEAT1WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT1 updateMany
   */
  export type TTIMEINFOS_HEAT1UpdateManyArgs = {
    /**
     * The data used to update TTIMEINFOS_HEAT1s.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT1UpdateManyMutationInput, TTIMEINFOS_HEAT1UncheckedUpdateManyInput>
    /**
     * Filter which TTIMEINFOS_HEAT1s to update
     * 
    **/
    where?: TTIMEINFOS_HEAT1WhereInput
  }


  /**
   * TTIMEINFOS_HEAT1 upsert
   */
  export type TTIMEINFOS_HEAT1UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT1
     * 
    **/
    select?: TTIMEINFOS_HEAT1Select | null
    /**
     * The filter to search for the TTIMEINFOS_HEAT1 to update in case it exists.
     * 
    **/
    where: TTIMEINFOS_HEAT1WhereUniqueInput
    /**
     * In case the TTIMEINFOS_HEAT1 found by the `where` argument doesn't exist, create a new TTIMEINFOS_HEAT1 with this data.
     * 
    **/
    create: XOR<TTIMEINFOS_HEAT1CreateInput, TTIMEINFOS_HEAT1UncheckedCreateInput>
    /**
     * In case the TTIMEINFOS_HEAT1 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMEINFOS_HEAT1UpdateInput, TTIMEINFOS_HEAT1UncheckedUpdateInput>
  }


  /**
   * TTIMEINFOS_HEAT1 delete
   */
  export type TTIMEINFOS_HEAT1DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT1
     * 
    **/
    select?: TTIMEINFOS_HEAT1Select | null
    /**
     * Filter which TTIMEINFOS_HEAT1 to delete.
     * 
    **/
    where: TTIMEINFOS_HEAT1WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT1 deleteMany
   */
  export type TTIMEINFOS_HEAT1DeleteManyArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT1s to delete
     * 
    **/
    where?: TTIMEINFOS_HEAT1WhereInput
  }


  /**
   * TTIMEINFOS_HEAT1 without action
   */
  export type TTIMEINFOS_HEAT1Args = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT1
     * 
    **/
    select?: TTIMEINFOS_HEAT1Select | null
  }



  /**
   * Model TTIMEINFOS_HEAT2
   */


  export type AggregateTTIMEINFOS_HEAT2 = {
    _count: TTIMEINFOS_HEAT2CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT2AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT2SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT2MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT2MaxAggregateOutputType | null
  }

  export type TTIMEINFOS_HEAT2AvgAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT2SumAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT2MinAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT2MaxAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT2CountAggregateOutputType = {
    C_NUM: number
    C_STATUS: number
    C_TIME: number
    C_PENALTY: number
    C_INTER1: number
    C_INTER2: number
    C_INTER3: number
    C_INTER4: number
    C_INTER5: number
    C_INTER6: number
    C_INTER7: number
    C_INTER8: number
    C_INTER9: number
    C_SPEED1: number
    C_SPEED2: number
    C_SPEED3: number
    C_SPEED4: number
    C_SPEED5: number
    C_SPEED6: number
    C_SPEED7: number
    C_SPEED8: number
    C_SPEED9: number
    C_DATA1: number
    C_DATA2: number
    C_DATA3: number
    C_DATA4: number
    C_DATA5: number
    C_DATA6: number
    C_DATA7: number
    C_DATA8: number
    C_REASON: number
    _all: number
  }


  export type TTIMEINFOS_HEAT2AvgAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT2SumAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT2MinAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT2MaxAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT2CountAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
    _all?: true
  }

  export type TTIMEINFOS_HEAT2AggregateArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT2 to aggregate.
     * 
    **/
    where?: TTIMEINFOS_HEAT2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMEINFOS_HEAT2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMEINFOS_HEAT2s
    **/
    _count?: true | TTIMEINFOS_HEAT2CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMEINFOS_HEAT2AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMEINFOS_HEAT2SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMEINFOS_HEAT2MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMEINFOS_HEAT2MaxAggregateInputType
  }

  export type GetTTIMEINFOS_HEAT2AggregateType<T extends TTIMEINFOS_HEAT2AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMEINFOS_HEAT2]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT2[P]>
      : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT2[P]>
  }




  export type TTIMEINFOS_HEAT2GroupByArgs = {
    where?: TTIMEINFOS_HEAT2WhereInput
    orderBy?: Enumerable<TTIMEINFOS_HEAT2OrderByWithAggregationInput>
    by: Array<TTIMEINFOS_HEAT2ScalarFieldEnum>
    having?: TTIMEINFOS_HEAT2ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMEINFOS_HEAT2CountAggregateInputType | true
    _avg?: TTIMEINFOS_HEAT2AvgAggregateInputType
    _sum?: TTIMEINFOS_HEAT2SumAggregateInputType
    _min?: TTIMEINFOS_HEAT2MinAggregateInputType
    _max?: TTIMEINFOS_HEAT2MaxAggregateInputType
  }


  export type TTIMEINFOS_HEAT2GroupByOutputType = {
    C_NUM: number
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
    _count: TTIMEINFOS_HEAT2CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT2AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT2SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT2MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT2MaxAggregateOutputType | null
  }

  type GetTTIMEINFOS_HEAT2GroupByPayload<T extends TTIMEINFOS_HEAT2GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMEINFOS_HEAT2GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMEINFOS_HEAT2GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMEINFOS_HEAT2GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMEINFOS_HEAT2GroupByOutputType[P]>
        }
      >
    >


  export type TTIMEINFOS_HEAT2Select = {
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TIME?: boolean
    C_PENALTY?: boolean
    C_INTER1?: boolean
    C_INTER2?: boolean
    C_INTER3?: boolean
    C_INTER4?: boolean
    C_INTER5?: boolean
    C_INTER6?: boolean
    C_INTER7?: boolean
    C_INTER8?: boolean
    C_INTER9?: boolean
    C_SPEED1?: boolean
    C_SPEED2?: boolean
    C_SPEED3?: boolean
    C_SPEED4?: boolean
    C_SPEED5?: boolean
    C_SPEED6?: boolean
    C_SPEED7?: boolean
    C_SPEED8?: boolean
    C_SPEED9?: boolean
    C_DATA1?: boolean
    C_DATA2?: boolean
    C_DATA3?: boolean
    C_DATA4?: boolean
    C_DATA5?: boolean
    C_DATA6?: boolean
    C_DATA7?: boolean
    C_DATA8?: boolean
    C_REASON?: boolean
  }

  export type TTIMEINFOS_HEAT2GetPayload<
    S extends boolean | null | undefined | TTIMEINFOS_HEAT2Args,
    U = keyof S
      > = S extends true
        ? TTIMEINFOS_HEAT2
    : S extends undefined
    ? never
    : S extends TTIMEINFOS_HEAT2Args | TTIMEINFOS_HEAT2FindManyArgs
    ?'include' extends U
    ? TTIMEINFOS_HEAT2 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMEINFOS_HEAT2 ? TTIMEINFOS_HEAT2[P] : never
  } 
    : TTIMEINFOS_HEAT2
  : TTIMEINFOS_HEAT2


  type TTIMEINFOS_HEAT2CountArgs = Merge<
    Omit<TTIMEINFOS_HEAT2FindManyArgs, 'select' | 'include'> & {
      select?: TTIMEINFOS_HEAT2CountAggregateInputType | true
    }
  >

  export interface TTIMEINFOS_HEAT2Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMEINFOS_HEAT2 that matches the filter.
     * @param {TTIMEINFOS_HEAT2FindUniqueArgs} args - Arguments to find a TTIMEINFOS_HEAT2
     * @example
     * // Get one TTIMEINFOS_HEAT2
     * const tTIMEINFOS_HEAT2 = await prisma.tTIMEINFOS_HEAT2.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMEINFOS_HEAT2FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMEINFOS_HEAT2FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMEINFOS_HEAT2'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT2Client<TTIMEINFOS_HEAT2>, Prisma__TTIMEINFOS_HEAT2Client<TTIMEINFOS_HEAT2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT2Client<TTIMEINFOS_HEAT2 | null >, Prisma__TTIMEINFOS_HEAT2Client<TTIMEINFOS_HEAT2GetPayload<T> | null >>

    /**
     * Find the first TTIMEINFOS_HEAT2 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT2FindFirstArgs} args - Arguments to find a TTIMEINFOS_HEAT2
     * @example
     * // Get one TTIMEINFOS_HEAT2
     * const tTIMEINFOS_HEAT2 = await prisma.tTIMEINFOS_HEAT2.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMEINFOS_HEAT2FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT2FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMEINFOS_HEAT2'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT2Client<TTIMEINFOS_HEAT2>, Prisma__TTIMEINFOS_HEAT2Client<TTIMEINFOS_HEAT2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT2Client<TTIMEINFOS_HEAT2 | null >, Prisma__TTIMEINFOS_HEAT2Client<TTIMEINFOS_HEAT2GetPayload<T> | null >>

    /**
     * Find zero or more TTIMEINFOS_HEAT2s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT2FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMEINFOS_HEAT2s
     * const tTIMEINFOS_HEAT2s = await prisma.tTIMEINFOS_HEAT2.findMany()
     * 
     * // Get first 10 TTIMEINFOS_HEAT2s
     * const tTIMEINFOS_HEAT2s = await prisma.tTIMEINFOS_HEAT2.findMany({ take: 10 })
     * 
     * // Only select the `C_NUM`
     * const tTIMEINFOS_HEAT2WithC_NUMOnly = await prisma.tTIMEINFOS_HEAT2.findMany({ select: { C_NUM: true } })
     * 
    **/
    findMany<T extends TTIMEINFOS_HEAT2FindManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT2FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMEINFOS_HEAT2>>, PrismaPromise<Array<TTIMEINFOS_HEAT2GetPayload<T>>>>

    /**
     * Create a TTIMEINFOS_HEAT2.
     * @param {TTIMEINFOS_HEAT2CreateArgs} args - Arguments to create a TTIMEINFOS_HEAT2.
     * @example
     * // Create one TTIMEINFOS_HEAT2
     * const TTIMEINFOS_HEAT2 = await prisma.tTIMEINFOS_HEAT2.create({
     *   data: {
     *     // ... data to create a TTIMEINFOS_HEAT2
     *   }
     * })
     * 
    **/
    create<T extends TTIMEINFOS_HEAT2CreateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT2CreateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT2Client<TTIMEINFOS_HEAT2>, Prisma__TTIMEINFOS_HEAT2Client<TTIMEINFOS_HEAT2GetPayload<T>>>

    /**
     * Delete a TTIMEINFOS_HEAT2.
     * @param {TTIMEINFOS_HEAT2DeleteArgs} args - Arguments to delete one TTIMEINFOS_HEAT2.
     * @example
     * // Delete one TTIMEINFOS_HEAT2
     * const TTIMEINFOS_HEAT2 = await prisma.tTIMEINFOS_HEAT2.delete({
     *   where: {
     *     // ... filter to delete one TTIMEINFOS_HEAT2
     *   }
     * })
     * 
    **/
    delete<T extends TTIMEINFOS_HEAT2DeleteArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT2DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT2Client<TTIMEINFOS_HEAT2>, Prisma__TTIMEINFOS_HEAT2Client<TTIMEINFOS_HEAT2GetPayload<T>>>

    /**
     * Update one TTIMEINFOS_HEAT2.
     * @param {TTIMEINFOS_HEAT2UpdateArgs} args - Arguments to update one TTIMEINFOS_HEAT2.
     * @example
     * // Update one TTIMEINFOS_HEAT2
     * const tTIMEINFOS_HEAT2 = await prisma.tTIMEINFOS_HEAT2.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMEINFOS_HEAT2UpdateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT2UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT2Client<TTIMEINFOS_HEAT2>, Prisma__TTIMEINFOS_HEAT2Client<TTIMEINFOS_HEAT2GetPayload<T>>>

    /**
     * Delete zero or more TTIMEINFOS_HEAT2s.
     * @param {TTIMEINFOS_HEAT2DeleteManyArgs} args - Arguments to filter TTIMEINFOS_HEAT2s to delete.
     * @example
     * // Delete a few TTIMEINFOS_HEAT2s
     * const { count } = await prisma.tTIMEINFOS_HEAT2.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMEINFOS_HEAT2DeleteManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT2DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMEINFOS_HEAT2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT2UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMEINFOS_HEAT2s
     * const tTIMEINFOS_HEAT2 = await prisma.tTIMEINFOS_HEAT2.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMEINFOS_HEAT2UpdateManyArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT2UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMEINFOS_HEAT2.
     * @param {TTIMEINFOS_HEAT2UpsertArgs} args - Arguments to update or create a TTIMEINFOS_HEAT2.
     * @example
     * // Update or create a TTIMEINFOS_HEAT2
     * const tTIMEINFOS_HEAT2 = await prisma.tTIMEINFOS_HEAT2.upsert({
     *   create: {
     *     // ... data to create a TTIMEINFOS_HEAT2
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT2 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMEINFOS_HEAT2UpsertArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT2UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT2Client<TTIMEINFOS_HEAT2>, Prisma__TTIMEINFOS_HEAT2Client<TTIMEINFOS_HEAT2GetPayload<T>>>

    /**
     * Count the number of TTIMEINFOS_HEAT2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT2CountArgs} args - Arguments to filter TTIMEINFOS_HEAT2s to count.
     * @example
     * // Count the number of TTIMEINFOS_HEAT2s
     * const count = await prisma.tTIMEINFOS_HEAT2.count({
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT2s we want to count
     *   }
     * })
    **/
    count<T extends TTIMEINFOS_HEAT2CountArgs>(
      args?: Subset<T, TTIMEINFOS_HEAT2CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMEINFOS_HEAT2CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMEINFOS_HEAT2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT2AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMEINFOS_HEAT2AggregateArgs>(args: Subset<T, TTIMEINFOS_HEAT2AggregateArgs>): PrismaPromise<GetTTIMEINFOS_HEAT2AggregateType<T>>

    /**
     * Group by TTIMEINFOS_HEAT2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT2GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMEINFOS_HEAT2GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMEINFOS_HEAT2GroupByArgs['orderBy'] }
        : { orderBy?: TTIMEINFOS_HEAT2GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMEINFOS_HEAT2GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMEINFOS_HEAT2GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMEINFOS_HEAT2.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMEINFOS_HEAT2Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMEINFOS_HEAT2 findUnique
   */
  export type TTIMEINFOS_HEAT2FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT2
     * 
    **/
    select?: TTIMEINFOS_HEAT2Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT2 to fetch.
     * 
    **/
    where: TTIMEINFOS_HEAT2WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT2 findFirst
   */
  export type TTIMEINFOS_HEAT2FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT2
     * 
    **/
    select?: TTIMEINFOS_HEAT2Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT2 to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMEINFOS_HEAT2s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMEINFOS_HEAT2s.
     * 
    **/
    distinct?: Enumerable<TTIMEINFOS_HEAT2ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT2 findMany
   */
  export type TTIMEINFOS_HEAT2FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT2
     * 
    **/
    select?: TTIMEINFOS_HEAT2Select | null
    /**
     * Filter, which TTIMEINFOS_HEAT2s to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMEINFOS_HEAT2s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT2s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMEINFOS_HEAT2ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT2 create
   */
  export type TTIMEINFOS_HEAT2CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT2
     * 
    **/
    select?: TTIMEINFOS_HEAT2Select | null
    /**
     * The data needed to create a TTIMEINFOS_HEAT2.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT2CreateInput, TTIMEINFOS_HEAT2UncheckedCreateInput>
  }


  /**
   * TTIMEINFOS_HEAT2 update
   */
  export type TTIMEINFOS_HEAT2UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT2
     * 
    **/
    select?: TTIMEINFOS_HEAT2Select | null
    /**
     * The data needed to update a TTIMEINFOS_HEAT2.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT2UpdateInput, TTIMEINFOS_HEAT2UncheckedUpdateInput>
    /**
     * Choose, which TTIMEINFOS_HEAT2 to update.
     * 
    **/
    where: TTIMEINFOS_HEAT2WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT2 updateMany
   */
  export type TTIMEINFOS_HEAT2UpdateManyArgs = {
    /**
     * The data used to update TTIMEINFOS_HEAT2s.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT2UpdateManyMutationInput, TTIMEINFOS_HEAT2UncheckedUpdateManyInput>
    /**
     * Filter which TTIMEINFOS_HEAT2s to update
     * 
    **/
    where?: TTIMEINFOS_HEAT2WhereInput
  }


  /**
   * TTIMEINFOS_HEAT2 upsert
   */
  export type TTIMEINFOS_HEAT2UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT2
     * 
    **/
    select?: TTIMEINFOS_HEAT2Select | null
    /**
     * The filter to search for the TTIMEINFOS_HEAT2 to update in case it exists.
     * 
    **/
    where: TTIMEINFOS_HEAT2WhereUniqueInput
    /**
     * In case the TTIMEINFOS_HEAT2 found by the `where` argument doesn't exist, create a new TTIMEINFOS_HEAT2 with this data.
     * 
    **/
    create: XOR<TTIMEINFOS_HEAT2CreateInput, TTIMEINFOS_HEAT2UncheckedCreateInput>
    /**
     * In case the TTIMEINFOS_HEAT2 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMEINFOS_HEAT2UpdateInput, TTIMEINFOS_HEAT2UncheckedUpdateInput>
  }


  /**
   * TTIMEINFOS_HEAT2 delete
   */
  export type TTIMEINFOS_HEAT2DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT2
     * 
    **/
    select?: TTIMEINFOS_HEAT2Select | null
    /**
     * Filter which TTIMEINFOS_HEAT2 to delete.
     * 
    **/
    where: TTIMEINFOS_HEAT2WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT2 deleteMany
   */
  export type TTIMEINFOS_HEAT2DeleteManyArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT2s to delete
     * 
    **/
    where?: TTIMEINFOS_HEAT2WhereInput
  }


  /**
   * TTIMEINFOS_HEAT2 without action
   */
  export type TTIMEINFOS_HEAT2Args = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT2
     * 
    **/
    select?: TTIMEINFOS_HEAT2Select | null
  }



  /**
   * Model TTIMEINFOS_HEAT3
   */


  export type AggregateTTIMEINFOS_HEAT3 = {
    _count: TTIMEINFOS_HEAT3CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT3AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT3SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT3MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT3MaxAggregateOutputType | null
  }

  export type TTIMEINFOS_HEAT3AvgAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT3SumAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT3MinAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT3MaxAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT3CountAggregateOutputType = {
    C_NUM: number
    C_STATUS: number
    C_TIME: number
    C_PENALTY: number
    C_INTER1: number
    C_INTER2: number
    C_INTER3: number
    C_INTER4: number
    C_INTER5: number
    C_INTER6: number
    C_INTER7: number
    C_INTER8: number
    C_INTER9: number
    C_SPEED1: number
    C_SPEED2: number
    C_SPEED3: number
    C_SPEED4: number
    C_SPEED5: number
    C_SPEED6: number
    C_SPEED7: number
    C_SPEED8: number
    C_SPEED9: number
    C_DATA1: number
    C_DATA2: number
    C_DATA3: number
    C_DATA4: number
    C_DATA5: number
    C_DATA6: number
    C_DATA7: number
    C_DATA8: number
    C_REASON: number
    _all: number
  }


  export type TTIMEINFOS_HEAT3AvgAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT3SumAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT3MinAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT3MaxAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT3CountAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
    _all?: true
  }

  export type TTIMEINFOS_HEAT3AggregateArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT3 to aggregate.
     * 
    **/
    where?: TTIMEINFOS_HEAT3WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT3s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT3OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMEINFOS_HEAT3WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT3s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT3s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMEINFOS_HEAT3s
    **/
    _count?: true | TTIMEINFOS_HEAT3CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMEINFOS_HEAT3AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMEINFOS_HEAT3SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMEINFOS_HEAT3MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMEINFOS_HEAT3MaxAggregateInputType
  }

  export type GetTTIMEINFOS_HEAT3AggregateType<T extends TTIMEINFOS_HEAT3AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMEINFOS_HEAT3]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT3[P]>
      : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT3[P]>
  }




  export type TTIMEINFOS_HEAT3GroupByArgs = {
    where?: TTIMEINFOS_HEAT3WhereInput
    orderBy?: Enumerable<TTIMEINFOS_HEAT3OrderByWithAggregationInput>
    by: Array<TTIMEINFOS_HEAT3ScalarFieldEnum>
    having?: TTIMEINFOS_HEAT3ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMEINFOS_HEAT3CountAggregateInputType | true
    _avg?: TTIMEINFOS_HEAT3AvgAggregateInputType
    _sum?: TTIMEINFOS_HEAT3SumAggregateInputType
    _min?: TTIMEINFOS_HEAT3MinAggregateInputType
    _max?: TTIMEINFOS_HEAT3MaxAggregateInputType
  }


  export type TTIMEINFOS_HEAT3GroupByOutputType = {
    C_NUM: number
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
    _count: TTIMEINFOS_HEAT3CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT3AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT3SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT3MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT3MaxAggregateOutputType | null
  }

  type GetTTIMEINFOS_HEAT3GroupByPayload<T extends TTIMEINFOS_HEAT3GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMEINFOS_HEAT3GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMEINFOS_HEAT3GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMEINFOS_HEAT3GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMEINFOS_HEAT3GroupByOutputType[P]>
        }
      >
    >


  export type TTIMEINFOS_HEAT3Select = {
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TIME?: boolean
    C_PENALTY?: boolean
    C_INTER1?: boolean
    C_INTER2?: boolean
    C_INTER3?: boolean
    C_INTER4?: boolean
    C_INTER5?: boolean
    C_INTER6?: boolean
    C_INTER7?: boolean
    C_INTER8?: boolean
    C_INTER9?: boolean
    C_SPEED1?: boolean
    C_SPEED2?: boolean
    C_SPEED3?: boolean
    C_SPEED4?: boolean
    C_SPEED5?: boolean
    C_SPEED6?: boolean
    C_SPEED7?: boolean
    C_SPEED8?: boolean
    C_SPEED9?: boolean
    C_DATA1?: boolean
    C_DATA2?: boolean
    C_DATA3?: boolean
    C_DATA4?: boolean
    C_DATA5?: boolean
    C_DATA6?: boolean
    C_DATA7?: boolean
    C_DATA8?: boolean
    C_REASON?: boolean
  }

  export type TTIMEINFOS_HEAT3GetPayload<
    S extends boolean | null | undefined | TTIMEINFOS_HEAT3Args,
    U = keyof S
      > = S extends true
        ? TTIMEINFOS_HEAT3
    : S extends undefined
    ? never
    : S extends TTIMEINFOS_HEAT3Args | TTIMEINFOS_HEAT3FindManyArgs
    ?'include' extends U
    ? TTIMEINFOS_HEAT3 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMEINFOS_HEAT3 ? TTIMEINFOS_HEAT3[P] : never
  } 
    : TTIMEINFOS_HEAT3
  : TTIMEINFOS_HEAT3


  type TTIMEINFOS_HEAT3CountArgs = Merge<
    Omit<TTIMEINFOS_HEAT3FindManyArgs, 'select' | 'include'> & {
      select?: TTIMEINFOS_HEAT3CountAggregateInputType | true
    }
  >

  export interface TTIMEINFOS_HEAT3Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMEINFOS_HEAT3 that matches the filter.
     * @param {TTIMEINFOS_HEAT3FindUniqueArgs} args - Arguments to find a TTIMEINFOS_HEAT3
     * @example
     * // Get one TTIMEINFOS_HEAT3
     * const tTIMEINFOS_HEAT3 = await prisma.tTIMEINFOS_HEAT3.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMEINFOS_HEAT3FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMEINFOS_HEAT3FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMEINFOS_HEAT3'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT3Client<TTIMEINFOS_HEAT3>, Prisma__TTIMEINFOS_HEAT3Client<TTIMEINFOS_HEAT3GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT3Client<TTIMEINFOS_HEAT3 | null >, Prisma__TTIMEINFOS_HEAT3Client<TTIMEINFOS_HEAT3GetPayload<T> | null >>

    /**
     * Find the first TTIMEINFOS_HEAT3 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT3FindFirstArgs} args - Arguments to find a TTIMEINFOS_HEAT3
     * @example
     * // Get one TTIMEINFOS_HEAT3
     * const tTIMEINFOS_HEAT3 = await prisma.tTIMEINFOS_HEAT3.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMEINFOS_HEAT3FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT3FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMEINFOS_HEAT3'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT3Client<TTIMEINFOS_HEAT3>, Prisma__TTIMEINFOS_HEAT3Client<TTIMEINFOS_HEAT3GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT3Client<TTIMEINFOS_HEAT3 | null >, Prisma__TTIMEINFOS_HEAT3Client<TTIMEINFOS_HEAT3GetPayload<T> | null >>

    /**
     * Find zero or more TTIMEINFOS_HEAT3s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT3FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMEINFOS_HEAT3s
     * const tTIMEINFOS_HEAT3s = await prisma.tTIMEINFOS_HEAT3.findMany()
     * 
     * // Get first 10 TTIMEINFOS_HEAT3s
     * const tTIMEINFOS_HEAT3s = await prisma.tTIMEINFOS_HEAT3.findMany({ take: 10 })
     * 
     * // Only select the `C_NUM`
     * const tTIMEINFOS_HEAT3WithC_NUMOnly = await prisma.tTIMEINFOS_HEAT3.findMany({ select: { C_NUM: true } })
     * 
    **/
    findMany<T extends TTIMEINFOS_HEAT3FindManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT3FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMEINFOS_HEAT3>>, PrismaPromise<Array<TTIMEINFOS_HEAT3GetPayload<T>>>>

    /**
     * Create a TTIMEINFOS_HEAT3.
     * @param {TTIMEINFOS_HEAT3CreateArgs} args - Arguments to create a TTIMEINFOS_HEAT3.
     * @example
     * // Create one TTIMEINFOS_HEAT3
     * const TTIMEINFOS_HEAT3 = await prisma.tTIMEINFOS_HEAT3.create({
     *   data: {
     *     // ... data to create a TTIMEINFOS_HEAT3
     *   }
     * })
     * 
    **/
    create<T extends TTIMEINFOS_HEAT3CreateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT3CreateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT3Client<TTIMEINFOS_HEAT3>, Prisma__TTIMEINFOS_HEAT3Client<TTIMEINFOS_HEAT3GetPayload<T>>>

    /**
     * Delete a TTIMEINFOS_HEAT3.
     * @param {TTIMEINFOS_HEAT3DeleteArgs} args - Arguments to delete one TTIMEINFOS_HEAT3.
     * @example
     * // Delete one TTIMEINFOS_HEAT3
     * const TTIMEINFOS_HEAT3 = await prisma.tTIMEINFOS_HEAT3.delete({
     *   where: {
     *     // ... filter to delete one TTIMEINFOS_HEAT3
     *   }
     * })
     * 
    **/
    delete<T extends TTIMEINFOS_HEAT3DeleteArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT3DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT3Client<TTIMEINFOS_HEAT3>, Prisma__TTIMEINFOS_HEAT3Client<TTIMEINFOS_HEAT3GetPayload<T>>>

    /**
     * Update one TTIMEINFOS_HEAT3.
     * @param {TTIMEINFOS_HEAT3UpdateArgs} args - Arguments to update one TTIMEINFOS_HEAT3.
     * @example
     * // Update one TTIMEINFOS_HEAT3
     * const tTIMEINFOS_HEAT3 = await prisma.tTIMEINFOS_HEAT3.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMEINFOS_HEAT3UpdateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT3UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT3Client<TTIMEINFOS_HEAT3>, Prisma__TTIMEINFOS_HEAT3Client<TTIMEINFOS_HEAT3GetPayload<T>>>

    /**
     * Delete zero or more TTIMEINFOS_HEAT3s.
     * @param {TTIMEINFOS_HEAT3DeleteManyArgs} args - Arguments to filter TTIMEINFOS_HEAT3s to delete.
     * @example
     * // Delete a few TTIMEINFOS_HEAT3s
     * const { count } = await prisma.tTIMEINFOS_HEAT3.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMEINFOS_HEAT3DeleteManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT3DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMEINFOS_HEAT3s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT3UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMEINFOS_HEAT3s
     * const tTIMEINFOS_HEAT3 = await prisma.tTIMEINFOS_HEAT3.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMEINFOS_HEAT3UpdateManyArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT3UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMEINFOS_HEAT3.
     * @param {TTIMEINFOS_HEAT3UpsertArgs} args - Arguments to update or create a TTIMEINFOS_HEAT3.
     * @example
     * // Update or create a TTIMEINFOS_HEAT3
     * const tTIMEINFOS_HEAT3 = await prisma.tTIMEINFOS_HEAT3.upsert({
     *   create: {
     *     // ... data to create a TTIMEINFOS_HEAT3
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT3 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMEINFOS_HEAT3UpsertArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT3UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT3Client<TTIMEINFOS_HEAT3>, Prisma__TTIMEINFOS_HEAT3Client<TTIMEINFOS_HEAT3GetPayload<T>>>

    /**
     * Count the number of TTIMEINFOS_HEAT3s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT3CountArgs} args - Arguments to filter TTIMEINFOS_HEAT3s to count.
     * @example
     * // Count the number of TTIMEINFOS_HEAT3s
     * const count = await prisma.tTIMEINFOS_HEAT3.count({
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT3s we want to count
     *   }
     * })
    **/
    count<T extends TTIMEINFOS_HEAT3CountArgs>(
      args?: Subset<T, TTIMEINFOS_HEAT3CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMEINFOS_HEAT3CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMEINFOS_HEAT3.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT3AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMEINFOS_HEAT3AggregateArgs>(args: Subset<T, TTIMEINFOS_HEAT3AggregateArgs>): PrismaPromise<GetTTIMEINFOS_HEAT3AggregateType<T>>

    /**
     * Group by TTIMEINFOS_HEAT3.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT3GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMEINFOS_HEAT3GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMEINFOS_HEAT3GroupByArgs['orderBy'] }
        : { orderBy?: TTIMEINFOS_HEAT3GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMEINFOS_HEAT3GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMEINFOS_HEAT3GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMEINFOS_HEAT3.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMEINFOS_HEAT3Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMEINFOS_HEAT3 findUnique
   */
  export type TTIMEINFOS_HEAT3FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT3
     * 
    **/
    select?: TTIMEINFOS_HEAT3Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT3 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT3 to fetch.
     * 
    **/
    where: TTIMEINFOS_HEAT3WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT3 findFirst
   */
  export type TTIMEINFOS_HEAT3FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT3
     * 
    **/
    select?: TTIMEINFOS_HEAT3Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT3 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT3 to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT3WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT3s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT3OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMEINFOS_HEAT3s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT3WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT3s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT3s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMEINFOS_HEAT3s.
     * 
    **/
    distinct?: Enumerable<TTIMEINFOS_HEAT3ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT3 findMany
   */
  export type TTIMEINFOS_HEAT3FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT3
     * 
    **/
    select?: TTIMEINFOS_HEAT3Select | null
    /**
     * Filter, which TTIMEINFOS_HEAT3s to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT3WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT3s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT3OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMEINFOS_HEAT3s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT3WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT3s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT3s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMEINFOS_HEAT3ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT3 create
   */
  export type TTIMEINFOS_HEAT3CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT3
     * 
    **/
    select?: TTIMEINFOS_HEAT3Select | null
    /**
     * The data needed to create a TTIMEINFOS_HEAT3.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT3CreateInput, TTIMEINFOS_HEAT3UncheckedCreateInput>
  }


  /**
   * TTIMEINFOS_HEAT3 update
   */
  export type TTIMEINFOS_HEAT3UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT3
     * 
    **/
    select?: TTIMEINFOS_HEAT3Select | null
    /**
     * The data needed to update a TTIMEINFOS_HEAT3.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT3UpdateInput, TTIMEINFOS_HEAT3UncheckedUpdateInput>
    /**
     * Choose, which TTIMEINFOS_HEAT3 to update.
     * 
    **/
    where: TTIMEINFOS_HEAT3WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT3 updateMany
   */
  export type TTIMEINFOS_HEAT3UpdateManyArgs = {
    /**
     * The data used to update TTIMEINFOS_HEAT3s.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT3UpdateManyMutationInput, TTIMEINFOS_HEAT3UncheckedUpdateManyInput>
    /**
     * Filter which TTIMEINFOS_HEAT3s to update
     * 
    **/
    where?: TTIMEINFOS_HEAT3WhereInput
  }


  /**
   * TTIMEINFOS_HEAT3 upsert
   */
  export type TTIMEINFOS_HEAT3UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT3
     * 
    **/
    select?: TTIMEINFOS_HEAT3Select | null
    /**
     * The filter to search for the TTIMEINFOS_HEAT3 to update in case it exists.
     * 
    **/
    where: TTIMEINFOS_HEAT3WhereUniqueInput
    /**
     * In case the TTIMEINFOS_HEAT3 found by the `where` argument doesn't exist, create a new TTIMEINFOS_HEAT3 with this data.
     * 
    **/
    create: XOR<TTIMEINFOS_HEAT3CreateInput, TTIMEINFOS_HEAT3UncheckedCreateInput>
    /**
     * In case the TTIMEINFOS_HEAT3 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMEINFOS_HEAT3UpdateInput, TTIMEINFOS_HEAT3UncheckedUpdateInput>
  }


  /**
   * TTIMEINFOS_HEAT3 delete
   */
  export type TTIMEINFOS_HEAT3DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT3
     * 
    **/
    select?: TTIMEINFOS_HEAT3Select | null
    /**
     * Filter which TTIMEINFOS_HEAT3 to delete.
     * 
    **/
    where: TTIMEINFOS_HEAT3WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT3 deleteMany
   */
  export type TTIMEINFOS_HEAT3DeleteManyArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT3s to delete
     * 
    **/
    where?: TTIMEINFOS_HEAT3WhereInput
  }


  /**
   * TTIMEINFOS_HEAT3 without action
   */
  export type TTIMEINFOS_HEAT3Args = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT3
     * 
    **/
    select?: TTIMEINFOS_HEAT3Select | null
  }



  /**
   * Model TTIMEINFOS_HEAT4
   */


  export type AggregateTTIMEINFOS_HEAT4 = {
    _count: TTIMEINFOS_HEAT4CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT4AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT4SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT4MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT4MaxAggregateOutputType | null
  }

  export type TTIMEINFOS_HEAT4AvgAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT4SumAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT4MinAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT4MaxAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT4CountAggregateOutputType = {
    C_NUM: number
    C_STATUS: number
    C_TIME: number
    C_PENALTY: number
    C_INTER1: number
    C_INTER2: number
    C_INTER3: number
    C_INTER4: number
    C_INTER5: number
    C_INTER6: number
    C_INTER7: number
    C_INTER8: number
    C_INTER9: number
    C_SPEED1: number
    C_SPEED2: number
    C_SPEED3: number
    C_SPEED4: number
    C_SPEED5: number
    C_SPEED6: number
    C_SPEED7: number
    C_SPEED8: number
    C_SPEED9: number
    C_DATA1: number
    C_DATA2: number
    C_DATA3: number
    C_DATA4: number
    C_DATA5: number
    C_DATA6: number
    C_DATA7: number
    C_DATA8: number
    C_REASON: number
    _all: number
  }


  export type TTIMEINFOS_HEAT4AvgAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT4SumAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT4MinAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT4MaxAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT4CountAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
    _all?: true
  }

  export type TTIMEINFOS_HEAT4AggregateArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT4 to aggregate.
     * 
    **/
    where?: TTIMEINFOS_HEAT4WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT4s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT4OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMEINFOS_HEAT4WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT4s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT4s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMEINFOS_HEAT4s
    **/
    _count?: true | TTIMEINFOS_HEAT4CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMEINFOS_HEAT4AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMEINFOS_HEAT4SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMEINFOS_HEAT4MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMEINFOS_HEAT4MaxAggregateInputType
  }

  export type GetTTIMEINFOS_HEAT4AggregateType<T extends TTIMEINFOS_HEAT4AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMEINFOS_HEAT4]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT4[P]>
      : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT4[P]>
  }




  export type TTIMEINFOS_HEAT4GroupByArgs = {
    where?: TTIMEINFOS_HEAT4WhereInput
    orderBy?: Enumerable<TTIMEINFOS_HEAT4OrderByWithAggregationInput>
    by: Array<TTIMEINFOS_HEAT4ScalarFieldEnum>
    having?: TTIMEINFOS_HEAT4ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMEINFOS_HEAT4CountAggregateInputType | true
    _avg?: TTIMEINFOS_HEAT4AvgAggregateInputType
    _sum?: TTIMEINFOS_HEAT4SumAggregateInputType
    _min?: TTIMEINFOS_HEAT4MinAggregateInputType
    _max?: TTIMEINFOS_HEAT4MaxAggregateInputType
  }


  export type TTIMEINFOS_HEAT4GroupByOutputType = {
    C_NUM: number
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
    _count: TTIMEINFOS_HEAT4CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT4AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT4SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT4MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT4MaxAggregateOutputType | null
  }

  type GetTTIMEINFOS_HEAT4GroupByPayload<T extends TTIMEINFOS_HEAT4GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMEINFOS_HEAT4GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMEINFOS_HEAT4GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMEINFOS_HEAT4GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMEINFOS_HEAT4GroupByOutputType[P]>
        }
      >
    >


  export type TTIMEINFOS_HEAT4Select = {
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TIME?: boolean
    C_PENALTY?: boolean
    C_INTER1?: boolean
    C_INTER2?: boolean
    C_INTER3?: boolean
    C_INTER4?: boolean
    C_INTER5?: boolean
    C_INTER6?: boolean
    C_INTER7?: boolean
    C_INTER8?: boolean
    C_INTER9?: boolean
    C_SPEED1?: boolean
    C_SPEED2?: boolean
    C_SPEED3?: boolean
    C_SPEED4?: boolean
    C_SPEED5?: boolean
    C_SPEED6?: boolean
    C_SPEED7?: boolean
    C_SPEED8?: boolean
    C_SPEED9?: boolean
    C_DATA1?: boolean
    C_DATA2?: boolean
    C_DATA3?: boolean
    C_DATA4?: boolean
    C_DATA5?: boolean
    C_DATA6?: boolean
    C_DATA7?: boolean
    C_DATA8?: boolean
    C_REASON?: boolean
  }

  export type TTIMEINFOS_HEAT4GetPayload<
    S extends boolean | null | undefined | TTIMEINFOS_HEAT4Args,
    U = keyof S
      > = S extends true
        ? TTIMEINFOS_HEAT4
    : S extends undefined
    ? never
    : S extends TTIMEINFOS_HEAT4Args | TTIMEINFOS_HEAT4FindManyArgs
    ?'include' extends U
    ? TTIMEINFOS_HEAT4 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMEINFOS_HEAT4 ? TTIMEINFOS_HEAT4[P] : never
  } 
    : TTIMEINFOS_HEAT4
  : TTIMEINFOS_HEAT4


  type TTIMEINFOS_HEAT4CountArgs = Merge<
    Omit<TTIMEINFOS_HEAT4FindManyArgs, 'select' | 'include'> & {
      select?: TTIMEINFOS_HEAT4CountAggregateInputType | true
    }
  >

  export interface TTIMEINFOS_HEAT4Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMEINFOS_HEAT4 that matches the filter.
     * @param {TTIMEINFOS_HEAT4FindUniqueArgs} args - Arguments to find a TTIMEINFOS_HEAT4
     * @example
     * // Get one TTIMEINFOS_HEAT4
     * const tTIMEINFOS_HEAT4 = await prisma.tTIMEINFOS_HEAT4.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMEINFOS_HEAT4FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMEINFOS_HEAT4FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMEINFOS_HEAT4'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT4Client<TTIMEINFOS_HEAT4>, Prisma__TTIMEINFOS_HEAT4Client<TTIMEINFOS_HEAT4GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT4Client<TTIMEINFOS_HEAT4 | null >, Prisma__TTIMEINFOS_HEAT4Client<TTIMEINFOS_HEAT4GetPayload<T> | null >>

    /**
     * Find the first TTIMEINFOS_HEAT4 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT4FindFirstArgs} args - Arguments to find a TTIMEINFOS_HEAT4
     * @example
     * // Get one TTIMEINFOS_HEAT4
     * const tTIMEINFOS_HEAT4 = await prisma.tTIMEINFOS_HEAT4.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMEINFOS_HEAT4FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT4FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMEINFOS_HEAT4'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT4Client<TTIMEINFOS_HEAT4>, Prisma__TTIMEINFOS_HEAT4Client<TTIMEINFOS_HEAT4GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT4Client<TTIMEINFOS_HEAT4 | null >, Prisma__TTIMEINFOS_HEAT4Client<TTIMEINFOS_HEAT4GetPayload<T> | null >>

    /**
     * Find zero or more TTIMEINFOS_HEAT4s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT4FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMEINFOS_HEAT4s
     * const tTIMEINFOS_HEAT4s = await prisma.tTIMEINFOS_HEAT4.findMany()
     * 
     * // Get first 10 TTIMEINFOS_HEAT4s
     * const tTIMEINFOS_HEAT4s = await prisma.tTIMEINFOS_HEAT4.findMany({ take: 10 })
     * 
     * // Only select the `C_NUM`
     * const tTIMEINFOS_HEAT4WithC_NUMOnly = await prisma.tTIMEINFOS_HEAT4.findMany({ select: { C_NUM: true } })
     * 
    **/
    findMany<T extends TTIMEINFOS_HEAT4FindManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT4FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMEINFOS_HEAT4>>, PrismaPromise<Array<TTIMEINFOS_HEAT4GetPayload<T>>>>

    /**
     * Create a TTIMEINFOS_HEAT4.
     * @param {TTIMEINFOS_HEAT4CreateArgs} args - Arguments to create a TTIMEINFOS_HEAT4.
     * @example
     * // Create one TTIMEINFOS_HEAT4
     * const TTIMEINFOS_HEAT4 = await prisma.tTIMEINFOS_HEAT4.create({
     *   data: {
     *     // ... data to create a TTIMEINFOS_HEAT4
     *   }
     * })
     * 
    **/
    create<T extends TTIMEINFOS_HEAT4CreateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT4CreateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT4Client<TTIMEINFOS_HEAT4>, Prisma__TTIMEINFOS_HEAT4Client<TTIMEINFOS_HEAT4GetPayload<T>>>

    /**
     * Delete a TTIMEINFOS_HEAT4.
     * @param {TTIMEINFOS_HEAT4DeleteArgs} args - Arguments to delete one TTIMEINFOS_HEAT4.
     * @example
     * // Delete one TTIMEINFOS_HEAT4
     * const TTIMEINFOS_HEAT4 = await prisma.tTIMEINFOS_HEAT4.delete({
     *   where: {
     *     // ... filter to delete one TTIMEINFOS_HEAT4
     *   }
     * })
     * 
    **/
    delete<T extends TTIMEINFOS_HEAT4DeleteArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT4DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT4Client<TTIMEINFOS_HEAT4>, Prisma__TTIMEINFOS_HEAT4Client<TTIMEINFOS_HEAT4GetPayload<T>>>

    /**
     * Update one TTIMEINFOS_HEAT4.
     * @param {TTIMEINFOS_HEAT4UpdateArgs} args - Arguments to update one TTIMEINFOS_HEAT4.
     * @example
     * // Update one TTIMEINFOS_HEAT4
     * const tTIMEINFOS_HEAT4 = await prisma.tTIMEINFOS_HEAT4.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMEINFOS_HEAT4UpdateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT4UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT4Client<TTIMEINFOS_HEAT4>, Prisma__TTIMEINFOS_HEAT4Client<TTIMEINFOS_HEAT4GetPayload<T>>>

    /**
     * Delete zero or more TTIMEINFOS_HEAT4s.
     * @param {TTIMEINFOS_HEAT4DeleteManyArgs} args - Arguments to filter TTIMEINFOS_HEAT4s to delete.
     * @example
     * // Delete a few TTIMEINFOS_HEAT4s
     * const { count } = await prisma.tTIMEINFOS_HEAT4.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMEINFOS_HEAT4DeleteManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT4DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMEINFOS_HEAT4s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT4UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMEINFOS_HEAT4s
     * const tTIMEINFOS_HEAT4 = await prisma.tTIMEINFOS_HEAT4.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMEINFOS_HEAT4UpdateManyArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT4UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMEINFOS_HEAT4.
     * @param {TTIMEINFOS_HEAT4UpsertArgs} args - Arguments to update or create a TTIMEINFOS_HEAT4.
     * @example
     * // Update or create a TTIMEINFOS_HEAT4
     * const tTIMEINFOS_HEAT4 = await prisma.tTIMEINFOS_HEAT4.upsert({
     *   create: {
     *     // ... data to create a TTIMEINFOS_HEAT4
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT4 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMEINFOS_HEAT4UpsertArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT4UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT4Client<TTIMEINFOS_HEAT4>, Prisma__TTIMEINFOS_HEAT4Client<TTIMEINFOS_HEAT4GetPayload<T>>>

    /**
     * Count the number of TTIMEINFOS_HEAT4s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT4CountArgs} args - Arguments to filter TTIMEINFOS_HEAT4s to count.
     * @example
     * // Count the number of TTIMEINFOS_HEAT4s
     * const count = await prisma.tTIMEINFOS_HEAT4.count({
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT4s we want to count
     *   }
     * })
    **/
    count<T extends TTIMEINFOS_HEAT4CountArgs>(
      args?: Subset<T, TTIMEINFOS_HEAT4CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMEINFOS_HEAT4CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMEINFOS_HEAT4.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT4AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMEINFOS_HEAT4AggregateArgs>(args: Subset<T, TTIMEINFOS_HEAT4AggregateArgs>): PrismaPromise<GetTTIMEINFOS_HEAT4AggregateType<T>>

    /**
     * Group by TTIMEINFOS_HEAT4.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT4GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMEINFOS_HEAT4GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMEINFOS_HEAT4GroupByArgs['orderBy'] }
        : { orderBy?: TTIMEINFOS_HEAT4GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMEINFOS_HEAT4GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMEINFOS_HEAT4GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMEINFOS_HEAT4.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMEINFOS_HEAT4Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMEINFOS_HEAT4 findUnique
   */
  export type TTIMEINFOS_HEAT4FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT4
     * 
    **/
    select?: TTIMEINFOS_HEAT4Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT4 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT4 to fetch.
     * 
    **/
    where: TTIMEINFOS_HEAT4WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT4 findFirst
   */
  export type TTIMEINFOS_HEAT4FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT4
     * 
    **/
    select?: TTIMEINFOS_HEAT4Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT4 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT4 to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT4WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT4s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT4OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMEINFOS_HEAT4s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT4WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT4s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT4s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMEINFOS_HEAT4s.
     * 
    **/
    distinct?: Enumerable<TTIMEINFOS_HEAT4ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT4 findMany
   */
  export type TTIMEINFOS_HEAT4FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT4
     * 
    **/
    select?: TTIMEINFOS_HEAT4Select | null
    /**
     * Filter, which TTIMEINFOS_HEAT4s to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT4WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT4s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT4OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMEINFOS_HEAT4s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT4WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT4s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT4s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMEINFOS_HEAT4ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT4 create
   */
  export type TTIMEINFOS_HEAT4CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT4
     * 
    **/
    select?: TTIMEINFOS_HEAT4Select | null
    /**
     * The data needed to create a TTIMEINFOS_HEAT4.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT4CreateInput, TTIMEINFOS_HEAT4UncheckedCreateInput>
  }


  /**
   * TTIMEINFOS_HEAT4 update
   */
  export type TTIMEINFOS_HEAT4UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT4
     * 
    **/
    select?: TTIMEINFOS_HEAT4Select | null
    /**
     * The data needed to update a TTIMEINFOS_HEAT4.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT4UpdateInput, TTIMEINFOS_HEAT4UncheckedUpdateInput>
    /**
     * Choose, which TTIMEINFOS_HEAT4 to update.
     * 
    **/
    where: TTIMEINFOS_HEAT4WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT4 updateMany
   */
  export type TTIMEINFOS_HEAT4UpdateManyArgs = {
    /**
     * The data used to update TTIMEINFOS_HEAT4s.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT4UpdateManyMutationInput, TTIMEINFOS_HEAT4UncheckedUpdateManyInput>
    /**
     * Filter which TTIMEINFOS_HEAT4s to update
     * 
    **/
    where?: TTIMEINFOS_HEAT4WhereInput
  }


  /**
   * TTIMEINFOS_HEAT4 upsert
   */
  export type TTIMEINFOS_HEAT4UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT4
     * 
    **/
    select?: TTIMEINFOS_HEAT4Select | null
    /**
     * The filter to search for the TTIMEINFOS_HEAT4 to update in case it exists.
     * 
    **/
    where: TTIMEINFOS_HEAT4WhereUniqueInput
    /**
     * In case the TTIMEINFOS_HEAT4 found by the `where` argument doesn't exist, create a new TTIMEINFOS_HEAT4 with this data.
     * 
    **/
    create: XOR<TTIMEINFOS_HEAT4CreateInput, TTIMEINFOS_HEAT4UncheckedCreateInput>
    /**
     * In case the TTIMEINFOS_HEAT4 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMEINFOS_HEAT4UpdateInput, TTIMEINFOS_HEAT4UncheckedUpdateInput>
  }


  /**
   * TTIMEINFOS_HEAT4 delete
   */
  export type TTIMEINFOS_HEAT4DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT4
     * 
    **/
    select?: TTIMEINFOS_HEAT4Select | null
    /**
     * Filter which TTIMEINFOS_HEAT4 to delete.
     * 
    **/
    where: TTIMEINFOS_HEAT4WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT4 deleteMany
   */
  export type TTIMEINFOS_HEAT4DeleteManyArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT4s to delete
     * 
    **/
    where?: TTIMEINFOS_HEAT4WhereInput
  }


  /**
   * TTIMEINFOS_HEAT4 without action
   */
  export type TTIMEINFOS_HEAT4Args = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT4
     * 
    **/
    select?: TTIMEINFOS_HEAT4Select | null
  }



  /**
   * Model TTIMEINFOS_HEAT5
   */


  export type AggregateTTIMEINFOS_HEAT5 = {
    _count: TTIMEINFOS_HEAT5CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT5AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT5SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT5MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT5MaxAggregateOutputType | null
  }

  export type TTIMEINFOS_HEAT5AvgAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT5SumAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT5MinAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT5MaxAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT5CountAggregateOutputType = {
    C_NUM: number
    C_STATUS: number
    C_TIME: number
    C_PENALTY: number
    C_INTER1: number
    C_INTER2: number
    C_INTER3: number
    C_INTER4: number
    C_INTER5: number
    C_INTER6: number
    C_INTER7: number
    C_INTER8: number
    C_INTER9: number
    C_SPEED1: number
    C_SPEED2: number
    C_SPEED3: number
    C_SPEED4: number
    C_SPEED5: number
    C_SPEED6: number
    C_SPEED7: number
    C_SPEED8: number
    C_SPEED9: number
    C_DATA1: number
    C_DATA2: number
    C_DATA3: number
    C_DATA4: number
    C_DATA5: number
    C_DATA6: number
    C_DATA7: number
    C_DATA8: number
    C_REASON: number
    _all: number
  }


  export type TTIMEINFOS_HEAT5AvgAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT5SumAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT5MinAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT5MaxAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT5CountAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
    _all?: true
  }

  export type TTIMEINFOS_HEAT5AggregateArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT5 to aggregate.
     * 
    **/
    where?: TTIMEINFOS_HEAT5WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT5s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT5OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMEINFOS_HEAT5WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT5s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT5s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMEINFOS_HEAT5s
    **/
    _count?: true | TTIMEINFOS_HEAT5CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMEINFOS_HEAT5AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMEINFOS_HEAT5SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMEINFOS_HEAT5MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMEINFOS_HEAT5MaxAggregateInputType
  }

  export type GetTTIMEINFOS_HEAT5AggregateType<T extends TTIMEINFOS_HEAT5AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMEINFOS_HEAT5]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT5[P]>
      : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT5[P]>
  }




  export type TTIMEINFOS_HEAT5GroupByArgs = {
    where?: TTIMEINFOS_HEAT5WhereInput
    orderBy?: Enumerable<TTIMEINFOS_HEAT5OrderByWithAggregationInput>
    by: Array<TTIMEINFOS_HEAT5ScalarFieldEnum>
    having?: TTIMEINFOS_HEAT5ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMEINFOS_HEAT5CountAggregateInputType | true
    _avg?: TTIMEINFOS_HEAT5AvgAggregateInputType
    _sum?: TTIMEINFOS_HEAT5SumAggregateInputType
    _min?: TTIMEINFOS_HEAT5MinAggregateInputType
    _max?: TTIMEINFOS_HEAT5MaxAggregateInputType
  }


  export type TTIMEINFOS_HEAT5GroupByOutputType = {
    C_NUM: number
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
    _count: TTIMEINFOS_HEAT5CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT5AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT5SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT5MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT5MaxAggregateOutputType | null
  }

  type GetTTIMEINFOS_HEAT5GroupByPayload<T extends TTIMEINFOS_HEAT5GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMEINFOS_HEAT5GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMEINFOS_HEAT5GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMEINFOS_HEAT5GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMEINFOS_HEAT5GroupByOutputType[P]>
        }
      >
    >


  export type TTIMEINFOS_HEAT5Select = {
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TIME?: boolean
    C_PENALTY?: boolean
    C_INTER1?: boolean
    C_INTER2?: boolean
    C_INTER3?: boolean
    C_INTER4?: boolean
    C_INTER5?: boolean
    C_INTER6?: boolean
    C_INTER7?: boolean
    C_INTER8?: boolean
    C_INTER9?: boolean
    C_SPEED1?: boolean
    C_SPEED2?: boolean
    C_SPEED3?: boolean
    C_SPEED4?: boolean
    C_SPEED5?: boolean
    C_SPEED6?: boolean
    C_SPEED7?: boolean
    C_SPEED8?: boolean
    C_SPEED9?: boolean
    C_DATA1?: boolean
    C_DATA2?: boolean
    C_DATA3?: boolean
    C_DATA4?: boolean
    C_DATA5?: boolean
    C_DATA6?: boolean
    C_DATA7?: boolean
    C_DATA8?: boolean
    C_REASON?: boolean
  }

  export type TTIMEINFOS_HEAT5GetPayload<
    S extends boolean | null | undefined | TTIMEINFOS_HEAT5Args,
    U = keyof S
      > = S extends true
        ? TTIMEINFOS_HEAT5
    : S extends undefined
    ? never
    : S extends TTIMEINFOS_HEAT5Args | TTIMEINFOS_HEAT5FindManyArgs
    ?'include' extends U
    ? TTIMEINFOS_HEAT5 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMEINFOS_HEAT5 ? TTIMEINFOS_HEAT5[P] : never
  } 
    : TTIMEINFOS_HEAT5
  : TTIMEINFOS_HEAT5


  type TTIMEINFOS_HEAT5CountArgs = Merge<
    Omit<TTIMEINFOS_HEAT5FindManyArgs, 'select' | 'include'> & {
      select?: TTIMEINFOS_HEAT5CountAggregateInputType | true
    }
  >

  export interface TTIMEINFOS_HEAT5Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMEINFOS_HEAT5 that matches the filter.
     * @param {TTIMEINFOS_HEAT5FindUniqueArgs} args - Arguments to find a TTIMEINFOS_HEAT5
     * @example
     * // Get one TTIMEINFOS_HEAT5
     * const tTIMEINFOS_HEAT5 = await prisma.tTIMEINFOS_HEAT5.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMEINFOS_HEAT5FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMEINFOS_HEAT5FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMEINFOS_HEAT5'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT5Client<TTIMEINFOS_HEAT5>, Prisma__TTIMEINFOS_HEAT5Client<TTIMEINFOS_HEAT5GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT5Client<TTIMEINFOS_HEAT5 | null >, Prisma__TTIMEINFOS_HEAT5Client<TTIMEINFOS_HEAT5GetPayload<T> | null >>

    /**
     * Find the first TTIMEINFOS_HEAT5 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT5FindFirstArgs} args - Arguments to find a TTIMEINFOS_HEAT5
     * @example
     * // Get one TTIMEINFOS_HEAT5
     * const tTIMEINFOS_HEAT5 = await prisma.tTIMEINFOS_HEAT5.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMEINFOS_HEAT5FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT5FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMEINFOS_HEAT5'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT5Client<TTIMEINFOS_HEAT5>, Prisma__TTIMEINFOS_HEAT5Client<TTIMEINFOS_HEAT5GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT5Client<TTIMEINFOS_HEAT5 | null >, Prisma__TTIMEINFOS_HEAT5Client<TTIMEINFOS_HEAT5GetPayload<T> | null >>

    /**
     * Find zero or more TTIMEINFOS_HEAT5s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT5FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMEINFOS_HEAT5s
     * const tTIMEINFOS_HEAT5s = await prisma.tTIMEINFOS_HEAT5.findMany()
     * 
     * // Get first 10 TTIMEINFOS_HEAT5s
     * const tTIMEINFOS_HEAT5s = await prisma.tTIMEINFOS_HEAT5.findMany({ take: 10 })
     * 
     * // Only select the `C_NUM`
     * const tTIMEINFOS_HEAT5WithC_NUMOnly = await prisma.tTIMEINFOS_HEAT5.findMany({ select: { C_NUM: true } })
     * 
    **/
    findMany<T extends TTIMEINFOS_HEAT5FindManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT5FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMEINFOS_HEAT5>>, PrismaPromise<Array<TTIMEINFOS_HEAT5GetPayload<T>>>>

    /**
     * Create a TTIMEINFOS_HEAT5.
     * @param {TTIMEINFOS_HEAT5CreateArgs} args - Arguments to create a TTIMEINFOS_HEAT5.
     * @example
     * // Create one TTIMEINFOS_HEAT5
     * const TTIMEINFOS_HEAT5 = await prisma.tTIMEINFOS_HEAT5.create({
     *   data: {
     *     // ... data to create a TTIMEINFOS_HEAT5
     *   }
     * })
     * 
    **/
    create<T extends TTIMEINFOS_HEAT5CreateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT5CreateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT5Client<TTIMEINFOS_HEAT5>, Prisma__TTIMEINFOS_HEAT5Client<TTIMEINFOS_HEAT5GetPayload<T>>>

    /**
     * Delete a TTIMEINFOS_HEAT5.
     * @param {TTIMEINFOS_HEAT5DeleteArgs} args - Arguments to delete one TTIMEINFOS_HEAT5.
     * @example
     * // Delete one TTIMEINFOS_HEAT5
     * const TTIMEINFOS_HEAT5 = await prisma.tTIMEINFOS_HEAT5.delete({
     *   where: {
     *     // ... filter to delete one TTIMEINFOS_HEAT5
     *   }
     * })
     * 
    **/
    delete<T extends TTIMEINFOS_HEAT5DeleteArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT5DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT5Client<TTIMEINFOS_HEAT5>, Prisma__TTIMEINFOS_HEAT5Client<TTIMEINFOS_HEAT5GetPayload<T>>>

    /**
     * Update one TTIMEINFOS_HEAT5.
     * @param {TTIMEINFOS_HEAT5UpdateArgs} args - Arguments to update one TTIMEINFOS_HEAT5.
     * @example
     * // Update one TTIMEINFOS_HEAT5
     * const tTIMEINFOS_HEAT5 = await prisma.tTIMEINFOS_HEAT5.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMEINFOS_HEAT5UpdateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT5UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT5Client<TTIMEINFOS_HEAT5>, Prisma__TTIMEINFOS_HEAT5Client<TTIMEINFOS_HEAT5GetPayload<T>>>

    /**
     * Delete zero or more TTIMEINFOS_HEAT5s.
     * @param {TTIMEINFOS_HEAT5DeleteManyArgs} args - Arguments to filter TTIMEINFOS_HEAT5s to delete.
     * @example
     * // Delete a few TTIMEINFOS_HEAT5s
     * const { count } = await prisma.tTIMEINFOS_HEAT5.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMEINFOS_HEAT5DeleteManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT5DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMEINFOS_HEAT5s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT5UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMEINFOS_HEAT5s
     * const tTIMEINFOS_HEAT5 = await prisma.tTIMEINFOS_HEAT5.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMEINFOS_HEAT5UpdateManyArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT5UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMEINFOS_HEAT5.
     * @param {TTIMEINFOS_HEAT5UpsertArgs} args - Arguments to update or create a TTIMEINFOS_HEAT5.
     * @example
     * // Update or create a TTIMEINFOS_HEAT5
     * const tTIMEINFOS_HEAT5 = await prisma.tTIMEINFOS_HEAT5.upsert({
     *   create: {
     *     // ... data to create a TTIMEINFOS_HEAT5
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT5 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMEINFOS_HEAT5UpsertArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT5UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT5Client<TTIMEINFOS_HEAT5>, Prisma__TTIMEINFOS_HEAT5Client<TTIMEINFOS_HEAT5GetPayload<T>>>

    /**
     * Count the number of TTIMEINFOS_HEAT5s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT5CountArgs} args - Arguments to filter TTIMEINFOS_HEAT5s to count.
     * @example
     * // Count the number of TTIMEINFOS_HEAT5s
     * const count = await prisma.tTIMEINFOS_HEAT5.count({
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT5s we want to count
     *   }
     * })
    **/
    count<T extends TTIMEINFOS_HEAT5CountArgs>(
      args?: Subset<T, TTIMEINFOS_HEAT5CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMEINFOS_HEAT5CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMEINFOS_HEAT5.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT5AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMEINFOS_HEAT5AggregateArgs>(args: Subset<T, TTIMEINFOS_HEAT5AggregateArgs>): PrismaPromise<GetTTIMEINFOS_HEAT5AggregateType<T>>

    /**
     * Group by TTIMEINFOS_HEAT5.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT5GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMEINFOS_HEAT5GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMEINFOS_HEAT5GroupByArgs['orderBy'] }
        : { orderBy?: TTIMEINFOS_HEAT5GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMEINFOS_HEAT5GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMEINFOS_HEAT5GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMEINFOS_HEAT5.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMEINFOS_HEAT5Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMEINFOS_HEAT5 findUnique
   */
  export type TTIMEINFOS_HEAT5FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT5
     * 
    **/
    select?: TTIMEINFOS_HEAT5Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT5 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT5 to fetch.
     * 
    **/
    where: TTIMEINFOS_HEAT5WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT5 findFirst
   */
  export type TTIMEINFOS_HEAT5FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT5
     * 
    **/
    select?: TTIMEINFOS_HEAT5Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT5 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT5 to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT5WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT5s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT5OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMEINFOS_HEAT5s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT5WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT5s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT5s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMEINFOS_HEAT5s.
     * 
    **/
    distinct?: Enumerable<TTIMEINFOS_HEAT5ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT5 findMany
   */
  export type TTIMEINFOS_HEAT5FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT5
     * 
    **/
    select?: TTIMEINFOS_HEAT5Select | null
    /**
     * Filter, which TTIMEINFOS_HEAT5s to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT5WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT5s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT5OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMEINFOS_HEAT5s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT5WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT5s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT5s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMEINFOS_HEAT5ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT5 create
   */
  export type TTIMEINFOS_HEAT5CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT5
     * 
    **/
    select?: TTIMEINFOS_HEAT5Select | null
    /**
     * The data needed to create a TTIMEINFOS_HEAT5.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT5CreateInput, TTIMEINFOS_HEAT5UncheckedCreateInput>
  }


  /**
   * TTIMEINFOS_HEAT5 update
   */
  export type TTIMEINFOS_HEAT5UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT5
     * 
    **/
    select?: TTIMEINFOS_HEAT5Select | null
    /**
     * The data needed to update a TTIMEINFOS_HEAT5.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT5UpdateInput, TTIMEINFOS_HEAT5UncheckedUpdateInput>
    /**
     * Choose, which TTIMEINFOS_HEAT5 to update.
     * 
    **/
    where: TTIMEINFOS_HEAT5WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT5 updateMany
   */
  export type TTIMEINFOS_HEAT5UpdateManyArgs = {
    /**
     * The data used to update TTIMEINFOS_HEAT5s.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT5UpdateManyMutationInput, TTIMEINFOS_HEAT5UncheckedUpdateManyInput>
    /**
     * Filter which TTIMEINFOS_HEAT5s to update
     * 
    **/
    where?: TTIMEINFOS_HEAT5WhereInput
  }


  /**
   * TTIMEINFOS_HEAT5 upsert
   */
  export type TTIMEINFOS_HEAT5UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT5
     * 
    **/
    select?: TTIMEINFOS_HEAT5Select | null
    /**
     * The filter to search for the TTIMEINFOS_HEAT5 to update in case it exists.
     * 
    **/
    where: TTIMEINFOS_HEAT5WhereUniqueInput
    /**
     * In case the TTIMEINFOS_HEAT5 found by the `where` argument doesn't exist, create a new TTIMEINFOS_HEAT5 with this data.
     * 
    **/
    create: XOR<TTIMEINFOS_HEAT5CreateInput, TTIMEINFOS_HEAT5UncheckedCreateInput>
    /**
     * In case the TTIMEINFOS_HEAT5 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMEINFOS_HEAT5UpdateInput, TTIMEINFOS_HEAT5UncheckedUpdateInput>
  }


  /**
   * TTIMEINFOS_HEAT5 delete
   */
  export type TTIMEINFOS_HEAT5DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT5
     * 
    **/
    select?: TTIMEINFOS_HEAT5Select | null
    /**
     * Filter which TTIMEINFOS_HEAT5 to delete.
     * 
    **/
    where: TTIMEINFOS_HEAT5WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT5 deleteMany
   */
  export type TTIMEINFOS_HEAT5DeleteManyArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT5s to delete
     * 
    **/
    where?: TTIMEINFOS_HEAT5WhereInput
  }


  /**
   * TTIMEINFOS_HEAT5 without action
   */
  export type TTIMEINFOS_HEAT5Args = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT5
     * 
    **/
    select?: TTIMEINFOS_HEAT5Select | null
  }



  /**
   * Model TTIMEINFOS_HEAT6
   */


  export type AggregateTTIMEINFOS_HEAT6 = {
    _count: TTIMEINFOS_HEAT6CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT6AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT6SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT6MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT6MaxAggregateOutputType | null
  }

  export type TTIMEINFOS_HEAT6AvgAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT6SumAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT6MinAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT6MaxAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT6CountAggregateOutputType = {
    C_NUM: number
    C_STATUS: number
    C_TIME: number
    C_PENALTY: number
    C_INTER1: number
    C_INTER2: number
    C_INTER3: number
    C_INTER4: number
    C_INTER5: number
    C_INTER6: number
    C_INTER7: number
    C_INTER8: number
    C_INTER9: number
    C_SPEED1: number
    C_SPEED2: number
    C_SPEED3: number
    C_SPEED4: number
    C_SPEED5: number
    C_SPEED6: number
    C_SPEED7: number
    C_SPEED8: number
    C_SPEED9: number
    C_DATA1: number
    C_DATA2: number
    C_DATA3: number
    C_DATA4: number
    C_DATA5: number
    C_DATA6: number
    C_DATA7: number
    C_DATA8: number
    C_REASON: number
    _all: number
  }


  export type TTIMEINFOS_HEAT6AvgAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT6SumAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT6MinAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT6MaxAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT6CountAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
    _all?: true
  }

  export type TTIMEINFOS_HEAT6AggregateArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT6 to aggregate.
     * 
    **/
    where?: TTIMEINFOS_HEAT6WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT6s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT6OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMEINFOS_HEAT6WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT6s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT6s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMEINFOS_HEAT6s
    **/
    _count?: true | TTIMEINFOS_HEAT6CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMEINFOS_HEAT6AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMEINFOS_HEAT6SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMEINFOS_HEAT6MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMEINFOS_HEAT6MaxAggregateInputType
  }

  export type GetTTIMEINFOS_HEAT6AggregateType<T extends TTIMEINFOS_HEAT6AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMEINFOS_HEAT6]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT6[P]>
      : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT6[P]>
  }




  export type TTIMEINFOS_HEAT6GroupByArgs = {
    where?: TTIMEINFOS_HEAT6WhereInput
    orderBy?: Enumerable<TTIMEINFOS_HEAT6OrderByWithAggregationInput>
    by: Array<TTIMEINFOS_HEAT6ScalarFieldEnum>
    having?: TTIMEINFOS_HEAT6ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMEINFOS_HEAT6CountAggregateInputType | true
    _avg?: TTIMEINFOS_HEAT6AvgAggregateInputType
    _sum?: TTIMEINFOS_HEAT6SumAggregateInputType
    _min?: TTIMEINFOS_HEAT6MinAggregateInputType
    _max?: TTIMEINFOS_HEAT6MaxAggregateInputType
  }


  export type TTIMEINFOS_HEAT6GroupByOutputType = {
    C_NUM: number
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
    _count: TTIMEINFOS_HEAT6CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT6AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT6SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT6MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT6MaxAggregateOutputType | null
  }

  type GetTTIMEINFOS_HEAT6GroupByPayload<T extends TTIMEINFOS_HEAT6GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMEINFOS_HEAT6GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMEINFOS_HEAT6GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMEINFOS_HEAT6GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMEINFOS_HEAT6GroupByOutputType[P]>
        }
      >
    >


  export type TTIMEINFOS_HEAT6Select = {
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TIME?: boolean
    C_PENALTY?: boolean
    C_INTER1?: boolean
    C_INTER2?: boolean
    C_INTER3?: boolean
    C_INTER4?: boolean
    C_INTER5?: boolean
    C_INTER6?: boolean
    C_INTER7?: boolean
    C_INTER8?: boolean
    C_INTER9?: boolean
    C_SPEED1?: boolean
    C_SPEED2?: boolean
    C_SPEED3?: boolean
    C_SPEED4?: boolean
    C_SPEED5?: boolean
    C_SPEED6?: boolean
    C_SPEED7?: boolean
    C_SPEED8?: boolean
    C_SPEED9?: boolean
    C_DATA1?: boolean
    C_DATA2?: boolean
    C_DATA3?: boolean
    C_DATA4?: boolean
    C_DATA5?: boolean
    C_DATA6?: boolean
    C_DATA7?: boolean
    C_DATA8?: boolean
    C_REASON?: boolean
  }

  export type TTIMEINFOS_HEAT6GetPayload<
    S extends boolean | null | undefined | TTIMEINFOS_HEAT6Args,
    U = keyof S
      > = S extends true
        ? TTIMEINFOS_HEAT6
    : S extends undefined
    ? never
    : S extends TTIMEINFOS_HEAT6Args | TTIMEINFOS_HEAT6FindManyArgs
    ?'include' extends U
    ? TTIMEINFOS_HEAT6 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMEINFOS_HEAT6 ? TTIMEINFOS_HEAT6[P] : never
  } 
    : TTIMEINFOS_HEAT6
  : TTIMEINFOS_HEAT6


  type TTIMEINFOS_HEAT6CountArgs = Merge<
    Omit<TTIMEINFOS_HEAT6FindManyArgs, 'select' | 'include'> & {
      select?: TTIMEINFOS_HEAT6CountAggregateInputType | true
    }
  >

  export interface TTIMEINFOS_HEAT6Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMEINFOS_HEAT6 that matches the filter.
     * @param {TTIMEINFOS_HEAT6FindUniqueArgs} args - Arguments to find a TTIMEINFOS_HEAT6
     * @example
     * // Get one TTIMEINFOS_HEAT6
     * const tTIMEINFOS_HEAT6 = await prisma.tTIMEINFOS_HEAT6.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMEINFOS_HEAT6FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMEINFOS_HEAT6FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMEINFOS_HEAT6'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT6Client<TTIMEINFOS_HEAT6>, Prisma__TTIMEINFOS_HEAT6Client<TTIMEINFOS_HEAT6GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT6Client<TTIMEINFOS_HEAT6 | null >, Prisma__TTIMEINFOS_HEAT6Client<TTIMEINFOS_HEAT6GetPayload<T> | null >>

    /**
     * Find the first TTIMEINFOS_HEAT6 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT6FindFirstArgs} args - Arguments to find a TTIMEINFOS_HEAT6
     * @example
     * // Get one TTIMEINFOS_HEAT6
     * const tTIMEINFOS_HEAT6 = await prisma.tTIMEINFOS_HEAT6.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMEINFOS_HEAT6FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT6FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMEINFOS_HEAT6'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT6Client<TTIMEINFOS_HEAT6>, Prisma__TTIMEINFOS_HEAT6Client<TTIMEINFOS_HEAT6GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT6Client<TTIMEINFOS_HEAT6 | null >, Prisma__TTIMEINFOS_HEAT6Client<TTIMEINFOS_HEAT6GetPayload<T> | null >>

    /**
     * Find zero or more TTIMEINFOS_HEAT6s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT6FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMEINFOS_HEAT6s
     * const tTIMEINFOS_HEAT6s = await prisma.tTIMEINFOS_HEAT6.findMany()
     * 
     * // Get first 10 TTIMEINFOS_HEAT6s
     * const tTIMEINFOS_HEAT6s = await prisma.tTIMEINFOS_HEAT6.findMany({ take: 10 })
     * 
     * // Only select the `C_NUM`
     * const tTIMEINFOS_HEAT6WithC_NUMOnly = await prisma.tTIMEINFOS_HEAT6.findMany({ select: { C_NUM: true } })
     * 
    **/
    findMany<T extends TTIMEINFOS_HEAT6FindManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT6FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMEINFOS_HEAT6>>, PrismaPromise<Array<TTIMEINFOS_HEAT6GetPayload<T>>>>

    /**
     * Create a TTIMEINFOS_HEAT6.
     * @param {TTIMEINFOS_HEAT6CreateArgs} args - Arguments to create a TTIMEINFOS_HEAT6.
     * @example
     * // Create one TTIMEINFOS_HEAT6
     * const TTIMEINFOS_HEAT6 = await prisma.tTIMEINFOS_HEAT6.create({
     *   data: {
     *     // ... data to create a TTIMEINFOS_HEAT6
     *   }
     * })
     * 
    **/
    create<T extends TTIMEINFOS_HEAT6CreateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT6CreateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT6Client<TTIMEINFOS_HEAT6>, Prisma__TTIMEINFOS_HEAT6Client<TTIMEINFOS_HEAT6GetPayload<T>>>

    /**
     * Delete a TTIMEINFOS_HEAT6.
     * @param {TTIMEINFOS_HEAT6DeleteArgs} args - Arguments to delete one TTIMEINFOS_HEAT6.
     * @example
     * // Delete one TTIMEINFOS_HEAT6
     * const TTIMEINFOS_HEAT6 = await prisma.tTIMEINFOS_HEAT6.delete({
     *   where: {
     *     // ... filter to delete one TTIMEINFOS_HEAT6
     *   }
     * })
     * 
    **/
    delete<T extends TTIMEINFOS_HEAT6DeleteArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT6DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT6Client<TTIMEINFOS_HEAT6>, Prisma__TTIMEINFOS_HEAT6Client<TTIMEINFOS_HEAT6GetPayload<T>>>

    /**
     * Update one TTIMEINFOS_HEAT6.
     * @param {TTIMEINFOS_HEAT6UpdateArgs} args - Arguments to update one TTIMEINFOS_HEAT6.
     * @example
     * // Update one TTIMEINFOS_HEAT6
     * const tTIMEINFOS_HEAT6 = await prisma.tTIMEINFOS_HEAT6.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMEINFOS_HEAT6UpdateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT6UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT6Client<TTIMEINFOS_HEAT6>, Prisma__TTIMEINFOS_HEAT6Client<TTIMEINFOS_HEAT6GetPayload<T>>>

    /**
     * Delete zero or more TTIMEINFOS_HEAT6s.
     * @param {TTIMEINFOS_HEAT6DeleteManyArgs} args - Arguments to filter TTIMEINFOS_HEAT6s to delete.
     * @example
     * // Delete a few TTIMEINFOS_HEAT6s
     * const { count } = await prisma.tTIMEINFOS_HEAT6.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMEINFOS_HEAT6DeleteManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT6DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMEINFOS_HEAT6s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT6UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMEINFOS_HEAT6s
     * const tTIMEINFOS_HEAT6 = await prisma.tTIMEINFOS_HEAT6.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMEINFOS_HEAT6UpdateManyArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT6UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMEINFOS_HEAT6.
     * @param {TTIMEINFOS_HEAT6UpsertArgs} args - Arguments to update or create a TTIMEINFOS_HEAT6.
     * @example
     * // Update or create a TTIMEINFOS_HEAT6
     * const tTIMEINFOS_HEAT6 = await prisma.tTIMEINFOS_HEAT6.upsert({
     *   create: {
     *     // ... data to create a TTIMEINFOS_HEAT6
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT6 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMEINFOS_HEAT6UpsertArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT6UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT6Client<TTIMEINFOS_HEAT6>, Prisma__TTIMEINFOS_HEAT6Client<TTIMEINFOS_HEAT6GetPayload<T>>>

    /**
     * Count the number of TTIMEINFOS_HEAT6s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT6CountArgs} args - Arguments to filter TTIMEINFOS_HEAT6s to count.
     * @example
     * // Count the number of TTIMEINFOS_HEAT6s
     * const count = await prisma.tTIMEINFOS_HEAT6.count({
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT6s we want to count
     *   }
     * })
    **/
    count<T extends TTIMEINFOS_HEAT6CountArgs>(
      args?: Subset<T, TTIMEINFOS_HEAT6CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMEINFOS_HEAT6CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMEINFOS_HEAT6.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT6AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMEINFOS_HEAT6AggregateArgs>(args: Subset<T, TTIMEINFOS_HEAT6AggregateArgs>): PrismaPromise<GetTTIMEINFOS_HEAT6AggregateType<T>>

    /**
     * Group by TTIMEINFOS_HEAT6.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT6GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMEINFOS_HEAT6GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMEINFOS_HEAT6GroupByArgs['orderBy'] }
        : { orderBy?: TTIMEINFOS_HEAT6GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMEINFOS_HEAT6GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMEINFOS_HEAT6GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMEINFOS_HEAT6.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMEINFOS_HEAT6Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMEINFOS_HEAT6 findUnique
   */
  export type TTIMEINFOS_HEAT6FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT6
     * 
    **/
    select?: TTIMEINFOS_HEAT6Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT6 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT6 to fetch.
     * 
    **/
    where: TTIMEINFOS_HEAT6WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT6 findFirst
   */
  export type TTIMEINFOS_HEAT6FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT6
     * 
    **/
    select?: TTIMEINFOS_HEAT6Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT6 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT6 to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT6WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT6s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT6OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMEINFOS_HEAT6s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT6WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT6s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT6s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMEINFOS_HEAT6s.
     * 
    **/
    distinct?: Enumerable<TTIMEINFOS_HEAT6ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT6 findMany
   */
  export type TTIMEINFOS_HEAT6FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT6
     * 
    **/
    select?: TTIMEINFOS_HEAT6Select | null
    /**
     * Filter, which TTIMEINFOS_HEAT6s to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT6WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT6s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT6OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMEINFOS_HEAT6s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT6WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT6s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT6s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMEINFOS_HEAT6ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT6 create
   */
  export type TTIMEINFOS_HEAT6CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT6
     * 
    **/
    select?: TTIMEINFOS_HEAT6Select | null
    /**
     * The data needed to create a TTIMEINFOS_HEAT6.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT6CreateInput, TTIMEINFOS_HEAT6UncheckedCreateInput>
  }


  /**
   * TTIMEINFOS_HEAT6 update
   */
  export type TTIMEINFOS_HEAT6UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT6
     * 
    **/
    select?: TTIMEINFOS_HEAT6Select | null
    /**
     * The data needed to update a TTIMEINFOS_HEAT6.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT6UpdateInput, TTIMEINFOS_HEAT6UncheckedUpdateInput>
    /**
     * Choose, which TTIMEINFOS_HEAT6 to update.
     * 
    **/
    where: TTIMEINFOS_HEAT6WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT6 updateMany
   */
  export type TTIMEINFOS_HEAT6UpdateManyArgs = {
    /**
     * The data used to update TTIMEINFOS_HEAT6s.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT6UpdateManyMutationInput, TTIMEINFOS_HEAT6UncheckedUpdateManyInput>
    /**
     * Filter which TTIMEINFOS_HEAT6s to update
     * 
    **/
    where?: TTIMEINFOS_HEAT6WhereInput
  }


  /**
   * TTIMEINFOS_HEAT6 upsert
   */
  export type TTIMEINFOS_HEAT6UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT6
     * 
    **/
    select?: TTIMEINFOS_HEAT6Select | null
    /**
     * The filter to search for the TTIMEINFOS_HEAT6 to update in case it exists.
     * 
    **/
    where: TTIMEINFOS_HEAT6WhereUniqueInput
    /**
     * In case the TTIMEINFOS_HEAT6 found by the `where` argument doesn't exist, create a new TTIMEINFOS_HEAT6 with this data.
     * 
    **/
    create: XOR<TTIMEINFOS_HEAT6CreateInput, TTIMEINFOS_HEAT6UncheckedCreateInput>
    /**
     * In case the TTIMEINFOS_HEAT6 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMEINFOS_HEAT6UpdateInput, TTIMEINFOS_HEAT6UncheckedUpdateInput>
  }


  /**
   * TTIMEINFOS_HEAT6 delete
   */
  export type TTIMEINFOS_HEAT6DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT6
     * 
    **/
    select?: TTIMEINFOS_HEAT6Select | null
    /**
     * Filter which TTIMEINFOS_HEAT6 to delete.
     * 
    **/
    where: TTIMEINFOS_HEAT6WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT6 deleteMany
   */
  export type TTIMEINFOS_HEAT6DeleteManyArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT6s to delete
     * 
    **/
    where?: TTIMEINFOS_HEAT6WhereInput
  }


  /**
   * TTIMEINFOS_HEAT6 without action
   */
  export type TTIMEINFOS_HEAT6Args = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT6
     * 
    **/
    select?: TTIMEINFOS_HEAT6Select | null
  }



  /**
   * Model TTIMEINFOS_HEAT7
   */


  export type AggregateTTIMEINFOS_HEAT7 = {
    _count: TTIMEINFOS_HEAT7CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT7AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT7SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT7MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT7MaxAggregateOutputType | null
  }

  export type TTIMEINFOS_HEAT7AvgAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT7SumAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT7MinAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT7MaxAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT7CountAggregateOutputType = {
    C_NUM: number
    C_STATUS: number
    C_TIME: number
    C_PENALTY: number
    C_INTER1: number
    C_INTER2: number
    C_INTER3: number
    C_INTER4: number
    C_INTER5: number
    C_INTER6: number
    C_INTER7: number
    C_INTER8: number
    C_INTER9: number
    C_SPEED1: number
    C_SPEED2: number
    C_SPEED3: number
    C_SPEED4: number
    C_SPEED5: number
    C_SPEED6: number
    C_SPEED7: number
    C_SPEED8: number
    C_SPEED9: number
    C_DATA1: number
    C_DATA2: number
    C_DATA3: number
    C_DATA4: number
    C_DATA5: number
    C_DATA6: number
    C_DATA7: number
    C_DATA8: number
    C_REASON: number
    _all: number
  }


  export type TTIMEINFOS_HEAT7AvgAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT7SumAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT7MinAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT7MaxAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT7CountAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
    _all?: true
  }

  export type TTIMEINFOS_HEAT7AggregateArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT7 to aggregate.
     * 
    **/
    where?: TTIMEINFOS_HEAT7WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT7s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT7OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMEINFOS_HEAT7WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT7s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT7s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMEINFOS_HEAT7s
    **/
    _count?: true | TTIMEINFOS_HEAT7CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMEINFOS_HEAT7AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMEINFOS_HEAT7SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMEINFOS_HEAT7MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMEINFOS_HEAT7MaxAggregateInputType
  }

  export type GetTTIMEINFOS_HEAT7AggregateType<T extends TTIMEINFOS_HEAT7AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMEINFOS_HEAT7]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT7[P]>
      : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT7[P]>
  }




  export type TTIMEINFOS_HEAT7GroupByArgs = {
    where?: TTIMEINFOS_HEAT7WhereInput
    orderBy?: Enumerable<TTIMEINFOS_HEAT7OrderByWithAggregationInput>
    by: Array<TTIMEINFOS_HEAT7ScalarFieldEnum>
    having?: TTIMEINFOS_HEAT7ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMEINFOS_HEAT7CountAggregateInputType | true
    _avg?: TTIMEINFOS_HEAT7AvgAggregateInputType
    _sum?: TTIMEINFOS_HEAT7SumAggregateInputType
    _min?: TTIMEINFOS_HEAT7MinAggregateInputType
    _max?: TTIMEINFOS_HEAT7MaxAggregateInputType
  }


  export type TTIMEINFOS_HEAT7GroupByOutputType = {
    C_NUM: number
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
    _count: TTIMEINFOS_HEAT7CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT7AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT7SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT7MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT7MaxAggregateOutputType | null
  }

  type GetTTIMEINFOS_HEAT7GroupByPayload<T extends TTIMEINFOS_HEAT7GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMEINFOS_HEAT7GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMEINFOS_HEAT7GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMEINFOS_HEAT7GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMEINFOS_HEAT7GroupByOutputType[P]>
        }
      >
    >


  export type TTIMEINFOS_HEAT7Select = {
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TIME?: boolean
    C_PENALTY?: boolean
    C_INTER1?: boolean
    C_INTER2?: boolean
    C_INTER3?: boolean
    C_INTER4?: boolean
    C_INTER5?: boolean
    C_INTER6?: boolean
    C_INTER7?: boolean
    C_INTER8?: boolean
    C_INTER9?: boolean
    C_SPEED1?: boolean
    C_SPEED2?: boolean
    C_SPEED3?: boolean
    C_SPEED4?: boolean
    C_SPEED5?: boolean
    C_SPEED6?: boolean
    C_SPEED7?: boolean
    C_SPEED8?: boolean
    C_SPEED9?: boolean
    C_DATA1?: boolean
    C_DATA2?: boolean
    C_DATA3?: boolean
    C_DATA4?: boolean
    C_DATA5?: boolean
    C_DATA6?: boolean
    C_DATA7?: boolean
    C_DATA8?: boolean
    C_REASON?: boolean
  }

  export type TTIMEINFOS_HEAT7GetPayload<
    S extends boolean | null | undefined | TTIMEINFOS_HEAT7Args,
    U = keyof S
      > = S extends true
        ? TTIMEINFOS_HEAT7
    : S extends undefined
    ? never
    : S extends TTIMEINFOS_HEAT7Args | TTIMEINFOS_HEAT7FindManyArgs
    ?'include' extends U
    ? TTIMEINFOS_HEAT7 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMEINFOS_HEAT7 ? TTIMEINFOS_HEAT7[P] : never
  } 
    : TTIMEINFOS_HEAT7
  : TTIMEINFOS_HEAT7


  type TTIMEINFOS_HEAT7CountArgs = Merge<
    Omit<TTIMEINFOS_HEAT7FindManyArgs, 'select' | 'include'> & {
      select?: TTIMEINFOS_HEAT7CountAggregateInputType | true
    }
  >

  export interface TTIMEINFOS_HEAT7Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMEINFOS_HEAT7 that matches the filter.
     * @param {TTIMEINFOS_HEAT7FindUniqueArgs} args - Arguments to find a TTIMEINFOS_HEAT7
     * @example
     * // Get one TTIMEINFOS_HEAT7
     * const tTIMEINFOS_HEAT7 = await prisma.tTIMEINFOS_HEAT7.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMEINFOS_HEAT7FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMEINFOS_HEAT7FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMEINFOS_HEAT7'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT7Client<TTIMEINFOS_HEAT7>, Prisma__TTIMEINFOS_HEAT7Client<TTIMEINFOS_HEAT7GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT7Client<TTIMEINFOS_HEAT7 | null >, Prisma__TTIMEINFOS_HEAT7Client<TTIMEINFOS_HEAT7GetPayload<T> | null >>

    /**
     * Find the first TTIMEINFOS_HEAT7 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT7FindFirstArgs} args - Arguments to find a TTIMEINFOS_HEAT7
     * @example
     * // Get one TTIMEINFOS_HEAT7
     * const tTIMEINFOS_HEAT7 = await prisma.tTIMEINFOS_HEAT7.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMEINFOS_HEAT7FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT7FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMEINFOS_HEAT7'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT7Client<TTIMEINFOS_HEAT7>, Prisma__TTIMEINFOS_HEAT7Client<TTIMEINFOS_HEAT7GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT7Client<TTIMEINFOS_HEAT7 | null >, Prisma__TTIMEINFOS_HEAT7Client<TTIMEINFOS_HEAT7GetPayload<T> | null >>

    /**
     * Find zero or more TTIMEINFOS_HEAT7s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT7FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMEINFOS_HEAT7s
     * const tTIMEINFOS_HEAT7s = await prisma.tTIMEINFOS_HEAT7.findMany()
     * 
     * // Get first 10 TTIMEINFOS_HEAT7s
     * const tTIMEINFOS_HEAT7s = await prisma.tTIMEINFOS_HEAT7.findMany({ take: 10 })
     * 
     * // Only select the `C_NUM`
     * const tTIMEINFOS_HEAT7WithC_NUMOnly = await prisma.tTIMEINFOS_HEAT7.findMany({ select: { C_NUM: true } })
     * 
    **/
    findMany<T extends TTIMEINFOS_HEAT7FindManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT7FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMEINFOS_HEAT7>>, PrismaPromise<Array<TTIMEINFOS_HEAT7GetPayload<T>>>>

    /**
     * Create a TTIMEINFOS_HEAT7.
     * @param {TTIMEINFOS_HEAT7CreateArgs} args - Arguments to create a TTIMEINFOS_HEAT7.
     * @example
     * // Create one TTIMEINFOS_HEAT7
     * const TTIMEINFOS_HEAT7 = await prisma.tTIMEINFOS_HEAT7.create({
     *   data: {
     *     // ... data to create a TTIMEINFOS_HEAT7
     *   }
     * })
     * 
    **/
    create<T extends TTIMEINFOS_HEAT7CreateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT7CreateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT7Client<TTIMEINFOS_HEAT7>, Prisma__TTIMEINFOS_HEAT7Client<TTIMEINFOS_HEAT7GetPayload<T>>>

    /**
     * Delete a TTIMEINFOS_HEAT7.
     * @param {TTIMEINFOS_HEAT7DeleteArgs} args - Arguments to delete one TTIMEINFOS_HEAT7.
     * @example
     * // Delete one TTIMEINFOS_HEAT7
     * const TTIMEINFOS_HEAT7 = await prisma.tTIMEINFOS_HEAT7.delete({
     *   where: {
     *     // ... filter to delete one TTIMEINFOS_HEAT7
     *   }
     * })
     * 
    **/
    delete<T extends TTIMEINFOS_HEAT7DeleteArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT7DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT7Client<TTIMEINFOS_HEAT7>, Prisma__TTIMEINFOS_HEAT7Client<TTIMEINFOS_HEAT7GetPayload<T>>>

    /**
     * Update one TTIMEINFOS_HEAT7.
     * @param {TTIMEINFOS_HEAT7UpdateArgs} args - Arguments to update one TTIMEINFOS_HEAT7.
     * @example
     * // Update one TTIMEINFOS_HEAT7
     * const tTIMEINFOS_HEAT7 = await prisma.tTIMEINFOS_HEAT7.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMEINFOS_HEAT7UpdateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT7UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT7Client<TTIMEINFOS_HEAT7>, Prisma__TTIMEINFOS_HEAT7Client<TTIMEINFOS_HEAT7GetPayload<T>>>

    /**
     * Delete zero or more TTIMEINFOS_HEAT7s.
     * @param {TTIMEINFOS_HEAT7DeleteManyArgs} args - Arguments to filter TTIMEINFOS_HEAT7s to delete.
     * @example
     * // Delete a few TTIMEINFOS_HEAT7s
     * const { count } = await prisma.tTIMEINFOS_HEAT7.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMEINFOS_HEAT7DeleteManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT7DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMEINFOS_HEAT7s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT7UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMEINFOS_HEAT7s
     * const tTIMEINFOS_HEAT7 = await prisma.tTIMEINFOS_HEAT7.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMEINFOS_HEAT7UpdateManyArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT7UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMEINFOS_HEAT7.
     * @param {TTIMEINFOS_HEAT7UpsertArgs} args - Arguments to update or create a TTIMEINFOS_HEAT7.
     * @example
     * // Update or create a TTIMEINFOS_HEAT7
     * const tTIMEINFOS_HEAT7 = await prisma.tTIMEINFOS_HEAT7.upsert({
     *   create: {
     *     // ... data to create a TTIMEINFOS_HEAT7
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT7 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMEINFOS_HEAT7UpsertArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT7UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT7Client<TTIMEINFOS_HEAT7>, Prisma__TTIMEINFOS_HEAT7Client<TTIMEINFOS_HEAT7GetPayload<T>>>

    /**
     * Count the number of TTIMEINFOS_HEAT7s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT7CountArgs} args - Arguments to filter TTIMEINFOS_HEAT7s to count.
     * @example
     * // Count the number of TTIMEINFOS_HEAT7s
     * const count = await prisma.tTIMEINFOS_HEAT7.count({
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT7s we want to count
     *   }
     * })
    **/
    count<T extends TTIMEINFOS_HEAT7CountArgs>(
      args?: Subset<T, TTIMEINFOS_HEAT7CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMEINFOS_HEAT7CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMEINFOS_HEAT7.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT7AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMEINFOS_HEAT7AggregateArgs>(args: Subset<T, TTIMEINFOS_HEAT7AggregateArgs>): PrismaPromise<GetTTIMEINFOS_HEAT7AggregateType<T>>

    /**
     * Group by TTIMEINFOS_HEAT7.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT7GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMEINFOS_HEAT7GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMEINFOS_HEAT7GroupByArgs['orderBy'] }
        : { orderBy?: TTIMEINFOS_HEAT7GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMEINFOS_HEAT7GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMEINFOS_HEAT7GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMEINFOS_HEAT7.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMEINFOS_HEAT7Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMEINFOS_HEAT7 findUnique
   */
  export type TTIMEINFOS_HEAT7FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT7
     * 
    **/
    select?: TTIMEINFOS_HEAT7Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT7 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT7 to fetch.
     * 
    **/
    where: TTIMEINFOS_HEAT7WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT7 findFirst
   */
  export type TTIMEINFOS_HEAT7FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT7
     * 
    **/
    select?: TTIMEINFOS_HEAT7Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT7 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT7 to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT7WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT7s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT7OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMEINFOS_HEAT7s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT7WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT7s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT7s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMEINFOS_HEAT7s.
     * 
    **/
    distinct?: Enumerable<TTIMEINFOS_HEAT7ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT7 findMany
   */
  export type TTIMEINFOS_HEAT7FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT7
     * 
    **/
    select?: TTIMEINFOS_HEAT7Select | null
    /**
     * Filter, which TTIMEINFOS_HEAT7s to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT7WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT7s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT7OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMEINFOS_HEAT7s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT7WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT7s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT7s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMEINFOS_HEAT7ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT7 create
   */
  export type TTIMEINFOS_HEAT7CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT7
     * 
    **/
    select?: TTIMEINFOS_HEAT7Select | null
    /**
     * The data needed to create a TTIMEINFOS_HEAT7.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT7CreateInput, TTIMEINFOS_HEAT7UncheckedCreateInput>
  }


  /**
   * TTIMEINFOS_HEAT7 update
   */
  export type TTIMEINFOS_HEAT7UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT7
     * 
    **/
    select?: TTIMEINFOS_HEAT7Select | null
    /**
     * The data needed to update a TTIMEINFOS_HEAT7.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT7UpdateInput, TTIMEINFOS_HEAT7UncheckedUpdateInput>
    /**
     * Choose, which TTIMEINFOS_HEAT7 to update.
     * 
    **/
    where: TTIMEINFOS_HEAT7WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT7 updateMany
   */
  export type TTIMEINFOS_HEAT7UpdateManyArgs = {
    /**
     * The data used to update TTIMEINFOS_HEAT7s.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT7UpdateManyMutationInput, TTIMEINFOS_HEAT7UncheckedUpdateManyInput>
    /**
     * Filter which TTIMEINFOS_HEAT7s to update
     * 
    **/
    where?: TTIMEINFOS_HEAT7WhereInput
  }


  /**
   * TTIMEINFOS_HEAT7 upsert
   */
  export type TTIMEINFOS_HEAT7UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT7
     * 
    **/
    select?: TTIMEINFOS_HEAT7Select | null
    /**
     * The filter to search for the TTIMEINFOS_HEAT7 to update in case it exists.
     * 
    **/
    where: TTIMEINFOS_HEAT7WhereUniqueInput
    /**
     * In case the TTIMEINFOS_HEAT7 found by the `where` argument doesn't exist, create a new TTIMEINFOS_HEAT7 with this data.
     * 
    **/
    create: XOR<TTIMEINFOS_HEAT7CreateInput, TTIMEINFOS_HEAT7UncheckedCreateInput>
    /**
     * In case the TTIMEINFOS_HEAT7 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMEINFOS_HEAT7UpdateInput, TTIMEINFOS_HEAT7UncheckedUpdateInput>
  }


  /**
   * TTIMEINFOS_HEAT7 delete
   */
  export type TTIMEINFOS_HEAT7DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT7
     * 
    **/
    select?: TTIMEINFOS_HEAT7Select | null
    /**
     * Filter which TTIMEINFOS_HEAT7 to delete.
     * 
    **/
    where: TTIMEINFOS_HEAT7WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT7 deleteMany
   */
  export type TTIMEINFOS_HEAT7DeleteManyArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT7s to delete
     * 
    **/
    where?: TTIMEINFOS_HEAT7WhereInput
  }


  /**
   * TTIMEINFOS_HEAT7 without action
   */
  export type TTIMEINFOS_HEAT7Args = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT7
     * 
    **/
    select?: TTIMEINFOS_HEAT7Select | null
  }



  /**
   * Model TTIMEINFOS_HEAT8
   */


  export type AggregateTTIMEINFOS_HEAT8 = {
    _count: TTIMEINFOS_HEAT8CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT8AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT8SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT8MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT8MaxAggregateOutputType | null
  }

  export type TTIMEINFOS_HEAT8AvgAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT8SumAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT8MinAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT8MaxAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT8CountAggregateOutputType = {
    C_NUM: number
    C_STATUS: number
    C_TIME: number
    C_PENALTY: number
    C_INTER1: number
    C_INTER2: number
    C_INTER3: number
    C_INTER4: number
    C_INTER5: number
    C_INTER6: number
    C_INTER7: number
    C_INTER8: number
    C_INTER9: number
    C_SPEED1: number
    C_SPEED2: number
    C_SPEED3: number
    C_SPEED4: number
    C_SPEED5: number
    C_SPEED6: number
    C_SPEED7: number
    C_SPEED8: number
    C_SPEED9: number
    C_DATA1: number
    C_DATA2: number
    C_DATA3: number
    C_DATA4: number
    C_DATA5: number
    C_DATA6: number
    C_DATA7: number
    C_DATA8: number
    C_REASON: number
    _all: number
  }


  export type TTIMEINFOS_HEAT8AvgAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT8SumAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT8MinAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT8MaxAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT8CountAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
    _all?: true
  }

  export type TTIMEINFOS_HEAT8AggregateArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT8 to aggregate.
     * 
    **/
    where?: TTIMEINFOS_HEAT8WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT8s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT8OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMEINFOS_HEAT8WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT8s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT8s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMEINFOS_HEAT8s
    **/
    _count?: true | TTIMEINFOS_HEAT8CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMEINFOS_HEAT8AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMEINFOS_HEAT8SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMEINFOS_HEAT8MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMEINFOS_HEAT8MaxAggregateInputType
  }

  export type GetTTIMEINFOS_HEAT8AggregateType<T extends TTIMEINFOS_HEAT8AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMEINFOS_HEAT8]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT8[P]>
      : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT8[P]>
  }




  export type TTIMEINFOS_HEAT8GroupByArgs = {
    where?: TTIMEINFOS_HEAT8WhereInput
    orderBy?: Enumerable<TTIMEINFOS_HEAT8OrderByWithAggregationInput>
    by: Array<TTIMEINFOS_HEAT8ScalarFieldEnum>
    having?: TTIMEINFOS_HEAT8ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMEINFOS_HEAT8CountAggregateInputType | true
    _avg?: TTIMEINFOS_HEAT8AvgAggregateInputType
    _sum?: TTIMEINFOS_HEAT8SumAggregateInputType
    _min?: TTIMEINFOS_HEAT8MinAggregateInputType
    _max?: TTIMEINFOS_HEAT8MaxAggregateInputType
  }


  export type TTIMEINFOS_HEAT8GroupByOutputType = {
    C_NUM: number
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
    _count: TTIMEINFOS_HEAT8CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT8AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT8SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT8MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT8MaxAggregateOutputType | null
  }

  type GetTTIMEINFOS_HEAT8GroupByPayload<T extends TTIMEINFOS_HEAT8GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMEINFOS_HEAT8GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMEINFOS_HEAT8GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMEINFOS_HEAT8GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMEINFOS_HEAT8GroupByOutputType[P]>
        }
      >
    >


  export type TTIMEINFOS_HEAT8Select = {
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TIME?: boolean
    C_PENALTY?: boolean
    C_INTER1?: boolean
    C_INTER2?: boolean
    C_INTER3?: boolean
    C_INTER4?: boolean
    C_INTER5?: boolean
    C_INTER6?: boolean
    C_INTER7?: boolean
    C_INTER8?: boolean
    C_INTER9?: boolean
    C_SPEED1?: boolean
    C_SPEED2?: boolean
    C_SPEED3?: boolean
    C_SPEED4?: boolean
    C_SPEED5?: boolean
    C_SPEED6?: boolean
    C_SPEED7?: boolean
    C_SPEED8?: boolean
    C_SPEED9?: boolean
    C_DATA1?: boolean
    C_DATA2?: boolean
    C_DATA3?: boolean
    C_DATA4?: boolean
    C_DATA5?: boolean
    C_DATA6?: boolean
    C_DATA7?: boolean
    C_DATA8?: boolean
    C_REASON?: boolean
  }

  export type TTIMEINFOS_HEAT8GetPayload<
    S extends boolean | null | undefined | TTIMEINFOS_HEAT8Args,
    U = keyof S
      > = S extends true
        ? TTIMEINFOS_HEAT8
    : S extends undefined
    ? never
    : S extends TTIMEINFOS_HEAT8Args | TTIMEINFOS_HEAT8FindManyArgs
    ?'include' extends U
    ? TTIMEINFOS_HEAT8 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMEINFOS_HEAT8 ? TTIMEINFOS_HEAT8[P] : never
  } 
    : TTIMEINFOS_HEAT8
  : TTIMEINFOS_HEAT8


  type TTIMEINFOS_HEAT8CountArgs = Merge<
    Omit<TTIMEINFOS_HEAT8FindManyArgs, 'select' | 'include'> & {
      select?: TTIMEINFOS_HEAT8CountAggregateInputType | true
    }
  >

  export interface TTIMEINFOS_HEAT8Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMEINFOS_HEAT8 that matches the filter.
     * @param {TTIMEINFOS_HEAT8FindUniqueArgs} args - Arguments to find a TTIMEINFOS_HEAT8
     * @example
     * // Get one TTIMEINFOS_HEAT8
     * const tTIMEINFOS_HEAT8 = await prisma.tTIMEINFOS_HEAT8.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMEINFOS_HEAT8FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMEINFOS_HEAT8FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMEINFOS_HEAT8'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT8Client<TTIMEINFOS_HEAT8>, Prisma__TTIMEINFOS_HEAT8Client<TTIMEINFOS_HEAT8GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT8Client<TTIMEINFOS_HEAT8 | null >, Prisma__TTIMEINFOS_HEAT8Client<TTIMEINFOS_HEAT8GetPayload<T> | null >>

    /**
     * Find the first TTIMEINFOS_HEAT8 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT8FindFirstArgs} args - Arguments to find a TTIMEINFOS_HEAT8
     * @example
     * // Get one TTIMEINFOS_HEAT8
     * const tTIMEINFOS_HEAT8 = await prisma.tTIMEINFOS_HEAT8.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMEINFOS_HEAT8FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT8FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMEINFOS_HEAT8'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT8Client<TTIMEINFOS_HEAT8>, Prisma__TTIMEINFOS_HEAT8Client<TTIMEINFOS_HEAT8GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT8Client<TTIMEINFOS_HEAT8 | null >, Prisma__TTIMEINFOS_HEAT8Client<TTIMEINFOS_HEAT8GetPayload<T> | null >>

    /**
     * Find zero or more TTIMEINFOS_HEAT8s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT8FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMEINFOS_HEAT8s
     * const tTIMEINFOS_HEAT8s = await prisma.tTIMEINFOS_HEAT8.findMany()
     * 
     * // Get first 10 TTIMEINFOS_HEAT8s
     * const tTIMEINFOS_HEAT8s = await prisma.tTIMEINFOS_HEAT8.findMany({ take: 10 })
     * 
     * // Only select the `C_NUM`
     * const tTIMEINFOS_HEAT8WithC_NUMOnly = await prisma.tTIMEINFOS_HEAT8.findMany({ select: { C_NUM: true } })
     * 
    **/
    findMany<T extends TTIMEINFOS_HEAT8FindManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT8FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMEINFOS_HEAT8>>, PrismaPromise<Array<TTIMEINFOS_HEAT8GetPayload<T>>>>

    /**
     * Create a TTIMEINFOS_HEAT8.
     * @param {TTIMEINFOS_HEAT8CreateArgs} args - Arguments to create a TTIMEINFOS_HEAT8.
     * @example
     * // Create one TTIMEINFOS_HEAT8
     * const TTIMEINFOS_HEAT8 = await prisma.tTIMEINFOS_HEAT8.create({
     *   data: {
     *     // ... data to create a TTIMEINFOS_HEAT8
     *   }
     * })
     * 
    **/
    create<T extends TTIMEINFOS_HEAT8CreateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT8CreateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT8Client<TTIMEINFOS_HEAT8>, Prisma__TTIMEINFOS_HEAT8Client<TTIMEINFOS_HEAT8GetPayload<T>>>

    /**
     * Delete a TTIMEINFOS_HEAT8.
     * @param {TTIMEINFOS_HEAT8DeleteArgs} args - Arguments to delete one TTIMEINFOS_HEAT8.
     * @example
     * // Delete one TTIMEINFOS_HEAT8
     * const TTIMEINFOS_HEAT8 = await prisma.tTIMEINFOS_HEAT8.delete({
     *   where: {
     *     // ... filter to delete one TTIMEINFOS_HEAT8
     *   }
     * })
     * 
    **/
    delete<T extends TTIMEINFOS_HEAT8DeleteArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT8DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT8Client<TTIMEINFOS_HEAT8>, Prisma__TTIMEINFOS_HEAT8Client<TTIMEINFOS_HEAT8GetPayload<T>>>

    /**
     * Update one TTIMEINFOS_HEAT8.
     * @param {TTIMEINFOS_HEAT8UpdateArgs} args - Arguments to update one TTIMEINFOS_HEAT8.
     * @example
     * // Update one TTIMEINFOS_HEAT8
     * const tTIMEINFOS_HEAT8 = await prisma.tTIMEINFOS_HEAT8.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMEINFOS_HEAT8UpdateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT8UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT8Client<TTIMEINFOS_HEAT8>, Prisma__TTIMEINFOS_HEAT8Client<TTIMEINFOS_HEAT8GetPayload<T>>>

    /**
     * Delete zero or more TTIMEINFOS_HEAT8s.
     * @param {TTIMEINFOS_HEAT8DeleteManyArgs} args - Arguments to filter TTIMEINFOS_HEAT8s to delete.
     * @example
     * // Delete a few TTIMEINFOS_HEAT8s
     * const { count } = await prisma.tTIMEINFOS_HEAT8.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMEINFOS_HEAT8DeleteManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT8DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMEINFOS_HEAT8s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT8UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMEINFOS_HEAT8s
     * const tTIMEINFOS_HEAT8 = await prisma.tTIMEINFOS_HEAT8.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMEINFOS_HEAT8UpdateManyArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT8UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMEINFOS_HEAT8.
     * @param {TTIMEINFOS_HEAT8UpsertArgs} args - Arguments to update or create a TTIMEINFOS_HEAT8.
     * @example
     * // Update or create a TTIMEINFOS_HEAT8
     * const tTIMEINFOS_HEAT8 = await prisma.tTIMEINFOS_HEAT8.upsert({
     *   create: {
     *     // ... data to create a TTIMEINFOS_HEAT8
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT8 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMEINFOS_HEAT8UpsertArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT8UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT8Client<TTIMEINFOS_HEAT8>, Prisma__TTIMEINFOS_HEAT8Client<TTIMEINFOS_HEAT8GetPayload<T>>>

    /**
     * Count the number of TTIMEINFOS_HEAT8s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT8CountArgs} args - Arguments to filter TTIMEINFOS_HEAT8s to count.
     * @example
     * // Count the number of TTIMEINFOS_HEAT8s
     * const count = await prisma.tTIMEINFOS_HEAT8.count({
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT8s we want to count
     *   }
     * })
    **/
    count<T extends TTIMEINFOS_HEAT8CountArgs>(
      args?: Subset<T, TTIMEINFOS_HEAT8CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMEINFOS_HEAT8CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMEINFOS_HEAT8.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT8AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMEINFOS_HEAT8AggregateArgs>(args: Subset<T, TTIMEINFOS_HEAT8AggregateArgs>): PrismaPromise<GetTTIMEINFOS_HEAT8AggregateType<T>>

    /**
     * Group by TTIMEINFOS_HEAT8.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT8GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMEINFOS_HEAT8GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMEINFOS_HEAT8GroupByArgs['orderBy'] }
        : { orderBy?: TTIMEINFOS_HEAT8GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMEINFOS_HEAT8GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMEINFOS_HEAT8GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMEINFOS_HEAT8.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMEINFOS_HEAT8Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMEINFOS_HEAT8 findUnique
   */
  export type TTIMEINFOS_HEAT8FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT8
     * 
    **/
    select?: TTIMEINFOS_HEAT8Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT8 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT8 to fetch.
     * 
    **/
    where: TTIMEINFOS_HEAT8WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT8 findFirst
   */
  export type TTIMEINFOS_HEAT8FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT8
     * 
    **/
    select?: TTIMEINFOS_HEAT8Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT8 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT8 to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT8WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT8s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT8OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMEINFOS_HEAT8s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT8WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT8s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT8s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMEINFOS_HEAT8s.
     * 
    **/
    distinct?: Enumerable<TTIMEINFOS_HEAT8ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT8 findMany
   */
  export type TTIMEINFOS_HEAT8FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT8
     * 
    **/
    select?: TTIMEINFOS_HEAT8Select | null
    /**
     * Filter, which TTIMEINFOS_HEAT8s to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT8WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT8s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT8OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMEINFOS_HEAT8s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT8WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT8s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT8s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMEINFOS_HEAT8ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT8 create
   */
  export type TTIMEINFOS_HEAT8CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT8
     * 
    **/
    select?: TTIMEINFOS_HEAT8Select | null
    /**
     * The data needed to create a TTIMEINFOS_HEAT8.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT8CreateInput, TTIMEINFOS_HEAT8UncheckedCreateInput>
  }


  /**
   * TTIMEINFOS_HEAT8 update
   */
  export type TTIMEINFOS_HEAT8UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT8
     * 
    **/
    select?: TTIMEINFOS_HEAT8Select | null
    /**
     * The data needed to update a TTIMEINFOS_HEAT8.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT8UpdateInput, TTIMEINFOS_HEAT8UncheckedUpdateInput>
    /**
     * Choose, which TTIMEINFOS_HEAT8 to update.
     * 
    **/
    where: TTIMEINFOS_HEAT8WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT8 updateMany
   */
  export type TTIMEINFOS_HEAT8UpdateManyArgs = {
    /**
     * The data used to update TTIMEINFOS_HEAT8s.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT8UpdateManyMutationInput, TTIMEINFOS_HEAT8UncheckedUpdateManyInput>
    /**
     * Filter which TTIMEINFOS_HEAT8s to update
     * 
    **/
    where?: TTIMEINFOS_HEAT8WhereInput
  }


  /**
   * TTIMEINFOS_HEAT8 upsert
   */
  export type TTIMEINFOS_HEAT8UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT8
     * 
    **/
    select?: TTIMEINFOS_HEAT8Select | null
    /**
     * The filter to search for the TTIMEINFOS_HEAT8 to update in case it exists.
     * 
    **/
    where: TTIMEINFOS_HEAT8WhereUniqueInput
    /**
     * In case the TTIMEINFOS_HEAT8 found by the `where` argument doesn't exist, create a new TTIMEINFOS_HEAT8 with this data.
     * 
    **/
    create: XOR<TTIMEINFOS_HEAT8CreateInput, TTIMEINFOS_HEAT8UncheckedCreateInput>
    /**
     * In case the TTIMEINFOS_HEAT8 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMEINFOS_HEAT8UpdateInput, TTIMEINFOS_HEAT8UncheckedUpdateInput>
  }


  /**
   * TTIMEINFOS_HEAT8 delete
   */
  export type TTIMEINFOS_HEAT8DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT8
     * 
    **/
    select?: TTIMEINFOS_HEAT8Select | null
    /**
     * Filter which TTIMEINFOS_HEAT8 to delete.
     * 
    **/
    where: TTIMEINFOS_HEAT8WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT8 deleteMany
   */
  export type TTIMEINFOS_HEAT8DeleteManyArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT8s to delete
     * 
    **/
    where?: TTIMEINFOS_HEAT8WhereInput
  }


  /**
   * TTIMEINFOS_HEAT8 without action
   */
  export type TTIMEINFOS_HEAT8Args = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT8
     * 
    **/
    select?: TTIMEINFOS_HEAT8Select | null
  }



  /**
   * Model TTIMEINFOS_HEAT9
   */


  export type AggregateTTIMEINFOS_HEAT9 = {
    _count: TTIMEINFOS_HEAT9CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT9AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT9SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT9MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT9MaxAggregateOutputType | null
  }

  export type TTIMEINFOS_HEAT9AvgAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT9SumAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
  }

  export type TTIMEINFOS_HEAT9MinAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT9MaxAggregateOutputType = {
    C_NUM: number | null
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
  }

  export type TTIMEINFOS_HEAT9CountAggregateOutputType = {
    C_NUM: number
    C_STATUS: number
    C_TIME: number
    C_PENALTY: number
    C_INTER1: number
    C_INTER2: number
    C_INTER3: number
    C_INTER4: number
    C_INTER5: number
    C_INTER6: number
    C_INTER7: number
    C_INTER8: number
    C_INTER9: number
    C_SPEED1: number
    C_SPEED2: number
    C_SPEED3: number
    C_SPEED4: number
    C_SPEED5: number
    C_SPEED6: number
    C_SPEED7: number
    C_SPEED8: number
    C_SPEED9: number
    C_DATA1: number
    C_DATA2: number
    C_DATA3: number
    C_DATA4: number
    C_DATA5: number
    C_DATA6: number
    C_DATA7: number
    C_DATA8: number
    C_REASON: number
    _all: number
  }


  export type TTIMEINFOS_HEAT9AvgAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT9SumAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
  }

  export type TTIMEINFOS_HEAT9MinAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT9MaxAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
  }

  export type TTIMEINFOS_HEAT9CountAggregateInputType = {
    C_NUM?: true
    C_STATUS?: true
    C_TIME?: true
    C_PENALTY?: true
    C_INTER1?: true
    C_INTER2?: true
    C_INTER3?: true
    C_INTER4?: true
    C_INTER5?: true
    C_INTER6?: true
    C_INTER7?: true
    C_INTER8?: true
    C_INTER9?: true
    C_SPEED1?: true
    C_SPEED2?: true
    C_SPEED3?: true
    C_SPEED4?: true
    C_SPEED5?: true
    C_SPEED6?: true
    C_SPEED7?: true
    C_SPEED8?: true
    C_SPEED9?: true
    C_DATA1?: true
    C_DATA2?: true
    C_DATA3?: true
    C_DATA4?: true
    C_DATA5?: true
    C_DATA6?: true
    C_DATA7?: true
    C_DATA8?: true
    C_REASON?: true
    _all?: true
  }

  export type TTIMEINFOS_HEAT9AggregateArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT9 to aggregate.
     * 
    **/
    where?: TTIMEINFOS_HEAT9WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT9s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT9OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMEINFOS_HEAT9WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT9s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT9s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMEINFOS_HEAT9s
    **/
    _count?: true | TTIMEINFOS_HEAT9CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMEINFOS_HEAT9AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMEINFOS_HEAT9SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMEINFOS_HEAT9MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMEINFOS_HEAT9MaxAggregateInputType
  }

  export type GetTTIMEINFOS_HEAT9AggregateType<T extends TTIMEINFOS_HEAT9AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMEINFOS_HEAT9]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT9[P]>
      : GetScalarType<T[P], AggregateTTIMEINFOS_HEAT9[P]>
  }




  export type TTIMEINFOS_HEAT9GroupByArgs = {
    where?: TTIMEINFOS_HEAT9WhereInput
    orderBy?: Enumerable<TTIMEINFOS_HEAT9OrderByWithAggregationInput>
    by: Array<TTIMEINFOS_HEAT9ScalarFieldEnum>
    having?: TTIMEINFOS_HEAT9ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMEINFOS_HEAT9CountAggregateInputType | true
    _avg?: TTIMEINFOS_HEAT9AvgAggregateInputType
    _sum?: TTIMEINFOS_HEAT9SumAggregateInputType
    _min?: TTIMEINFOS_HEAT9MinAggregateInputType
    _max?: TTIMEINFOS_HEAT9MaxAggregateInputType
  }


  export type TTIMEINFOS_HEAT9GroupByOutputType = {
    C_NUM: number
    C_STATUS: number | null
    C_TIME: number | null
    C_PENALTY: number | null
    C_INTER1: number | null
    C_INTER2: number | null
    C_INTER3: number | null
    C_INTER4: number | null
    C_INTER5: number | null
    C_INTER6: number | null
    C_INTER7: number | null
    C_INTER8: number | null
    C_INTER9: number | null
    C_SPEED1: number | null
    C_SPEED2: number | null
    C_SPEED3: number | null
    C_SPEED4: number | null
    C_SPEED5: number | null
    C_SPEED6: number | null
    C_SPEED7: number | null
    C_SPEED8: number | null
    C_SPEED9: number | null
    C_DATA1: number | null
    C_DATA2: number | null
    C_DATA3: number | null
    C_DATA4: number | null
    C_DATA5: number | null
    C_DATA6: number | null
    C_DATA7: number | null
    C_DATA8: number | null
    C_REASON: string | null
    _count: TTIMEINFOS_HEAT9CountAggregateOutputType | null
    _avg: TTIMEINFOS_HEAT9AvgAggregateOutputType | null
    _sum: TTIMEINFOS_HEAT9SumAggregateOutputType | null
    _min: TTIMEINFOS_HEAT9MinAggregateOutputType | null
    _max: TTIMEINFOS_HEAT9MaxAggregateOutputType | null
  }

  type GetTTIMEINFOS_HEAT9GroupByPayload<T extends TTIMEINFOS_HEAT9GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMEINFOS_HEAT9GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMEINFOS_HEAT9GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMEINFOS_HEAT9GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMEINFOS_HEAT9GroupByOutputType[P]>
        }
      >
    >


  export type TTIMEINFOS_HEAT9Select = {
    C_NUM?: boolean
    C_STATUS?: boolean
    C_TIME?: boolean
    C_PENALTY?: boolean
    C_INTER1?: boolean
    C_INTER2?: boolean
    C_INTER3?: boolean
    C_INTER4?: boolean
    C_INTER5?: boolean
    C_INTER6?: boolean
    C_INTER7?: boolean
    C_INTER8?: boolean
    C_INTER9?: boolean
    C_SPEED1?: boolean
    C_SPEED2?: boolean
    C_SPEED3?: boolean
    C_SPEED4?: boolean
    C_SPEED5?: boolean
    C_SPEED6?: boolean
    C_SPEED7?: boolean
    C_SPEED8?: boolean
    C_SPEED9?: boolean
    C_DATA1?: boolean
    C_DATA2?: boolean
    C_DATA3?: boolean
    C_DATA4?: boolean
    C_DATA5?: boolean
    C_DATA6?: boolean
    C_DATA7?: boolean
    C_DATA8?: boolean
    C_REASON?: boolean
  }

  export type TTIMEINFOS_HEAT9GetPayload<
    S extends boolean | null | undefined | TTIMEINFOS_HEAT9Args,
    U = keyof S
      > = S extends true
        ? TTIMEINFOS_HEAT9
    : S extends undefined
    ? never
    : S extends TTIMEINFOS_HEAT9Args | TTIMEINFOS_HEAT9FindManyArgs
    ?'include' extends U
    ? TTIMEINFOS_HEAT9 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMEINFOS_HEAT9 ? TTIMEINFOS_HEAT9[P] : never
  } 
    : TTIMEINFOS_HEAT9
  : TTIMEINFOS_HEAT9


  type TTIMEINFOS_HEAT9CountArgs = Merge<
    Omit<TTIMEINFOS_HEAT9FindManyArgs, 'select' | 'include'> & {
      select?: TTIMEINFOS_HEAT9CountAggregateInputType | true
    }
  >

  export interface TTIMEINFOS_HEAT9Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMEINFOS_HEAT9 that matches the filter.
     * @param {TTIMEINFOS_HEAT9FindUniqueArgs} args - Arguments to find a TTIMEINFOS_HEAT9
     * @example
     * // Get one TTIMEINFOS_HEAT9
     * const tTIMEINFOS_HEAT9 = await prisma.tTIMEINFOS_HEAT9.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMEINFOS_HEAT9FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMEINFOS_HEAT9FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMEINFOS_HEAT9'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT9Client<TTIMEINFOS_HEAT9>, Prisma__TTIMEINFOS_HEAT9Client<TTIMEINFOS_HEAT9GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT9Client<TTIMEINFOS_HEAT9 | null >, Prisma__TTIMEINFOS_HEAT9Client<TTIMEINFOS_HEAT9GetPayload<T> | null >>

    /**
     * Find the first TTIMEINFOS_HEAT9 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT9FindFirstArgs} args - Arguments to find a TTIMEINFOS_HEAT9
     * @example
     * // Get one TTIMEINFOS_HEAT9
     * const tTIMEINFOS_HEAT9 = await prisma.tTIMEINFOS_HEAT9.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMEINFOS_HEAT9FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT9FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMEINFOS_HEAT9'> extends True ? CheckSelect<T, Prisma__TTIMEINFOS_HEAT9Client<TTIMEINFOS_HEAT9>, Prisma__TTIMEINFOS_HEAT9Client<TTIMEINFOS_HEAT9GetPayload<T>>> : CheckSelect<T, Prisma__TTIMEINFOS_HEAT9Client<TTIMEINFOS_HEAT9 | null >, Prisma__TTIMEINFOS_HEAT9Client<TTIMEINFOS_HEAT9GetPayload<T> | null >>

    /**
     * Find zero or more TTIMEINFOS_HEAT9s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT9FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMEINFOS_HEAT9s
     * const tTIMEINFOS_HEAT9s = await prisma.tTIMEINFOS_HEAT9.findMany()
     * 
     * // Get first 10 TTIMEINFOS_HEAT9s
     * const tTIMEINFOS_HEAT9s = await prisma.tTIMEINFOS_HEAT9.findMany({ take: 10 })
     * 
     * // Only select the `C_NUM`
     * const tTIMEINFOS_HEAT9WithC_NUMOnly = await prisma.tTIMEINFOS_HEAT9.findMany({ select: { C_NUM: true } })
     * 
    **/
    findMany<T extends TTIMEINFOS_HEAT9FindManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT9FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMEINFOS_HEAT9>>, PrismaPromise<Array<TTIMEINFOS_HEAT9GetPayload<T>>>>

    /**
     * Create a TTIMEINFOS_HEAT9.
     * @param {TTIMEINFOS_HEAT9CreateArgs} args - Arguments to create a TTIMEINFOS_HEAT9.
     * @example
     * // Create one TTIMEINFOS_HEAT9
     * const TTIMEINFOS_HEAT9 = await prisma.tTIMEINFOS_HEAT9.create({
     *   data: {
     *     // ... data to create a TTIMEINFOS_HEAT9
     *   }
     * })
     * 
    **/
    create<T extends TTIMEINFOS_HEAT9CreateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT9CreateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT9Client<TTIMEINFOS_HEAT9>, Prisma__TTIMEINFOS_HEAT9Client<TTIMEINFOS_HEAT9GetPayload<T>>>

    /**
     * Delete a TTIMEINFOS_HEAT9.
     * @param {TTIMEINFOS_HEAT9DeleteArgs} args - Arguments to delete one TTIMEINFOS_HEAT9.
     * @example
     * // Delete one TTIMEINFOS_HEAT9
     * const TTIMEINFOS_HEAT9 = await prisma.tTIMEINFOS_HEAT9.delete({
     *   where: {
     *     // ... filter to delete one TTIMEINFOS_HEAT9
     *   }
     * })
     * 
    **/
    delete<T extends TTIMEINFOS_HEAT9DeleteArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT9DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT9Client<TTIMEINFOS_HEAT9>, Prisma__TTIMEINFOS_HEAT9Client<TTIMEINFOS_HEAT9GetPayload<T>>>

    /**
     * Update one TTIMEINFOS_HEAT9.
     * @param {TTIMEINFOS_HEAT9UpdateArgs} args - Arguments to update one TTIMEINFOS_HEAT9.
     * @example
     * // Update one TTIMEINFOS_HEAT9
     * const tTIMEINFOS_HEAT9 = await prisma.tTIMEINFOS_HEAT9.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMEINFOS_HEAT9UpdateArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT9UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT9Client<TTIMEINFOS_HEAT9>, Prisma__TTIMEINFOS_HEAT9Client<TTIMEINFOS_HEAT9GetPayload<T>>>

    /**
     * Delete zero or more TTIMEINFOS_HEAT9s.
     * @param {TTIMEINFOS_HEAT9DeleteManyArgs} args - Arguments to filter TTIMEINFOS_HEAT9s to delete.
     * @example
     * // Delete a few TTIMEINFOS_HEAT9s
     * const { count } = await prisma.tTIMEINFOS_HEAT9.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMEINFOS_HEAT9DeleteManyArgs>(
      args?: SelectSubset<T, TTIMEINFOS_HEAT9DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMEINFOS_HEAT9s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT9UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMEINFOS_HEAT9s
     * const tTIMEINFOS_HEAT9 = await prisma.tTIMEINFOS_HEAT9.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMEINFOS_HEAT9UpdateManyArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT9UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMEINFOS_HEAT9.
     * @param {TTIMEINFOS_HEAT9UpsertArgs} args - Arguments to update or create a TTIMEINFOS_HEAT9.
     * @example
     * // Update or create a TTIMEINFOS_HEAT9
     * const tTIMEINFOS_HEAT9 = await prisma.tTIMEINFOS_HEAT9.upsert({
     *   create: {
     *     // ... data to create a TTIMEINFOS_HEAT9
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT9 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMEINFOS_HEAT9UpsertArgs>(
      args: SelectSubset<T, TTIMEINFOS_HEAT9UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMEINFOS_HEAT9Client<TTIMEINFOS_HEAT9>, Prisma__TTIMEINFOS_HEAT9Client<TTIMEINFOS_HEAT9GetPayload<T>>>

    /**
     * Count the number of TTIMEINFOS_HEAT9s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT9CountArgs} args - Arguments to filter TTIMEINFOS_HEAT9s to count.
     * @example
     * // Count the number of TTIMEINFOS_HEAT9s
     * const count = await prisma.tTIMEINFOS_HEAT9.count({
     *   where: {
     *     // ... the filter for the TTIMEINFOS_HEAT9s we want to count
     *   }
     * })
    **/
    count<T extends TTIMEINFOS_HEAT9CountArgs>(
      args?: Subset<T, TTIMEINFOS_HEAT9CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMEINFOS_HEAT9CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMEINFOS_HEAT9.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT9AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMEINFOS_HEAT9AggregateArgs>(args: Subset<T, TTIMEINFOS_HEAT9AggregateArgs>): PrismaPromise<GetTTIMEINFOS_HEAT9AggregateType<T>>

    /**
     * Group by TTIMEINFOS_HEAT9.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMEINFOS_HEAT9GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMEINFOS_HEAT9GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMEINFOS_HEAT9GroupByArgs['orderBy'] }
        : { orderBy?: TTIMEINFOS_HEAT9GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMEINFOS_HEAT9GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMEINFOS_HEAT9GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMEINFOS_HEAT9.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMEINFOS_HEAT9Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMEINFOS_HEAT9 findUnique
   */
  export type TTIMEINFOS_HEAT9FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT9
     * 
    **/
    select?: TTIMEINFOS_HEAT9Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT9 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT9 to fetch.
     * 
    **/
    where: TTIMEINFOS_HEAT9WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT9 findFirst
   */
  export type TTIMEINFOS_HEAT9FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT9
     * 
    **/
    select?: TTIMEINFOS_HEAT9Select | null
    /**
     * Throw an Error if a TTIMEINFOS_HEAT9 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMEINFOS_HEAT9 to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT9WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT9s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT9OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMEINFOS_HEAT9s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT9WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT9s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT9s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMEINFOS_HEAT9s.
     * 
    **/
    distinct?: Enumerable<TTIMEINFOS_HEAT9ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT9 findMany
   */
  export type TTIMEINFOS_HEAT9FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT9
     * 
    **/
    select?: TTIMEINFOS_HEAT9Select | null
    /**
     * Filter, which TTIMEINFOS_HEAT9s to fetch.
     * 
    **/
    where?: TTIMEINFOS_HEAT9WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMEINFOS_HEAT9s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMEINFOS_HEAT9OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMEINFOS_HEAT9s.
     * 
    **/
    cursor?: TTIMEINFOS_HEAT9WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMEINFOS_HEAT9s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMEINFOS_HEAT9s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMEINFOS_HEAT9ScalarFieldEnum>
  }


  /**
   * TTIMEINFOS_HEAT9 create
   */
  export type TTIMEINFOS_HEAT9CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT9
     * 
    **/
    select?: TTIMEINFOS_HEAT9Select | null
    /**
     * The data needed to create a TTIMEINFOS_HEAT9.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT9CreateInput, TTIMEINFOS_HEAT9UncheckedCreateInput>
  }


  /**
   * TTIMEINFOS_HEAT9 update
   */
  export type TTIMEINFOS_HEAT9UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT9
     * 
    **/
    select?: TTIMEINFOS_HEAT9Select | null
    /**
     * The data needed to update a TTIMEINFOS_HEAT9.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT9UpdateInput, TTIMEINFOS_HEAT9UncheckedUpdateInput>
    /**
     * Choose, which TTIMEINFOS_HEAT9 to update.
     * 
    **/
    where: TTIMEINFOS_HEAT9WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT9 updateMany
   */
  export type TTIMEINFOS_HEAT9UpdateManyArgs = {
    /**
     * The data used to update TTIMEINFOS_HEAT9s.
     * 
    **/
    data: XOR<TTIMEINFOS_HEAT9UpdateManyMutationInput, TTIMEINFOS_HEAT9UncheckedUpdateManyInput>
    /**
     * Filter which TTIMEINFOS_HEAT9s to update
     * 
    **/
    where?: TTIMEINFOS_HEAT9WhereInput
  }


  /**
   * TTIMEINFOS_HEAT9 upsert
   */
  export type TTIMEINFOS_HEAT9UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT9
     * 
    **/
    select?: TTIMEINFOS_HEAT9Select | null
    /**
     * The filter to search for the TTIMEINFOS_HEAT9 to update in case it exists.
     * 
    **/
    where: TTIMEINFOS_HEAT9WhereUniqueInput
    /**
     * In case the TTIMEINFOS_HEAT9 found by the `where` argument doesn't exist, create a new TTIMEINFOS_HEAT9 with this data.
     * 
    **/
    create: XOR<TTIMEINFOS_HEAT9CreateInput, TTIMEINFOS_HEAT9UncheckedCreateInput>
    /**
     * In case the TTIMEINFOS_HEAT9 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMEINFOS_HEAT9UpdateInput, TTIMEINFOS_HEAT9UncheckedUpdateInput>
  }


  /**
   * TTIMEINFOS_HEAT9 delete
   */
  export type TTIMEINFOS_HEAT9DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT9
     * 
    **/
    select?: TTIMEINFOS_HEAT9Select | null
    /**
     * Filter which TTIMEINFOS_HEAT9 to delete.
     * 
    **/
    where: TTIMEINFOS_HEAT9WhereUniqueInput
  }


  /**
   * TTIMEINFOS_HEAT9 deleteMany
   */
  export type TTIMEINFOS_HEAT9DeleteManyArgs = {
    /**
     * Filter which TTIMEINFOS_HEAT9s to delete
     * 
    **/
    where?: TTIMEINFOS_HEAT9WhereInput
  }


  /**
   * TTIMEINFOS_HEAT9 without action
   */
  export type TTIMEINFOS_HEAT9Args = {
    /**
     * Select specific fields to fetch from the TTIMEINFOS_HEAT9
     * 
    **/
    select?: TTIMEINFOS_HEAT9Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT1_FINISH
   */


  export type AggregateTTIMERECORDS_HEAT1_FINISH = {
    _count: TTIMERECORDS_HEAT1_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT1_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT1_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT1_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT1_FINISHMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT1_FINISHAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT1_FINISHSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT1_FINISHMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT1_FINISHMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT1_FINISHCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT1_FINISHAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT1_FINISHSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT1_FINISHMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT1_FINISHMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT1_FINISHCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT1_FINISHAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT1_FINISH to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT1_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT1_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT1_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT1_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT1_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT1_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT1_FINISHES
    **/
    _count?: true | TTIMERECORDS_HEAT1_FINISHCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT1_FINISHAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT1_FINISHSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT1_FINISHMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT1_FINISHMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT1_FINISHAggregateType<T extends TTIMERECORDS_HEAT1_FINISHAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT1_FINISH]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT1_FINISH[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT1_FINISH[P]>
  }




  export type TTIMERECORDS_HEAT1_FINISHGroupByArgs = {
    where?: TTIMERECORDS_HEAT1_FINISHWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT1_FINISHOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT1_FINISHScalarFieldEnum>
    having?: TTIMERECORDS_HEAT1_FINISHScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT1_FINISHCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT1_FINISHAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT1_FINISHSumAggregateInputType
    _min?: TTIMERECORDS_HEAT1_FINISHMinAggregateInputType
    _max?: TTIMERECORDS_HEAT1_FINISHMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT1_FINISHGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT1_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT1_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT1_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT1_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT1_FINISHMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT1_FINISHGroupByPayload<T extends TTIMERECORDS_HEAT1_FINISHGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT1_FINISHGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT1_FINISHGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT1_FINISHGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT1_FINISHGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT1_FINISHSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT1_FINISHGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT1_FINISHArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT1_FINISH
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT1_FINISHArgs | TTIMERECORDS_HEAT1_FINISHFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT1_FINISH 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT1_FINISH ? TTIMERECORDS_HEAT1_FINISH[P] : never
  } 
    : TTIMERECORDS_HEAT1_FINISH
  : TTIMERECORDS_HEAT1_FINISH


  type TTIMERECORDS_HEAT1_FINISHCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT1_FINISHFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT1_FINISHCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT1_FINISHDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT1_FINISH that matches the filter.
     * @param {TTIMERECORDS_HEAT1_FINISHFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT1_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT1_FINISH
     * const tTIMERECORDS_HEAT1_FINISH = await prisma.tTIMERECORDS_HEAT1_FINISH.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT1_FINISHFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_FINISHFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT1_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_FINISHClient<TTIMERECORDS_HEAT1_FINISH>, Prisma__TTIMERECORDS_HEAT1_FINISHClient<TTIMERECORDS_HEAT1_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_FINISHClient<TTIMERECORDS_HEAT1_FINISH | null >, Prisma__TTIMERECORDS_HEAT1_FINISHClient<TTIMERECORDS_HEAT1_FINISHGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT1_FINISH that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_FINISHFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT1_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT1_FINISH
     * const tTIMERECORDS_HEAT1_FINISH = await prisma.tTIMERECORDS_HEAT1_FINISH.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT1_FINISHFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT1_FINISHFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT1_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_FINISHClient<TTIMERECORDS_HEAT1_FINISH>, Prisma__TTIMERECORDS_HEAT1_FINISHClient<TTIMERECORDS_HEAT1_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_FINISHClient<TTIMERECORDS_HEAT1_FINISH | null >, Prisma__TTIMERECORDS_HEAT1_FINISHClient<TTIMERECORDS_HEAT1_FINISHGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT1_FINISHES that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_FINISHFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT1_FINISHES
     * const tTIMERECORDS_HEAT1_FINISHES = await prisma.tTIMERECORDS_HEAT1_FINISH.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT1_FINISHES
     * const tTIMERECORDS_HEAT1_FINISHES = await prisma.tTIMERECORDS_HEAT1_FINISH.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT1_FINISHWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT1_FINISH.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT1_FINISHFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT1_FINISHFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT1_FINISH>>, PrismaPromise<Array<TTIMERECORDS_HEAT1_FINISHGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT1_FINISH.
     * @param {TTIMERECORDS_HEAT1_FINISHCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT1_FINISH.
     * @example
     * // Create one TTIMERECORDS_HEAT1_FINISH
     * const TTIMERECORDS_HEAT1_FINISH = await prisma.tTIMERECORDS_HEAT1_FINISH.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT1_FINISH
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT1_FINISHCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_FINISHCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_FINISHClient<TTIMERECORDS_HEAT1_FINISH>, Prisma__TTIMERECORDS_HEAT1_FINISHClient<TTIMERECORDS_HEAT1_FINISHGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT1_FINISH.
     * @param {TTIMERECORDS_HEAT1_FINISHDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT1_FINISH.
     * @example
     * // Delete one TTIMERECORDS_HEAT1_FINISH
     * const TTIMERECORDS_HEAT1_FINISH = await prisma.tTIMERECORDS_HEAT1_FINISH.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT1_FINISH
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT1_FINISHDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_FINISHDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_FINISHClient<TTIMERECORDS_HEAT1_FINISH>, Prisma__TTIMERECORDS_HEAT1_FINISHClient<TTIMERECORDS_HEAT1_FINISHGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT1_FINISH.
     * @param {TTIMERECORDS_HEAT1_FINISHUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT1_FINISH.
     * @example
     * // Update one TTIMERECORDS_HEAT1_FINISH
     * const tTIMERECORDS_HEAT1_FINISH = await prisma.tTIMERECORDS_HEAT1_FINISH.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT1_FINISHUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_FINISHUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_FINISHClient<TTIMERECORDS_HEAT1_FINISH>, Prisma__TTIMERECORDS_HEAT1_FINISHClient<TTIMERECORDS_HEAT1_FINISHGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT1_FINISHES.
     * @param {TTIMERECORDS_HEAT1_FINISHDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT1_FINISHES to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT1_FINISHES
     * const { count } = await prisma.tTIMERECORDS_HEAT1_FINISH.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT1_FINISHDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT1_FINISHDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT1_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_FINISHUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT1_FINISHES
     * const tTIMERECORDS_HEAT1_FINISH = await prisma.tTIMERECORDS_HEAT1_FINISH.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT1_FINISHUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_FINISHUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT1_FINISH.
     * @param {TTIMERECORDS_HEAT1_FINISHUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT1_FINISH.
     * @example
     * // Update or create a TTIMERECORDS_HEAT1_FINISH
     * const tTIMERECORDS_HEAT1_FINISH = await prisma.tTIMERECORDS_HEAT1_FINISH.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT1_FINISH
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT1_FINISH we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT1_FINISHUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_FINISHUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_FINISHClient<TTIMERECORDS_HEAT1_FINISH>, Prisma__TTIMERECORDS_HEAT1_FINISHClient<TTIMERECORDS_HEAT1_FINISHGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT1_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_FINISHCountArgs} args - Arguments to filter TTIMERECORDS_HEAT1_FINISHES to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT1_FINISHES
     * const count = await prisma.tTIMERECORDS_HEAT1_FINISH.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT1_FINISHES we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT1_FINISHCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT1_FINISHCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT1_FINISHCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT1_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_FINISHAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT1_FINISHAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT1_FINISHAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT1_FINISHAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT1_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_FINISHGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT1_FINISHGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT1_FINISHGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT1_FINISHGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT1_FINISHGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT1_FINISHGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT1_FINISH.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT1_FINISHClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT1_FINISH findUnique
   */
  export type TTIMERECORDS_HEAT1_FINISHFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT1_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT1_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT1_FINISH to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT1_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT1_FINISH findFirst
   */
  export type TTIMERECORDS_HEAT1_FINISHFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT1_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT1_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT1_FINISH to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT1_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT1_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT1_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT1_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT1_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT1_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT1_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT1_FINISHES.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT1_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT1_FINISH findMany
   */
  export type TTIMERECORDS_HEAT1_FINISHFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT1_FINISHSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT1_FINISHES to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT1_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT1_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT1_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT1_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT1_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT1_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT1_FINISHES.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT1_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT1_FINISH create
   */
  export type TTIMERECORDS_HEAT1_FINISHCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT1_FINISHSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT1_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT1_FINISHCreateInput, TTIMERECORDS_HEAT1_FINISHUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT1_FINISH update
   */
  export type TTIMERECORDS_HEAT1_FINISHUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT1_FINISHSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT1_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT1_FINISHUpdateInput, TTIMERECORDS_HEAT1_FINISHUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT1_FINISH to update.
     * 
    **/
    where: TTIMERECORDS_HEAT1_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT1_FINISH updateMany
   */
  export type TTIMERECORDS_HEAT1_FINISHUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT1_FINISHES.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT1_FINISHUpdateManyMutationInput, TTIMERECORDS_HEAT1_FINISHUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT1_FINISHES to update
     * 
    **/
    where?: TTIMERECORDS_HEAT1_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT1_FINISH upsert
   */
  export type TTIMERECORDS_HEAT1_FINISHUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT1_FINISHSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT1_FINISH to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT1_FINISHWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT1_FINISH found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT1_FINISH with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT1_FINISHCreateInput, TTIMERECORDS_HEAT1_FINISHUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT1_FINISH was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT1_FINISHUpdateInput, TTIMERECORDS_HEAT1_FINISHUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT1_FINISH delete
   */
  export type TTIMERECORDS_HEAT1_FINISHDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT1_FINISHSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT1_FINISH to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT1_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT1_FINISH deleteMany
   */
  export type TTIMERECORDS_HEAT1_FINISHDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT1_FINISHES to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT1_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT1_FINISH without action
   */
  export type TTIMERECORDS_HEAT1_FINISHArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT1_FINISHSelect | null
  }



  /**
   * Model TTIMERECORDS_HEAT1_INTER1
   */


  export type AggregateTTIMERECORDS_HEAT1_INTER1 = {
    _count: TTIMERECORDS_HEAT1_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT1_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT1_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT1_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT1_INTER1MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT1_INTER1AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT1_INTER1SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT1_INTER1MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT1_INTER1MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT1_INTER1CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT1_INTER1AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT1_INTER1SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT1_INTER1MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT1_INTER1MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT1_INTER1CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT1_INTER1AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT1_INTER1 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT1_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT1_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT1_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT1_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT1_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT1_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT1_INTER1s
    **/
    _count?: true | TTIMERECORDS_HEAT1_INTER1CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT1_INTER1AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT1_INTER1SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT1_INTER1MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT1_INTER1MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT1_INTER1AggregateType<T extends TTIMERECORDS_HEAT1_INTER1AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT1_INTER1]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT1_INTER1[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT1_INTER1[P]>
  }




  export type TTIMERECORDS_HEAT1_INTER1GroupByArgs = {
    where?: TTIMERECORDS_HEAT1_INTER1WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT1_INTER1OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT1_INTER1ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT1_INTER1ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT1_INTER1CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT1_INTER1AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT1_INTER1SumAggregateInputType
    _min?: TTIMERECORDS_HEAT1_INTER1MinAggregateInputType
    _max?: TTIMERECORDS_HEAT1_INTER1MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT1_INTER1GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT1_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT1_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT1_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT1_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT1_INTER1MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT1_INTER1GroupByPayload<T extends TTIMERECORDS_HEAT1_INTER1GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT1_INTER1GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT1_INTER1GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT1_INTER1GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT1_INTER1GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT1_INTER1Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT1_INTER1GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT1_INTER1Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT1_INTER1
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT1_INTER1Args | TTIMERECORDS_HEAT1_INTER1FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT1_INTER1 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT1_INTER1 ? TTIMERECORDS_HEAT1_INTER1[P] : never
  } 
    : TTIMERECORDS_HEAT1_INTER1
  : TTIMERECORDS_HEAT1_INTER1


  type TTIMERECORDS_HEAT1_INTER1CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT1_INTER1FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT1_INTER1CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT1_INTER1Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT1_INTER1 that matches the filter.
     * @param {TTIMERECORDS_HEAT1_INTER1FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT1_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT1_INTER1
     * const tTIMERECORDS_HEAT1_INTER1 = await prisma.tTIMERECORDS_HEAT1_INTER1.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT1_INTER1FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_INTER1FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT1_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_INTER1Client<TTIMERECORDS_HEAT1_INTER1>, Prisma__TTIMERECORDS_HEAT1_INTER1Client<TTIMERECORDS_HEAT1_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_INTER1Client<TTIMERECORDS_HEAT1_INTER1 | null >, Prisma__TTIMERECORDS_HEAT1_INTER1Client<TTIMERECORDS_HEAT1_INTER1GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT1_INTER1 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_INTER1FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT1_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT1_INTER1
     * const tTIMERECORDS_HEAT1_INTER1 = await prisma.tTIMERECORDS_HEAT1_INTER1.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT1_INTER1FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT1_INTER1FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT1_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_INTER1Client<TTIMERECORDS_HEAT1_INTER1>, Prisma__TTIMERECORDS_HEAT1_INTER1Client<TTIMERECORDS_HEAT1_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_INTER1Client<TTIMERECORDS_HEAT1_INTER1 | null >, Prisma__TTIMERECORDS_HEAT1_INTER1Client<TTIMERECORDS_HEAT1_INTER1GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT1_INTER1s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_INTER1FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT1_INTER1s
     * const tTIMERECORDS_HEAT1_INTER1s = await prisma.tTIMERECORDS_HEAT1_INTER1.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT1_INTER1s
     * const tTIMERECORDS_HEAT1_INTER1s = await prisma.tTIMERECORDS_HEAT1_INTER1.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT1_INTER1WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT1_INTER1.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT1_INTER1FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT1_INTER1FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT1_INTER1>>, PrismaPromise<Array<TTIMERECORDS_HEAT1_INTER1GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT1_INTER1.
     * @param {TTIMERECORDS_HEAT1_INTER1CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT1_INTER1.
     * @example
     * // Create one TTIMERECORDS_HEAT1_INTER1
     * const TTIMERECORDS_HEAT1_INTER1 = await prisma.tTIMERECORDS_HEAT1_INTER1.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT1_INTER1
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT1_INTER1CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_INTER1CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_INTER1Client<TTIMERECORDS_HEAT1_INTER1>, Prisma__TTIMERECORDS_HEAT1_INTER1Client<TTIMERECORDS_HEAT1_INTER1GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT1_INTER1.
     * @param {TTIMERECORDS_HEAT1_INTER1DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT1_INTER1.
     * @example
     * // Delete one TTIMERECORDS_HEAT1_INTER1
     * const TTIMERECORDS_HEAT1_INTER1 = await prisma.tTIMERECORDS_HEAT1_INTER1.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT1_INTER1
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT1_INTER1DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_INTER1DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_INTER1Client<TTIMERECORDS_HEAT1_INTER1>, Prisma__TTIMERECORDS_HEAT1_INTER1Client<TTIMERECORDS_HEAT1_INTER1GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT1_INTER1.
     * @param {TTIMERECORDS_HEAT1_INTER1UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT1_INTER1.
     * @example
     * // Update one TTIMERECORDS_HEAT1_INTER1
     * const tTIMERECORDS_HEAT1_INTER1 = await prisma.tTIMERECORDS_HEAT1_INTER1.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT1_INTER1UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_INTER1UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_INTER1Client<TTIMERECORDS_HEAT1_INTER1>, Prisma__TTIMERECORDS_HEAT1_INTER1Client<TTIMERECORDS_HEAT1_INTER1GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT1_INTER1s.
     * @param {TTIMERECORDS_HEAT1_INTER1DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT1_INTER1s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT1_INTER1s
     * const { count } = await prisma.tTIMERECORDS_HEAT1_INTER1.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT1_INTER1DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT1_INTER1DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT1_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_INTER1UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT1_INTER1s
     * const tTIMERECORDS_HEAT1_INTER1 = await prisma.tTIMERECORDS_HEAT1_INTER1.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT1_INTER1UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_INTER1UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT1_INTER1.
     * @param {TTIMERECORDS_HEAT1_INTER1UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT1_INTER1.
     * @example
     * // Update or create a TTIMERECORDS_HEAT1_INTER1
     * const tTIMERECORDS_HEAT1_INTER1 = await prisma.tTIMERECORDS_HEAT1_INTER1.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT1_INTER1
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT1_INTER1 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT1_INTER1UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_INTER1UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_INTER1Client<TTIMERECORDS_HEAT1_INTER1>, Prisma__TTIMERECORDS_HEAT1_INTER1Client<TTIMERECORDS_HEAT1_INTER1GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT1_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_INTER1CountArgs} args - Arguments to filter TTIMERECORDS_HEAT1_INTER1s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT1_INTER1s
     * const count = await prisma.tTIMERECORDS_HEAT1_INTER1.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT1_INTER1s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT1_INTER1CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT1_INTER1CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT1_INTER1CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT1_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_INTER1AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT1_INTER1AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT1_INTER1AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT1_INTER1AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT1_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_INTER1GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT1_INTER1GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT1_INTER1GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT1_INTER1GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT1_INTER1GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT1_INTER1GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT1_INTER1.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT1_INTER1Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT1_INTER1 findUnique
   */
  export type TTIMERECORDS_HEAT1_INTER1FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT1_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT1_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT1_INTER1 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT1_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT1_INTER1 findFirst
   */
  export type TTIMERECORDS_HEAT1_INTER1FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT1_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT1_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT1_INTER1 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT1_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT1_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT1_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT1_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT1_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT1_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT1_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT1_INTER1s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT1_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT1_INTER1 findMany
   */
  export type TTIMERECORDS_HEAT1_INTER1FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT1_INTER1Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT1_INTER1s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT1_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT1_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT1_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT1_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT1_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT1_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT1_INTER1s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT1_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT1_INTER1 create
   */
  export type TTIMERECORDS_HEAT1_INTER1CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT1_INTER1Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT1_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT1_INTER1CreateInput, TTIMERECORDS_HEAT1_INTER1UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT1_INTER1 update
   */
  export type TTIMERECORDS_HEAT1_INTER1UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT1_INTER1Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT1_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT1_INTER1UpdateInput, TTIMERECORDS_HEAT1_INTER1UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT1_INTER1 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT1_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT1_INTER1 updateMany
   */
  export type TTIMERECORDS_HEAT1_INTER1UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT1_INTER1s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT1_INTER1UpdateManyMutationInput, TTIMERECORDS_HEAT1_INTER1UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT1_INTER1s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT1_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT1_INTER1 upsert
   */
  export type TTIMERECORDS_HEAT1_INTER1UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT1_INTER1Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT1_INTER1 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT1_INTER1WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT1_INTER1 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT1_INTER1 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT1_INTER1CreateInput, TTIMERECORDS_HEAT1_INTER1UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT1_INTER1 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT1_INTER1UpdateInput, TTIMERECORDS_HEAT1_INTER1UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT1_INTER1 delete
   */
  export type TTIMERECORDS_HEAT1_INTER1DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT1_INTER1Select | null
    /**
     * Filter which TTIMERECORDS_HEAT1_INTER1 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT1_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT1_INTER1 deleteMany
   */
  export type TTIMERECORDS_HEAT1_INTER1DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT1_INTER1s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT1_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT1_INTER1 without action
   */
  export type TTIMERECORDS_HEAT1_INTER1Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT1_INTER1Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT1_INTER2
   */


  export type AggregateTTIMERECORDS_HEAT1_INTER2 = {
    _count: TTIMERECORDS_HEAT1_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT1_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT1_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT1_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT1_INTER2MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT1_INTER2AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT1_INTER2SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT1_INTER2MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT1_INTER2MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT1_INTER2CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT1_INTER2AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT1_INTER2SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT1_INTER2MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT1_INTER2MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT1_INTER2CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT1_INTER2AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT1_INTER2 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT1_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT1_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT1_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT1_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT1_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT1_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT1_INTER2s
    **/
    _count?: true | TTIMERECORDS_HEAT1_INTER2CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT1_INTER2AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT1_INTER2SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT1_INTER2MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT1_INTER2MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT1_INTER2AggregateType<T extends TTIMERECORDS_HEAT1_INTER2AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT1_INTER2]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT1_INTER2[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT1_INTER2[P]>
  }




  export type TTIMERECORDS_HEAT1_INTER2GroupByArgs = {
    where?: TTIMERECORDS_HEAT1_INTER2WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT1_INTER2OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT1_INTER2ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT1_INTER2ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT1_INTER2CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT1_INTER2AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT1_INTER2SumAggregateInputType
    _min?: TTIMERECORDS_HEAT1_INTER2MinAggregateInputType
    _max?: TTIMERECORDS_HEAT1_INTER2MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT1_INTER2GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT1_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT1_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT1_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT1_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT1_INTER2MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT1_INTER2GroupByPayload<T extends TTIMERECORDS_HEAT1_INTER2GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT1_INTER2GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT1_INTER2GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT1_INTER2GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT1_INTER2GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT1_INTER2Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT1_INTER2GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT1_INTER2Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT1_INTER2
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT1_INTER2Args | TTIMERECORDS_HEAT1_INTER2FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT1_INTER2 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT1_INTER2 ? TTIMERECORDS_HEAT1_INTER2[P] : never
  } 
    : TTIMERECORDS_HEAT1_INTER2
  : TTIMERECORDS_HEAT1_INTER2


  type TTIMERECORDS_HEAT1_INTER2CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT1_INTER2FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT1_INTER2CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT1_INTER2Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT1_INTER2 that matches the filter.
     * @param {TTIMERECORDS_HEAT1_INTER2FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT1_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT1_INTER2
     * const tTIMERECORDS_HEAT1_INTER2 = await prisma.tTIMERECORDS_HEAT1_INTER2.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT1_INTER2FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_INTER2FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT1_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_INTER2Client<TTIMERECORDS_HEAT1_INTER2>, Prisma__TTIMERECORDS_HEAT1_INTER2Client<TTIMERECORDS_HEAT1_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_INTER2Client<TTIMERECORDS_HEAT1_INTER2 | null >, Prisma__TTIMERECORDS_HEAT1_INTER2Client<TTIMERECORDS_HEAT1_INTER2GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT1_INTER2 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_INTER2FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT1_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT1_INTER2
     * const tTIMERECORDS_HEAT1_INTER2 = await prisma.tTIMERECORDS_HEAT1_INTER2.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT1_INTER2FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT1_INTER2FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT1_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_INTER2Client<TTIMERECORDS_HEAT1_INTER2>, Prisma__TTIMERECORDS_HEAT1_INTER2Client<TTIMERECORDS_HEAT1_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_INTER2Client<TTIMERECORDS_HEAT1_INTER2 | null >, Prisma__TTIMERECORDS_HEAT1_INTER2Client<TTIMERECORDS_HEAT1_INTER2GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT1_INTER2s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_INTER2FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT1_INTER2s
     * const tTIMERECORDS_HEAT1_INTER2s = await prisma.tTIMERECORDS_HEAT1_INTER2.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT1_INTER2s
     * const tTIMERECORDS_HEAT1_INTER2s = await prisma.tTIMERECORDS_HEAT1_INTER2.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT1_INTER2WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT1_INTER2.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT1_INTER2FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT1_INTER2FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT1_INTER2>>, PrismaPromise<Array<TTIMERECORDS_HEAT1_INTER2GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT1_INTER2.
     * @param {TTIMERECORDS_HEAT1_INTER2CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT1_INTER2.
     * @example
     * // Create one TTIMERECORDS_HEAT1_INTER2
     * const TTIMERECORDS_HEAT1_INTER2 = await prisma.tTIMERECORDS_HEAT1_INTER2.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT1_INTER2
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT1_INTER2CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_INTER2CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_INTER2Client<TTIMERECORDS_HEAT1_INTER2>, Prisma__TTIMERECORDS_HEAT1_INTER2Client<TTIMERECORDS_HEAT1_INTER2GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT1_INTER2.
     * @param {TTIMERECORDS_HEAT1_INTER2DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT1_INTER2.
     * @example
     * // Delete one TTIMERECORDS_HEAT1_INTER2
     * const TTIMERECORDS_HEAT1_INTER2 = await prisma.tTIMERECORDS_HEAT1_INTER2.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT1_INTER2
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT1_INTER2DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_INTER2DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_INTER2Client<TTIMERECORDS_HEAT1_INTER2>, Prisma__TTIMERECORDS_HEAT1_INTER2Client<TTIMERECORDS_HEAT1_INTER2GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT1_INTER2.
     * @param {TTIMERECORDS_HEAT1_INTER2UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT1_INTER2.
     * @example
     * // Update one TTIMERECORDS_HEAT1_INTER2
     * const tTIMERECORDS_HEAT1_INTER2 = await prisma.tTIMERECORDS_HEAT1_INTER2.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT1_INTER2UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_INTER2UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_INTER2Client<TTIMERECORDS_HEAT1_INTER2>, Prisma__TTIMERECORDS_HEAT1_INTER2Client<TTIMERECORDS_HEAT1_INTER2GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT1_INTER2s.
     * @param {TTIMERECORDS_HEAT1_INTER2DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT1_INTER2s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT1_INTER2s
     * const { count } = await prisma.tTIMERECORDS_HEAT1_INTER2.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT1_INTER2DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT1_INTER2DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT1_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_INTER2UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT1_INTER2s
     * const tTIMERECORDS_HEAT1_INTER2 = await prisma.tTIMERECORDS_HEAT1_INTER2.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT1_INTER2UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_INTER2UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT1_INTER2.
     * @param {TTIMERECORDS_HEAT1_INTER2UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT1_INTER2.
     * @example
     * // Update or create a TTIMERECORDS_HEAT1_INTER2
     * const tTIMERECORDS_HEAT1_INTER2 = await prisma.tTIMERECORDS_HEAT1_INTER2.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT1_INTER2
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT1_INTER2 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT1_INTER2UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_INTER2UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_INTER2Client<TTIMERECORDS_HEAT1_INTER2>, Prisma__TTIMERECORDS_HEAT1_INTER2Client<TTIMERECORDS_HEAT1_INTER2GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT1_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_INTER2CountArgs} args - Arguments to filter TTIMERECORDS_HEAT1_INTER2s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT1_INTER2s
     * const count = await prisma.tTIMERECORDS_HEAT1_INTER2.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT1_INTER2s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT1_INTER2CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT1_INTER2CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT1_INTER2CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT1_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_INTER2AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT1_INTER2AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT1_INTER2AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT1_INTER2AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT1_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_INTER2GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT1_INTER2GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT1_INTER2GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT1_INTER2GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT1_INTER2GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT1_INTER2GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT1_INTER2.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT1_INTER2Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT1_INTER2 findUnique
   */
  export type TTIMERECORDS_HEAT1_INTER2FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT1_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT1_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT1_INTER2 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT1_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT1_INTER2 findFirst
   */
  export type TTIMERECORDS_HEAT1_INTER2FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT1_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT1_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT1_INTER2 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT1_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT1_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT1_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT1_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT1_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT1_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT1_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT1_INTER2s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT1_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT1_INTER2 findMany
   */
  export type TTIMERECORDS_HEAT1_INTER2FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT1_INTER2Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT1_INTER2s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT1_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT1_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT1_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT1_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT1_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT1_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT1_INTER2s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT1_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT1_INTER2 create
   */
  export type TTIMERECORDS_HEAT1_INTER2CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT1_INTER2Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT1_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT1_INTER2CreateInput, TTIMERECORDS_HEAT1_INTER2UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT1_INTER2 update
   */
  export type TTIMERECORDS_HEAT1_INTER2UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT1_INTER2Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT1_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT1_INTER2UpdateInput, TTIMERECORDS_HEAT1_INTER2UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT1_INTER2 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT1_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT1_INTER2 updateMany
   */
  export type TTIMERECORDS_HEAT1_INTER2UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT1_INTER2s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT1_INTER2UpdateManyMutationInput, TTIMERECORDS_HEAT1_INTER2UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT1_INTER2s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT1_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT1_INTER2 upsert
   */
  export type TTIMERECORDS_HEAT1_INTER2UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT1_INTER2Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT1_INTER2 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT1_INTER2WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT1_INTER2 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT1_INTER2 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT1_INTER2CreateInput, TTIMERECORDS_HEAT1_INTER2UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT1_INTER2 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT1_INTER2UpdateInput, TTIMERECORDS_HEAT1_INTER2UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT1_INTER2 delete
   */
  export type TTIMERECORDS_HEAT1_INTER2DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT1_INTER2Select | null
    /**
     * Filter which TTIMERECORDS_HEAT1_INTER2 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT1_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT1_INTER2 deleteMany
   */
  export type TTIMERECORDS_HEAT1_INTER2DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT1_INTER2s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT1_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT1_INTER2 without action
   */
  export type TTIMERECORDS_HEAT1_INTER2Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT1_INTER2Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT1_START
   */


  export type AggregateTTIMERECORDS_HEAT1_START = {
    _count: TTIMERECORDS_HEAT1_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT1_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT1_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT1_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT1_STARTMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT1_STARTAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT1_STARTSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT1_STARTMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT1_STARTMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT1_STARTCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT1_STARTAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT1_STARTSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT1_STARTMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT1_STARTMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT1_STARTCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT1_STARTAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT1_START to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT1_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT1_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT1_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT1_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT1_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT1_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT1_STARTS
    **/
    _count?: true | TTIMERECORDS_HEAT1_STARTCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT1_STARTAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT1_STARTSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT1_STARTMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT1_STARTMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT1_STARTAggregateType<T extends TTIMERECORDS_HEAT1_STARTAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT1_START]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT1_START[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT1_START[P]>
  }




  export type TTIMERECORDS_HEAT1_STARTGroupByArgs = {
    where?: TTIMERECORDS_HEAT1_STARTWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT1_STARTOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT1_STARTScalarFieldEnum>
    having?: TTIMERECORDS_HEAT1_STARTScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT1_STARTCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT1_STARTAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT1_STARTSumAggregateInputType
    _min?: TTIMERECORDS_HEAT1_STARTMinAggregateInputType
    _max?: TTIMERECORDS_HEAT1_STARTMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT1_STARTGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT1_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT1_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT1_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT1_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT1_STARTMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT1_STARTGroupByPayload<T extends TTIMERECORDS_HEAT1_STARTGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT1_STARTGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT1_STARTGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT1_STARTGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT1_STARTGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT1_STARTSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT1_STARTGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT1_STARTArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT1_START
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT1_STARTArgs | TTIMERECORDS_HEAT1_STARTFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT1_START 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT1_START ? TTIMERECORDS_HEAT1_START[P] : never
  } 
    : TTIMERECORDS_HEAT1_START
  : TTIMERECORDS_HEAT1_START


  type TTIMERECORDS_HEAT1_STARTCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT1_STARTFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT1_STARTCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT1_STARTDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT1_START that matches the filter.
     * @param {TTIMERECORDS_HEAT1_STARTFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT1_START
     * @example
     * // Get one TTIMERECORDS_HEAT1_START
     * const tTIMERECORDS_HEAT1_START = await prisma.tTIMERECORDS_HEAT1_START.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT1_STARTFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_STARTFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT1_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_STARTClient<TTIMERECORDS_HEAT1_START>, Prisma__TTIMERECORDS_HEAT1_STARTClient<TTIMERECORDS_HEAT1_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_STARTClient<TTIMERECORDS_HEAT1_START | null >, Prisma__TTIMERECORDS_HEAT1_STARTClient<TTIMERECORDS_HEAT1_STARTGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT1_START that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_STARTFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT1_START
     * @example
     * // Get one TTIMERECORDS_HEAT1_START
     * const tTIMERECORDS_HEAT1_START = await prisma.tTIMERECORDS_HEAT1_START.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT1_STARTFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT1_STARTFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT1_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_STARTClient<TTIMERECORDS_HEAT1_START>, Prisma__TTIMERECORDS_HEAT1_STARTClient<TTIMERECORDS_HEAT1_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_STARTClient<TTIMERECORDS_HEAT1_START | null >, Prisma__TTIMERECORDS_HEAT1_STARTClient<TTIMERECORDS_HEAT1_STARTGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT1_STARTS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_STARTFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT1_STARTS
     * const tTIMERECORDS_HEAT1_STARTS = await prisma.tTIMERECORDS_HEAT1_START.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT1_STARTS
     * const tTIMERECORDS_HEAT1_STARTS = await prisma.tTIMERECORDS_HEAT1_START.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT1_STARTWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT1_START.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT1_STARTFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT1_STARTFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT1_START>>, PrismaPromise<Array<TTIMERECORDS_HEAT1_STARTGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT1_START.
     * @param {TTIMERECORDS_HEAT1_STARTCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT1_START.
     * @example
     * // Create one TTIMERECORDS_HEAT1_START
     * const TTIMERECORDS_HEAT1_START = await prisma.tTIMERECORDS_HEAT1_START.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT1_START
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT1_STARTCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_STARTCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_STARTClient<TTIMERECORDS_HEAT1_START>, Prisma__TTIMERECORDS_HEAT1_STARTClient<TTIMERECORDS_HEAT1_STARTGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT1_START.
     * @param {TTIMERECORDS_HEAT1_STARTDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT1_START.
     * @example
     * // Delete one TTIMERECORDS_HEAT1_START
     * const TTIMERECORDS_HEAT1_START = await prisma.tTIMERECORDS_HEAT1_START.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT1_START
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT1_STARTDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_STARTDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_STARTClient<TTIMERECORDS_HEAT1_START>, Prisma__TTIMERECORDS_HEAT1_STARTClient<TTIMERECORDS_HEAT1_STARTGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT1_START.
     * @param {TTIMERECORDS_HEAT1_STARTUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT1_START.
     * @example
     * // Update one TTIMERECORDS_HEAT1_START
     * const tTIMERECORDS_HEAT1_START = await prisma.tTIMERECORDS_HEAT1_START.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT1_STARTUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_STARTUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_STARTClient<TTIMERECORDS_HEAT1_START>, Prisma__TTIMERECORDS_HEAT1_STARTClient<TTIMERECORDS_HEAT1_STARTGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT1_STARTS.
     * @param {TTIMERECORDS_HEAT1_STARTDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT1_STARTS to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT1_STARTS
     * const { count } = await prisma.tTIMERECORDS_HEAT1_START.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT1_STARTDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT1_STARTDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT1_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_STARTUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT1_STARTS
     * const tTIMERECORDS_HEAT1_START = await prisma.tTIMERECORDS_HEAT1_START.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT1_STARTUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_STARTUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT1_START.
     * @param {TTIMERECORDS_HEAT1_STARTUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT1_START.
     * @example
     * // Update or create a TTIMERECORDS_HEAT1_START
     * const tTIMERECORDS_HEAT1_START = await prisma.tTIMERECORDS_HEAT1_START.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT1_START
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT1_START we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT1_STARTUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT1_STARTUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT1_STARTClient<TTIMERECORDS_HEAT1_START>, Prisma__TTIMERECORDS_HEAT1_STARTClient<TTIMERECORDS_HEAT1_STARTGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT1_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_STARTCountArgs} args - Arguments to filter TTIMERECORDS_HEAT1_STARTS to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT1_STARTS
     * const count = await prisma.tTIMERECORDS_HEAT1_START.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT1_STARTS we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT1_STARTCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT1_STARTCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT1_STARTCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT1_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_STARTAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT1_STARTAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT1_STARTAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT1_STARTAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT1_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT1_STARTGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT1_STARTGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT1_STARTGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT1_STARTGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT1_STARTGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT1_STARTGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT1_START.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT1_STARTClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT1_START findUnique
   */
  export type TTIMERECORDS_HEAT1_STARTFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_START
     * 
    **/
    select?: TTIMERECORDS_HEAT1_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT1_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT1_START to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT1_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT1_START findFirst
   */
  export type TTIMERECORDS_HEAT1_STARTFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_START
     * 
    **/
    select?: TTIMERECORDS_HEAT1_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT1_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT1_START to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT1_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT1_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT1_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT1_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT1_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT1_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT1_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT1_STARTS.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT1_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT1_START findMany
   */
  export type TTIMERECORDS_HEAT1_STARTFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_START
     * 
    **/
    select?: TTIMERECORDS_HEAT1_STARTSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT1_STARTS to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT1_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT1_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT1_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT1_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT1_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT1_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT1_STARTS.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT1_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT1_START create
   */
  export type TTIMERECORDS_HEAT1_STARTCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_START
     * 
    **/
    select?: TTIMERECORDS_HEAT1_STARTSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT1_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT1_STARTCreateInput, TTIMERECORDS_HEAT1_STARTUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT1_START update
   */
  export type TTIMERECORDS_HEAT1_STARTUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_START
     * 
    **/
    select?: TTIMERECORDS_HEAT1_STARTSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT1_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT1_STARTUpdateInput, TTIMERECORDS_HEAT1_STARTUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT1_START to update.
     * 
    **/
    where: TTIMERECORDS_HEAT1_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT1_START updateMany
   */
  export type TTIMERECORDS_HEAT1_STARTUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT1_STARTS.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT1_STARTUpdateManyMutationInput, TTIMERECORDS_HEAT1_STARTUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT1_STARTS to update
     * 
    **/
    where?: TTIMERECORDS_HEAT1_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT1_START upsert
   */
  export type TTIMERECORDS_HEAT1_STARTUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_START
     * 
    **/
    select?: TTIMERECORDS_HEAT1_STARTSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT1_START to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT1_STARTWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT1_START found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT1_START with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT1_STARTCreateInput, TTIMERECORDS_HEAT1_STARTUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT1_START was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT1_STARTUpdateInput, TTIMERECORDS_HEAT1_STARTUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT1_START delete
   */
  export type TTIMERECORDS_HEAT1_STARTDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_START
     * 
    **/
    select?: TTIMERECORDS_HEAT1_STARTSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT1_START to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT1_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT1_START deleteMany
   */
  export type TTIMERECORDS_HEAT1_STARTDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT1_STARTS to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT1_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT1_START without action
   */
  export type TTIMERECORDS_HEAT1_STARTArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT1_START
     * 
    **/
    select?: TTIMERECORDS_HEAT1_STARTSelect | null
  }



  /**
   * Model TTIMERECORDS_HEAT2_FINISH
   */


  export type AggregateTTIMERECORDS_HEAT2_FINISH = {
    _count: TTIMERECORDS_HEAT2_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT2_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT2_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT2_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT2_FINISHMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT2_FINISHAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT2_FINISHSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT2_FINISHMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT2_FINISHMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT2_FINISHCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT2_FINISHAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT2_FINISHSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT2_FINISHMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT2_FINISHMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT2_FINISHCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT2_FINISHAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT2_FINISH to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT2_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT2_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT2_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT2_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT2_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT2_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT2_FINISHES
    **/
    _count?: true | TTIMERECORDS_HEAT2_FINISHCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT2_FINISHAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT2_FINISHSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT2_FINISHMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT2_FINISHMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT2_FINISHAggregateType<T extends TTIMERECORDS_HEAT2_FINISHAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT2_FINISH]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT2_FINISH[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT2_FINISH[P]>
  }




  export type TTIMERECORDS_HEAT2_FINISHGroupByArgs = {
    where?: TTIMERECORDS_HEAT2_FINISHWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT2_FINISHOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT2_FINISHScalarFieldEnum>
    having?: TTIMERECORDS_HEAT2_FINISHScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT2_FINISHCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT2_FINISHAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT2_FINISHSumAggregateInputType
    _min?: TTIMERECORDS_HEAT2_FINISHMinAggregateInputType
    _max?: TTIMERECORDS_HEAT2_FINISHMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT2_FINISHGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT2_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT2_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT2_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT2_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT2_FINISHMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT2_FINISHGroupByPayload<T extends TTIMERECORDS_HEAT2_FINISHGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT2_FINISHGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT2_FINISHGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT2_FINISHGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT2_FINISHGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT2_FINISHSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT2_FINISHGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT2_FINISHArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT2_FINISH
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT2_FINISHArgs | TTIMERECORDS_HEAT2_FINISHFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT2_FINISH 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT2_FINISH ? TTIMERECORDS_HEAT2_FINISH[P] : never
  } 
    : TTIMERECORDS_HEAT2_FINISH
  : TTIMERECORDS_HEAT2_FINISH


  type TTIMERECORDS_HEAT2_FINISHCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT2_FINISHFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT2_FINISHCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT2_FINISHDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT2_FINISH that matches the filter.
     * @param {TTIMERECORDS_HEAT2_FINISHFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT2_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT2_FINISH
     * const tTIMERECORDS_HEAT2_FINISH = await prisma.tTIMERECORDS_HEAT2_FINISH.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT2_FINISHFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_FINISHFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT2_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_FINISHClient<TTIMERECORDS_HEAT2_FINISH>, Prisma__TTIMERECORDS_HEAT2_FINISHClient<TTIMERECORDS_HEAT2_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_FINISHClient<TTIMERECORDS_HEAT2_FINISH | null >, Prisma__TTIMERECORDS_HEAT2_FINISHClient<TTIMERECORDS_HEAT2_FINISHGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT2_FINISH that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_FINISHFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT2_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT2_FINISH
     * const tTIMERECORDS_HEAT2_FINISH = await prisma.tTIMERECORDS_HEAT2_FINISH.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT2_FINISHFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT2_FINISHFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT2_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_FINISHClient<TTIMERECORDS_HEAT2_FINISH>, Prisma__TTIMERECORDS_HEAT2_FINISHClient<TTIMERECORDS_HEAT2_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_FINISHClient<TTIMERECORDS_HEAT2_FINISH | null >, Prisma__TTIMERECORDS_HEAT2_FINISHClient<TTIMERECORDS_HEAT2_FINISHGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT2_FINISHES that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_FINISHFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT2_FINISHES
     * const tTIMERECORDS_HEAT2_FINISHES = await prisma.tTIMERECORDS_HEAT2_FINISH.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT2_FINISHES
     * const tTIMERECORDS_HEAT2_FINISHES = await prisma.tTIMERECORDS_HEAT2_FINISH.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT2_FINISHWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT2_FINISH.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT2_FINISHFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT2_FINISHFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT2_FINISH>>, PrismaPromise<Array<TTIMERECORDS_HEAT2_FINISHGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT2_FINISH.
     * @param {TTIMERECORDS_HEAT2_FINISHCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT2_FINISH.
     * @example
     * // Create one TTIMERECORDS_HEAT2_FINISH
     * const TTIMERECORDS_HEAT2_FINISH = await prisma.tTIMERECORDS_HEAT2_FINISH.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT2_FINISH
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT2_FINISHCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_FINISHCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_FINISHClient<TTIMERECORDS_HEAT2_FINISH>, Prisma__TTIMERECORDS_HEAT2_FINISHClient<TTIMERECORDS_HEAT2_FINISHGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT2_FINISH.
     * @param {TTIMERECORDS_HEAT2_FINISHDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT2_FINISH.
     * @example
     * // Delete one TTIMERECORDS_HEAT2_FINISH
     * const TTIMERECORDS_HEAT2_FINISH = await prisma.tTIMERECORDS_HEAT2_FINISH.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT2_FINISH
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT2_FINISHDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_FINISHDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_FINISHClient<TTIMERECORDS_HEAT2_FINISH>, Prisma__TTIMERECORDS_HEAT2_FINISHClient<TTIMERECORDS_HEAT2_FINISHGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT2_FINISH.
     * @param {TTIMERECORDS_HEAT2_FINISHUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT2_FINISH.
     * @example
     * // Update one TTIMERECORDS_HEAT2_FINISH
     * const tTIMERECORDS_HEAT2_FINISH = await prisma.tTIMERECORDS_HEAT2_FINISH.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT2_FINISHUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_FINISHUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_FINISHClient<TTIMERECORDS_HEAT2_FINISH>, Prisma__TTIMERECORDS_HEAT2_FINISHClient<TTIMERECORDS_HEAT2_FINISHGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT2_FINISHES.
     * @param {TTIMERECORDS_HEAT2_FINISHDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT2_FINISHES to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT2_FINISHES
     * const { count } = await prisma.tTIMERECORDS_HEAT2_FINISH.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT2_FINISHDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT2_FINISHDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT2_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_FINISHUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT2_FINISHES
     * const tTIMERECORDS_HEAT2_FINISH = await prisma.tTIMERECORDS_HEAT2_FINISH.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT2_FINISHUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_FINISHUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT2_FINISH.
     * @param {TTIMERECORDS_HEAT2_FINISHUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT2_FINISH.
     * @example
     * // Update or create a TTIMERECORDS_HEAT2_FINISH
     * const tTIMERECORDS_HEAT2_FINISH = await prisma.tTIMERECORDS_HEAT2_FINISH.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT2_FINISH
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT2_FINISH we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT2_FINISHUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_FINISHUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_FINISHClient<TTIMERECORDS_HEAT2_FINISH>, Prisma__TTIMERECORDS_HEAT2_FINISHClient<TTIMERECORDS_HEAT2_FINISHGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT2_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_FINISHCountArgs} args - Arguments to filter TTIMERECORDS_HEAT2_FINISHES to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT2_FINISHES
     * const count = await prisma.tTIMERECORDS_HEAT2_FINISH.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT2_FINISHES we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT2_FINISHCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT2_FINISHCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT2_FINISHCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT2_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_FINISHAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT2_FINISHAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT2_FINISHAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT2_FINISHAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT2_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_FINISHGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT2_FINISHGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT2_FINISHGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT2_FINISHGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT2_FINISHGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT2_FINISHGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT2_FINISH.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT2_FINISHClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT2_FINISH findUnique
   */
  export type TTIMERECORDS_HEAT2_FINISHFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT2_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT2_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT2_FINISH to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT2_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT2_FINISH findFirst
   */
  export type TTIMERECORDS_HEAT2_FINISHFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT2_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT2_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT2_FINISH to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT2_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT2_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT2_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT2_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT2_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT2_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT2_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT2_FINISHES.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT2_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT2_FINISH findMany
   */
  export type TTIMERECORDS_HEAT2_FINISHFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT2_FINISHSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT2_FINISHES to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT2_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT2_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT2_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT2_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT2_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT2_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT2_FINISHES.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT2_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT2_FINISH create
   */
  export type TTIMERECORDS_HEAT2_FINISHCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT2_FINISHSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT2_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT2_FINISHCreateInput, TTIMERECORDS_HEAT2_FINISHUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT2_FINISH update
   */
  export type TTIMERECORDS_HEAT2_FINISHUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT2_FINISHSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT2_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT2_FINISHUpdateInput, TTIMERECORDS_HEAT2_FINISHUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT2_FINISH to update.
     * 
    **/
    where: TTIMERECORDS_HEAT2_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT2_FINISH updateMany
   */
  export type TTIMERECORDS_HEAT2_FINISHUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT2_FINISHES.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT2_FINISHUpdateManyMutationInput, TTIMERECORDS_HEAT2_FINISHUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT2_FINISHES to update
     * 
    **/
    where?: TTIMERECORDS_HEAT2_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT2_FINISH upsert
   */
  export type TTIMERECORDS_HEAT2_FINISHUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT2_FINISHSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT2_FINISH to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT2_FINISHWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT2_FINISH found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT2_FINISH with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT2_FINISHCreateInput, TTIMERECORDS_HEAT2_FINISHUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT2_FINISH was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT2_FINISHUpdateInput, TTIMERECORDS_HEAT2_FINISHUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT2_FINISH delete
   */
  export type TTIMERECORDS_HEAT2_FINISHDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT2_FINISHSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT2_FINISH to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT2_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT2_FINISH deleteMany
   */
  export type TTIMERECORDS_HEAT2_FINISHDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT2_FINISHES to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT2_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT2_FINISH without action
   */
  export type TTIMERECORDS_HEAT2_FINISHArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT2_FINISHSelect | null
  }



  /**
   * Model TTIMERECORDS_HEAT2_INTER1
   */


  export type AggregateTTIMERECORDS_HEAT2_INTER1 = {
    _count: TTIMERECORDS_HEAT2_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT2_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT2_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT2_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT2_INTER1MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT2_INTER1AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT2_INTER1SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT2_INTER1MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT2_INTER1MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT2_INTER1CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT2_INTER1AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT2_INTER1SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT2_INTER1MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT2_INTER1MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT2_INTER1CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT2_INTER1AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT2_INTER1 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT2_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT2_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT2_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT2_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT2_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT2_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT2_INTER1s
    **/
    _count?: true | TTIMERECORDS_HEAT2_INTER1CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT2_INTER1AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT2_INTER1SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT2_INTER1MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT2_INTER1MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT2_INTER1AggregateType<T extends TTIMERECORDS_HEAT2_INTER1AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT2_INTER1]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT2_INTER1[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT2_INTER1[P]>
  }




  export type TTIMERECORDS_HEAT2_INTER1GroupByArgs = {
    where?: TTIMERECORDS_HEAT2_INTER1WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT2_INTER1OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT2_INTER1ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT2_INTER1ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT2_INTER1CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT2_INTER1AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT2_INTER1SumAggregateInputType
    _min?: TTIMERECORDS_HEAT2_INTER1MinAggregateInputType
    _max?: TTIMERECORDS_HEAT2_INTER1MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT2_INTER1GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT2_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT2_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT2_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT2_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT2_INTER1MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT2_INTER1GroupByPayload<T extends TTIMERECORDS_HEAT2_INTER1GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT2_INTER1GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT2_INTER1GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT2_INTER1GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT2_INTER1GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT2_INTER1Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT2_INTER1GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT2_INTER1Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT2_INTER1
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT2_INTER1Args | TTIMERECORDS_HEAT2_INTER1FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT2_INTER1 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT2_INTER1 ? TTIMERECORDS_HEAT2_INTER1[P] : never
  } 
    : TTIMERECORDS_HEAT2_INTER1
  : TTIMERECORDS_HEAT2_INTER1


  type TTIMERECORDS_HEAT2_INTER1CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT2_INTER1FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT2_INTER1CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT2_INTER1Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT2_INTER1 that matches the filter.
     * @param {TTIMERECORDS_HEAT2_INTER1FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT2_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT2_INTER1
     * const tTIMERECORDS_HEAT2_INTER1 = await prisma.tTIMERECORDS_HEAT2_INTER1.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT2_INTER1FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_INTER1FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT2_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_INTER1Client<TTIMERECORDS_HEAT2_INTER1>, Prisma__TTIMERECORDS_HEAT2_INTER1Client<TTIMERECORDS_HEAT2_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_INTER1Client<TTIMERECORDS_HEAT2_INTER1 | null >, Prisma__TTIMERECORDS_HEAT2_INTER1Client<TTIMERECORDS_HEAT2_INTER1GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT2_INTER1 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_INTER1FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT2_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT2_INTER1
     * const tTIMERECORDS_HEAT2_INTER1 = await prisma.tTIMERECORDS_HEAT2_INTER1.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT2_INTER1FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT2_INTER1FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT2_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_INTER1Client<TTIMERECORDS_HEAT2_INTER1>, Prisma__TTIMERECORDS_HEAT2_INTER1Client<TTIMERECORDS_HEAT2_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_INTER1Client<TTIMERECORDS_HEAT2_INTER1 | null >, Prisma__TTIMERECORDS_HEAT2_INTER1Client<TTIMERECORDS_HEAT2_INTER1GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT2_INTER1s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_INTER1FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT2_INTER1s
     * const tTIMERECORDS_HEAT2_INTER1s = await prisma.tTIMERECORDS_HEAT2_INTER1.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT2_INTER1s
     * const tTIMERECORDS_HEAT2_INTER1s = await prisma.tTIMERECORDS_HEAT2_INTER1.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT2_INTER1WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT2_INTER1.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT2_INTER1FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT2_INTER1FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT2_INTER1>>, PrismaPromise<Array<TTIMERECORDS_HEAT2_INTER1GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT2_INTER1.
     * @param {TTIMERECORDS_HEAT2_INTER1CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT2_INTER1.
     * @example
     * // Create one TTIMERECORDS_HEAT2_INTER1
     * const TTIMERECORDS_HEAT2_INTER1 = await prisma.tTIMERECORDS_HEAT2_INTER1.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT2_INTER1
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT2_INTER1CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_INTER1CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_INTER1Client<TTIMERECORDS_HEAT2_INTER1>, Prisma__TTIMERECORDS_HEAT2_INTER1Client<TTIMERECORDS_HEAT2_INTER1GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT2_INTER1.
     * @param {TTIMERECORDS_HEAT2_INTER1DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT2_INTER1.
     * @example
     * // Delete one TTIMERECORDS_HEAT2_INTER1
     * const TTIMERECORDS_HEAT2_INTER1 = await prisma.tTIMERECORDS_HEAT2_INTER1.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT2_INTER1
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT2_INTER1DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_INTER1DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_INTER1Client<TTIMERECORDS_HEAT2_INTER1>, Prisma__TTIMERECORDS_HEAT2_INTER1Client<TTIMERECORDS_HEAT2_INTER1GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT2_INTER1.
     * @param {TTIMERECORDS_HEAT2_INTER1UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT2_INTER1.
     * @example
     * // Update one TTIMERECORDS_HEAT2_INTER1
     * const tTIMERECORDS_HEAT2_INTER1 = await prisma.tTIMERECORDS_HEAT2_INTER1.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT2_INTER1UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_INTER1UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_INTER1Client<TTIMERECORDS_HEAT2_INTER1>, Prisma__TTIMERECORDS_HEAT2_INTER1Client<TTIMERECORDS_HEAT2_INTER1GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT2_INTER1s.
     * @param {TTIMERECORDS_HEAT2_INTER1DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT2_INTER1s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT2_INTER1s
     * const { count } = await prisma.tTIMERECORDS_HEAT2_INTER1.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT2_INTER1DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT2_INTER1DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT2_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_INTER1UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT2_INTER1s
     * const tTIMERECORDS_HEAT2_INTER1 = await prisma.tTIMERECORDS_HEAT2_INTER1.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT2_INTER1UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_INTER1UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT2_INTER1.
     * @param {TTIMERECORDS_HEAT2_INTER1UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT2_INTER1.
     * @example
     * // Update or create a TTIMERECORDS_HEAT2_INTER1
     * const tTIMERECORDS_HEAT2_INTER1 = await prisma.tTIMERECORDS_HEAT2_INTER1.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT2_INTER1
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT2_INTER1 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT2_INTER1UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_INTER1UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_INTER1Client<TTIMERECORDS_HEAT2_INTER1>, Prisma__TTIMERECORDS_HEAT2_INTER1Client<TTIMERECORDS_HEAT2_INTER1GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT2_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_INTER1CountArgs} args - Arguments to filter TTIMERECORDS_HEAT2_INTER1s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT2_INTER1s
     * const count = await prisma.tTIMERECORDS_HEAT2_INTER1.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT2_INTER1s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT2_INTER1CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT2_INTER1CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT2_INTER1CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT2_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_INTER1AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT2_INTER1AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT2_INTER1AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT2_INTER1AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT2_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_INTER1GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT2_INTER1GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT2_INTER1GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT2_INTER1GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT2_INTER1GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT2_INTER1GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT2_INTER1.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT2_INTER1Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT2_INTER1 findUnique
   */
  export type TTIMERECORDS_HEAT2_INTER1FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT2_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT2_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT2_INTER1 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT2_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT2_INTER1 findFirst
   */
  export type TTIMERECORDS_HEAT2_INTER1FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT2_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT2_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT2_INTER1 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT2_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT2_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT2_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT2_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT2_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT2_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT2_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT2_INTER1s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT2_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT2_INTER1 findMany
   */
  export type TTIMERECORDS_HEAT2_INTER1FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT2_INTER1Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT2_INTER1s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT2_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT2_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT2_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT2_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT2_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT2_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT2_INTER1s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT2_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT2_INTER1 create
   */
  export type TTIMERECORDS_HEAT2_INTER1CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT2_INTER1Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT2_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT2_INTER1CreateInput, TTIMERECORDS_HEAT2_INTER1UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT2_INTER1 update
   */
  export type TTIMERECORDS_HEAT2_INTER1UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT2_INTER1Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT2_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT2_INTER1UpdateInput, TTIMERECORDS_HEAT2_INTER1UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT2_INTER1 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT2_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT2_INTER1 updateMany
   */
  export type TTIMERECORDS_HEAT2_INTER1UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT2_INTER1s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT2_INTER1UpdateManyMutationInput, TTIMERECORDS_HEAT2_INTER1UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT2_INTER1s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT2_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT2_INTER1 upsert
   */
  export type TTIMERECORDS_HEAT2_INTER1UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT2_INTER1Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT2_INTER1 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT2_INTER1WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT2_INTER1 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT2_INTER1 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT2_INTER1CreateInput, TTIMERECORDS_HEAT2_INTER1UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT2_INTER1 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT2_INTER1UpdateInput, TTIMERECORDS_HEAT2_INTER1UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT2_INTER1 delete
   */
  export type TTIMERECORDS_HEAT2_INTER1DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT2_INTER1Select | null
    /**
     * Filter which TTIMERECORDS_HEAT2_INTER1 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT2_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT2_INTER1 deleteMany
   */
  export type TTIMERECORDS_HEAT2_INTER1DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT2_INTER1s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT2_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT2_INTER1 without action
   */
  export type TTIMERECORDS_HEAT2_INTER1Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT2_INTER1Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT2_INTER2
   */


  export type AggregateTTIMERECORDS_HEAT2_INTER2 = {
    _count: TTIMERECORDS_HEAT2_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT2_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT2_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT2_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT2_INTER2MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT2_INTER2AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT2_INTER2SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT2_INTER2MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT2_INTER2MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT2_INTER2CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT2_INTER2AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT2_INTER2SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT2_INTER2MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT2_INTER2MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT2_INTER2CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT2_INTER2AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT2_INTER2 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT2_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT2_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT2_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT2_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT2_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT2_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT2_INTER2s
    **/
    _count?: true | TTIMERECORDS_HEAT2_INTER2CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT2_INTER2AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT2_INTER2SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT2_INTER2MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT2_INTER2MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT2_INTER2AggregateType<T extends TTIMERECORDS_HEAT2_INTER2AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT2_INTER2]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT2_INTER2[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT2_INTER2[P]>
  }




  export type TTIMERECORDS_HEAT2_INTER2GroupByArgs = {
    where?: TTIMERECORDS_HEAT2_INTER2WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT2_INTER2OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT2_INTER2ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT2_INTER2ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT2_INTER2CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT2_INTER2AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT2_INTER2SumAggregateInputType
    _min?: TTIMERECORDS_HEAT2_INTER2MinAggregateInputType
    _max?: TTIMERECORDS_HEAT2_INTER2MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT2_INTER2GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT2_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT2_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT2_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT2_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT2_INTER2MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT2_INTER2GroupByPayload<T extends TTIMERECORDS_HEAT2_INTER2GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT2_INTER2GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT2_INTER2GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT2_INTER2GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT2_INTER2GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT2_INTER2Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT2_INTER2GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT2_INTER2Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT2_INTER2
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT2_INTER2Args | TTIMERECORDS_HEAT2_INTER2FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT2_INTER2 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT2_INTER2 ? TTIMERECORDS_HEAT2_INTER2[P] : never
  } 
    : TTIMERECORDS_HEAT2_INTER2
  : TTIMERECORDS_HEAT2_INTER2


  type TTIMERECORDS_HEAT2_INTER2CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT2_INTER2FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT2_INTER2CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT2_INTER2Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT2_INTER2 that matches the filter.
     * @param {TTIMERECORDS_HEAT2_INTER2FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT2_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT2_INTER2
     * const tTIMERECORDS_HEAT2_INTER2 = await prisma.tTIMERECORDS_HEAT2_INTER2.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT2_INTER2FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_INTER2FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT2_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_INTER2Client<TTIMERECORDS_HEAT2_INTER2>, Prisma__TTIMERECORDS_HEAT2_INTER2Client<TTIMERECORDS_HEAT2_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_INTER2Client<TTIMERECORDS_HEAT2_INTER2 | null >, Prisma__TTIMERECORDS_HEAT2_INTER2Client<TTIMERECORDS_HEAT2_INTER2GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT2_INTER2 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_INTER2FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT2_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT2_INTER2
     * const tTIMERECORDS_HEAT2_INTER2 = await prisma.tTIMERECORDS_HEAT2_INTER2.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT2_INTER2FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT2_INTER2FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT2_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_INTER2Client<TTIMERECORDS_HEAT2_INTER2>, Prisma__TTIMERECORDS_HEAT2_INTER2Client<TTIMERECORDS_HEAT2_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_INTER2Client<TTIMERECORDS_HEAT2_INTER2 | null >, Prisma__TTIMERECORDS_HEAT2_INTER2Client<TTIMERECORDS_HEAT2_INTER2GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT2_INTER2s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_INTER2FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT2_INTER2s
     * const tTIMERECORDS_HEAT2_INTER2s = await prisma.tTIMERECORDS_HEAT2_INTER2.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT2_INTER2s
     * const tTIMERECORDS_HEAT2_INTER2s = await prisma.tTIMERECORDS_HEAT2_INTER2.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT2_INTER2WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT2_INTER2.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT2_INTER2FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT2_INTER2FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT2_INTER2>>, PrismaPromise<Array<TTIMERECORDS_HEAT2_INTER2GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT2_INTER2.
     * @param {TTIMERECORDS_HEAT2_INTER2CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT2_INTER2.
     * @example
     * // Create one TTIMERECORDS_HEAT2_INTER2
     * const TTIMERECORDS_HEAT2_INTER2 = await prisma.tTIMERECORDS_HEAT2_INTER2.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT2_INTER2
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT2_INTER2CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_INTER2CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_INTER2Client<TTIMERECORDS_HEAT2_INTER2>, Prisma__TTIMERECORDS_HEAT2_INTER2Client<TTIMERECORDS_HEAT2_INTER2GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT2_INTER2.
     * @param {TTIMERECORDS_HEAT2_INTER2DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT2_INTER2.
     * @example
     * // Delete one TTIMERECORDS_HEAT2_INTER2
     * const TTIMERECORDS_HEAT2_INTER2 = await prisma.tTIMERECORDS_HEAT2_INTER2.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT2_INTER2
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT2_INTER2DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_INTER2DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_INTER2Client<TTIMERECORDS_HEAT2_INTER2>, Prisma__TTIMERECORDS_HEAT2_INTER2Client<TTIMERECORDS_HEAT2_INTER2GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT2_INTER2.
     * @param {TTIMERECORDS_HEAT2_INTER2UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT2_INTER2.
     * @example
     * // Update one TTIMERECORDS_HEAT2_INTER2
     * const tTIMERECORDS_HEAT2_INTER2 = await prisma.tTIMERECORDS_HEAT2_INTER2.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT2_INTER2UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_INTER2UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_INTER2Client<TTIMERECORDS_HEAT2_INTER2>, Prisma__TTIMERECORDS_HEAT2_INTER2Client<TTIMERECORDS_HEAT2_INTER2GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT2_INTER2s.
     * @param {TTIMERECORDS_HEAT2_INTER2DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT2_INTER2s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT2_INTER2s
     * const { count } = await prisma.tTIMERECORDS_HEAT2_INTER2.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT2_INTER2DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT2_INTER2DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT2_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_INTER2UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT2_INTER2s
     * const tTIMERECORDS_HEAT2_INTER2 = await prisma.tTIMERECORDS_HEAT2_INTER2.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT2_INTER2UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_INTER2UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT2_INTER2.
     * @param {TTIMERECORDS_HEAT2_INTER2UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT2_INTER2.
     * @example
     * // Update or create a TTIMERECORDS_HEAT2_INTER2
     * const tTIMERECORDS_HEAT2_INTER2 = await prisma.tTIMERECORDS_HEAT2_INTER2.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT2_INTER2
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT2_INTER2 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT2_INTER2UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_INTER2UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_INTER2Client<TTIMERECORDS_HEAT2_INTER2>, Prisma__TTIMERECORDS_HEAT2_INTER2Client<TTIMERECORDS_HEAT2_INTER2GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT2_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_INTER2CountArgs} args - Arguments to filter TTIMERECORDS_HEAT2_INTER2s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT2_INTER2s
     * const count = await prisma.tTIMERECORDS_HEAT2_INTER2.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT2_INTER2s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT2_INTER2CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT2_INTER2CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT2_INTER2CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT2_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_INTER2AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT2_INTER2AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT2_INTER2AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT2_INTER2AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT2_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_INTER2GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT2_INTER2GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT2_INTER2GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT2_INTER2GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT2_INTER2GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT2_INTER2GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT2_INTER2.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT2_INTER2Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT2_INTER2 findUnique
   */
  export type TTIMERECORDS_HEAT2_INTER2FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT2_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT2_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT2_INTER2 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT2_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT2_INTER2 findFirst
   */
  export type TTIMERECORDS_HEAT2_INTER2FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT2_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT2_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT2_INTER2 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT2_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT2_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT2_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT2_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT2_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT2_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT2_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT2_INTER2s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT2_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT2_INTER2 findMany
   */
  export type TTIMERECORDS_HEAT2_INTER2FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT2_INTER2Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT2_INTER2s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT2_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT2_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT2_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT2_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT2_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT2_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT2_INTER2s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT2_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT2_INTER2 create
   */
  export type TTIMERECORDS_HEAT2_INTER2CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT2_INTER2Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT2_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT2_INTER2CreateInput, TTIMERECORDS_HEAT2_INTER2UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT2_INTER2 update
   */
  export type TTIMERECORDS_HEAT2_INTER2UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT2_INTER2Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT2_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT2_INTER2UpdateInput, TTIMERECORDS_HEAT2_INTER2UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT2_INTER2 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT2_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT2_INTER2 updateMany
   */
  export type TTIMERECORDS_HEAT2_INTER2UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT2_INTER2s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT2_INTER2UpdateManyMutationInput, TTIMERECORDS_HEAT2_INTER2UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT2_INTER2s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT2_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT2_INTER2 upsert
   */
  export type TTIMERECORDS_HEAT2_INTER2UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT2_INTER2Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT2_INTER2 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT2_INTER2WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT2_INTER2 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT2_INTER2 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT2_INTER2CreateInput, TTIMERECORDS_HEAT2_INTER2UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT2_INTER2 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT2_INTER2UpdateInput, TTIMERECORDS_HEAT2_INTER2UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT2_INTER2 delete
   */
  export type TTIMERECORDS_HEAT2_INTER2DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT2_INTER2Select | null
    /**
     * Filter which TTIMERECORDS_HEAT2_INTER2 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT2_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT2_INTER2 deleteMany
   */
  export type TTIMERECORDS_HEAT2_INTER2DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT2_INTER2s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT2_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT2_INTER2 without action
   */
  export type TTIMERECORDS_HEAT2_INTER2Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT2_INTER2Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT2_START
   */


  export type AggregateTTIMERECORDS_HEAT2_START = {
    _count: TTIMERECORDS_HEAT2_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT2_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT2_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT2_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT2_STARTMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT2_STARTAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT2_STARTSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT2_STARTMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT2_STARTMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT2_STARTCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT2_STARTAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT2_STARTSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT2_STARTMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT2_STARTMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT2_STARTCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT2_STARTAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT2_START to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT2_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT2_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT2_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT2_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT2_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT2_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT2_STARTS
    **/
    _count?: true | TTIMERECORDS_HEAT2_STARTCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT2_STARTAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT2_STARTSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT2_STARTMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT2_STARTMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT2_STARTAggregateType<T extends TTIMERECORDS_HEAT2_STARTAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT2_START]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT2_START[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT2_START[P]>
  }




  export type TTIMERECORDS_HEAT2_STARTGroupByArgs = {
    where?: TTIMERECORDS_HEAT2_STARTWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT2_STARTOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT2_STARTScalarFieldEnum>
    having?: TTIMERECORDS_HEAT2_STARTScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT2_STARTCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT2_STARTAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT2_STARTSumAggregateInputType
    _min?: TTIMERECORDS_HEAT2_STARTMinAggregateInputType
    _max?: TTIMERECORDS_HEAT2_STARTMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT2_STARTGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT2_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT2_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT2_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT2_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT2_STARTMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT2_STARTGroupByPayload<T extends TTIMERECORDS_HEAT2_STARTGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT2_STARTGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT2_STARTGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT2_STARTGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT2_STARTGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT2_STARTSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT2_STARTGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT2_STARTArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT2_START
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT2_STARTArgs | TTIMERECORDS_HEAT2_STARTFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT2_START 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT2_START ? TTIMERECORDS_HEAT2_START[P] : never
  } 
    : TTIMERECORDS_HEAT2_START
  : TTIMERECORDS_HEAT2_START


  type TTIMERECORDS_HEAT2_STARTCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT2_STARTFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT2_STARTCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT2_STARTDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT2_START that matches the filter.
     * @param {TTIMERECORDS_HEAT2_STARTFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT2_START
     * @example
     * // Get one TTIMERECORDS_HEAT2_START
     * const tTIMERECORDS_HEAT2_START = await prisma.tTIMERECORDS_HEAT2_START.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT2_STARTFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_STARTFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT2_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_STARTClient<TTIMERECORDS_HEAT2_START>, Prisma__TTIMERECORDS_HEAT2_STARTClient<TTIMERECORDS_HEAT2_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_STARTClient<TTIMERECORDS_HEAT2_START | null >, Prisma__TTIMERECORDS_HEAT2_STARTClient<TTIMERECORDS_HEAT2_STARTGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT2_START that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_STARTFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT2_START
     * @example
     * // Get one TTIMERECORDS_HEAT2_START
     * const tTIMERECORDS_HEAT2_START = await prisma.tTIMERECORDS_HEAT2_START.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT2_STARTFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT2_STARTFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT2_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_STARTClient<TTIMERECORDS_HEAT2_START>, Prisma__TTIMERECORDS_HEAT2_STARTClient<TTIMERECORDS_HEAT2_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_STARTClient<TTIMERECORDS_HEAT2_START | null >, Prisma__TTIMERECORDS_HEAT2_STARTClient<TTIMERECORDS_HEAT2_STARTGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT2_STARTS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_STARTFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT2_STARTS
     * const tTIMERECORDS_HEAT2_STARTS = await prisma.tTIMERECORDS_HEAT2_START.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT2_STARTS
     * const tTIMERECORDS_HEAT2_STARTS = await prisma.tTIMERECORDS_HEAT2_START.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT2_STARTWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT2_START.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT2_STARTFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT2_STARTFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT2_START>>, PrismaPromise<Array<TTIMERECORDS_HEAT2_STARTGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT2_START.
     * @param {TTIMERECORDS_HEAT2_STARTCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT2_START.
     * @example
     * // Create one TTIMERECORDS_HEAT2_START
     * const TTIMERECORDS_HEAT2_START = await prisma.tTIMERECORDS_HEAT2_START.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT2_START
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT2_STARTCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_STARTCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_STARTClient<TTIMERECORDS_HEAT2_START>, Prisma__TTIMERECORDS_HEAT2_STARTClient<TTIMERECORDS_HEAT2_STARTGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT2_START.
     * @param {TTIMERECORDS_HEAT2_STARTDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT2_START.
     * @example
     * // Delete one TTIMERECORDS_HEAT2_START
     * const TTIMERECORDS_HEAT2_START = await prisma.tTIMERECORDS_HEAT2_START.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT2_START
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT2_STARTDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_STARTDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_STARTClient<TTIMERECORDS_HEAT2_START>, Prisma__TTIMERECORDS_HEAT2_STARTClient<TTIMERECORDS_HEAT2_STARTGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT2_START.
     * @param {TTIMERECORDS_HEAT2_STARTUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT2_START.
     * @example
     * // Update one TTIMERECORDS_HEAT2_START
     * const tTIMERECORDS_HEAT2_START = await prisma.tTIMERECORDS_HEAT2_START.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT2_STARTUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_STARTUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_STARTClient<TTIMERECORDS_HEAT2_START>, Prisma__TTIMERECORDS_HEAT2_STARTClient<TTIMERECORDS_HEAT2_STARTGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT2_STARTS.
     * @param {TTIMERECORDS_HEAT2_STARTDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT2_STARTS to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT2_STARTS
     * const { count } = await prisma.tTIMERECORDS_HEAT2_START.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT2_STARTDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT2_STARTDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT2_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_STARTUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT2_STARTS
     * const tTIMERECORDS_HEAT2_START = await prisma.tTIMERECORDS_HEAT2_START.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT2_STARTUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_STARTUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT2_START.
     * @param {TTIMERECORDS_HEAT2_STARTUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT2_START.
     * @example
     * // Update or create a TTIMERECORDS_HEAT2_START
     * const tTIMERECORDS_HEAT2_START = await prisma.tTIMERECORDS_HEAT2_START.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT2_START
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT2_START we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT2_STARTUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT2_STARTUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT2_STARTClient<TTIMERECORDS_HEAT2_START>, Prisma__TTIMERECORDS_HEAT2_STARTClient<TTIMERECORDS_HEAT2_STARTGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT2_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_STARTCountArgs} args - Arguments to filter TTIMERECORDS_HEAT2_STARTS to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT2_STARTS
     * const count = await prisma.tTIMERECORDS_HEAT2_START.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT2_STARTS we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT2_STARTCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT2_STARTCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT2_STARTCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT2_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_STARTAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT2_STARTAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT2_STARTAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT2_STARTAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT2_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT2_STARTGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT2_STARTGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT2_STARTGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT2_STARTGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT2_STARTGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT2_STARTGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT2_START.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT2_STARTClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT2_START findUnique
   */
  export type TTIMERECORDS_HEAT2_STARTFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_START
     * 
    **/
    select?: TTIMERECORDS_HEAT2_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT2_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT2_START to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT2_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT2_START findFirst
   */
  export type TTIMERECORDS_HEAT2_STARTFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_START
     * 
    **/
    select?: TTIMERECORDS_HEAT2_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT2_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT2_START to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT2_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT2_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT2_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT2_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT2_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT2_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT2_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT2_STARTS.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT2_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT2_START findMany
   */
  export type TTIMERECORDS_HEAT2_STARTFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_START
     * 
    **/
    select?: TTIMERECORDS_HEAT2_STARTSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT2_STARTS to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT2_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT2_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT2_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT2_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT2_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT2_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT2_STARTS.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT2_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT2_START create
   */
  export type TTIMERECORDS_HEAT2_STARTCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_START
     * 
    **/
    select?: TTIMERECORDS_HEAT2_STARTSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT2_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT2_STARTCreateInput, TTIMERECORDS_HEAT2_STARTUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT2_START update
   */
  export type TTIMERECORDS_HEAT2_STARTUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_START
     * 
    **/
    select?: TTIMERECORDS_HEAT2_STARTSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT2_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT2_STARTUpdateInput, TTIMERECORDS_HEAT2_STARTUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT2_START to update.
     * 
    **/
    where: TTIMERECORDS_HEAT2_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT2_START updateMany
   */
  export type TTIMERECORDS_HEAT2_STARTUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT2_STARTS.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT2_STARTUpdateManyMutationInput, TTIMERECORDS_HEAT2_STARTUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT2_STARTS to update
     * 
    **/
    where?: TTIMERECORDS_HEAT2_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT2_START upsert
   */
  export type TTIMERECORDS_HEAT2_STARTUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_START
     * 
    **/
    select?: TTIMERECORDS_HEAT2_STARTSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT2_START to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT2_STARTWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT2_START found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT2_START with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT2_STARTCreateInput, TTIMERECORDS_HEAT2_STARTUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT2_START was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT2_STARTUpdateInput, TTIMERECORDS_HEAT2_STARTUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT2_START delete
   */
  export type TTIMERECORDS_HEAT2_STARTDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_START
     * 
    **/
    select?: TTIMERECORDS_HEAT2_STARTSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT2_START to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT2_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT2_START deleteMany
   */
  export type TTIMERECORDS_HEAT2_STARTDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT2_STARTS to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT2_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT2_START without action
   */
  export type TTIMERECORDS_HEAT2_STARTArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT2_START
     * 
    **/
    select?: TTIMERECORDS_HEAT2_STARTSelect | null
  }



  /**
   * Model TTIMERECORDS_HEAT3_FINISH
   */


  export type AggregateTTIMERECORDS_HEAT3_FINISH = {
    _count: TTIMERECORDS_HEAT3_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT3_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT3_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT3_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT3_FINISHMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT3_FINISHAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT3_FINISHSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT3_FINISHMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT3_FINISHMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT3_FINISHCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT3_FINISHAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT3_FINISHSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT3_FINISHMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT3_FINISHMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT3_FINISHCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT3_FINISHAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT3_FINISH to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT3_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT3_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT3_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT3_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT3_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT3_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT3_FINISHES
    **/
    _count?: true | TTIMERECORDS_HEAT3_FINISHCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT3_FINISHAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT3_FINISHSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT3_FINISHMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT3_FINISHMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT3_FINISHAggregateType<T extends TTIMERECORDS_HEAT3_FINISHAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT3_FINISH]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT3_FINISH[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT3_FINISH[P]>
  }




  export type TTIMERECORDS_HEAT3_FINISHGroupByArgs = {
    where?: TTIMERECORDS_HEAT3_FINISHWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT3_FINISHOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT3_FINISHScalarFieldEnum>
    having?: TTIMERECORDS_HEAT3_FINISHScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT3_FINISHCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT3_FINISHAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT3_FINISHSumAggregateInputType
    _min?: TTIMERECORDS_HEAT3_FINISHMinAggregateInputType
    _max?: TTIMERECORDS_HEAT3_FINISHMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT3_FINISHGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT3_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT3_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT3_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT3_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT3_FINISHMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT3_FINISHGroupByPayload<T extends TTIMERECORDS_HEAT3_FINISHGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT3_FINISHGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT3_FINISHGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT3_FINISHGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT3_FINISHGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT3_FINISHSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT3_FINISHGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT3_FINISHArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT3_FINISH
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT3_FINISHArgs | TTIMERECORDS_HEAT3_FINISHFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT3_FINISH 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT3_FINISH ? TTIMERECORDS_HEAT3_FINISH[P] : never
  } 
    : TTIMERECORDS_HEAT3_FINISH
  : TTIMERECORDS_HEAT3_FINISH


  type TTIMERECORDS_HEAT3_FINISHCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT3_FINISHFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT3_FINISHCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT3_FINISHDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT3_FINISH that matches the filter.
     * @param {TTIMERECORDS_HEAT3_FINISHFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT3_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT3_FINISH
     * const tTIMERECORDS_HEAT3_FINISH = await prisma.tTIMERECORDS_HEAT3_FINISH.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT3_FINISHFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_FINISHFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT3_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_FINISHClient<TTIMERECORDS_HEAT3_FINISH>, Prisma__TTIMERECORDS_HEAT3_FINISHClient<TTIMERECORDS_HEAT3_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_FINISHClient<TTIMERECORDS_HEAT3_FINISH | null >, Prisma__TTIMERECORDS_HEAT3_FINISHClient<TTIMERECORDS_HEAT3_FINISHGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT3_FINISH that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_FINISHFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT3_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT3_FINISH
     * const tTIMERECORDS_HEAT3_FINISH = await prisma.tTIMERECORDS_HEAT3_FINISH.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT3_FINISHFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT3_FINISHFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT3_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_FINISHClient<TTIMERECORDS_HEAT3_FINISH>, Prisma__TTIMERECORDS_HEAT3_FINISHClient<TTIMERECORDS_HEAT3_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_FINISHClient<TTIMERECORDS_HEAT3_FINISH | null >, Prisma__TTIMERECORDS_HEAT3_FINISHClient<TTIMERECORDS_HEAT3_FINISHGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT3_FINISHES that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_FINISHFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT3_FINISHES
     * const tTIMERECORDS_HEAT3_FINISHES = await prisma.tTIMERECORDS_HEAT3_FINISH.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT3_FINISHES
     * const tTIMERECORDS_HEAT3_FINISHES = await prisma.tTIMERECORDS_HEAT3_FINISH.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT3_FINISHWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT3_FINISH.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT3_FINISHFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT3_FINISHFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT3_FINISH>>, PrismaPromise<Array<TTIMERECORDS_HEAT3_FINISHGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT3_FINISH.
     * @param {TTIMERECORDS_HEAT3_FINISHCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT3_FINISH.
     * @example
     * // Create one TTIMERECORDS_HEAT3_FINISH
     * const TTIMERECORDS_HEAT3_FINISH = await prisma.tTIMERECORDS_HEAT3_FINISH.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT3_FINISH
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT3_FINISHCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_FINISHCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_FINISHClient<TTIMERECORDS_HEAT3_FINISH>, Prisma__TTIMERECORDS_HEAT3_FINISHClient<TTIMERECORDS_HEAT3_FINISHGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT3_FINISH.
     * @param {TTIMERECORDS_HEAT3_FINISHDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT3_FINISH.
     * @example
     * // Delete one TTIMERECORDS_HEAT3_FINISH
     * const TTIMERECORDS_HEAT3_FINISH = await prisma.tTIMERECORDS_HEAT3_FINISH.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT3_FINISH
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT3_FINISHDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_FINISHDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_FINISHClient<TTIMERECORDS_HEAT3_FINISH>, Prisma__TTIMERECORDS_HEAT3_FINISHClient<TTIMERECORDS_HEAT3_FINISHGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT3_FINISH.
     * @param {TTIMERECORDS_HEAT3_FINISHUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT3_FINISH.
     * @example
     * // Update one TTIMERECORDS_HEAT3_FINISH
     * const tTIMERECORDS_HEAT3_FINISH = await prisma.tTIMERECORDS_HEAT3_FINISH.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT3_FINISHUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_FINISHUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_FINISHClient<TTIMERECORDS_HEAT3_FINISH>, Prisma__TTIMERECORDS_HEAT3_FINISHClient<TTIMERECORDS_HEAT3_FINISHGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT3_FINISHES.
     * @param {TTIMERECORDS_HEAT3_FINISHDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT3_FINISHES to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT3_FINISHES
     * const { count } = await prisma.tTIMERECORDS_HEAT3_FINISH.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT3_FINISHDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT3_FINISHDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT3_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_FINISHUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT3_FINISHES
     * const tTIMERECORDS_HEAT3_FINISH = await prisma.tTIMERECORDS_HEAT3_FINISH.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT3_FINISHUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_FINISHUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT3_FINISH.
     * @param {TTIMERECORDS_HEAT3_FINISHUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT3_FINISH.
     * @example
     * // Update or create a TTIMERECORDS_HEAT3_FINISH
     * const tTIMERECORDS_HEAT3_FINISH = await prisma.tTIMERECORDS_HEAT3_FINISH.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT3_FINISH
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT3_FINISH we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT3_FINISHUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_FINISHUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_FINISHClient<TTIMERECORDS_HEAT3_FINISH>, Prisma__TTIMERECORDS_HEAT3_FINISHClient<TTIMERECORDS_HEAT3_FINISHGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT3_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_FINISHCountArgs} args - Arguments to filter TTIMERECORDS_HEAT3_FINISHES to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT3_FINISHES
     * const count = await prisma.tTIMERECORDS_HEAT3_FINISH.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT3_FINISHES we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT3_FINISHCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT3_FINISHCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT3_FINISHCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT3_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_FINISHAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT3_FINISHAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT3_FINISHAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT3_FINISHAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT3_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_FINISHGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT3_FINISHGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT3_FINISHGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT3_FINISHGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT3_FINISHGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT3_FINISHGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT3_FINISH.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT3_FINISHClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT3_FINISH findUnique
   */
  export type TTIMERECORDS_HEAT3_FINISHFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT3_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT3_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT3_FINISH to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT3_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT3_FINISH findFirst
   */
  export type TTIMERECORDS_HEAT3_FINISHFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT3_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT3_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT3_FINISH to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT3_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT3_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT3_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT3_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT3_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT3_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT3_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT3_FINISHES.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT3_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT3_FINISH findMany
   */
  export type TTIMERECORDS_HEAT3_FINISHFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT3_FINISHSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT3_FINISHES to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT3_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT3_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT3_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT3_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT3_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT3_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT3_FINISHES.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT3_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT3_FINISH create
   */
  export type TTIMERECORDS_HEAT3_FINISHCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT3_FINISHSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT3_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT3_FINISHCreateInput, TTIMERECORDS_HEAT3_FINISHUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT3_FINISH update
   */
  export type TTIMERECORDS_HEAT3_FINISHUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT3_FINISHSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT3_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT3_FINISHUpdateInput, TTIMERECORDS_HEAT3_FINISHUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT3_FINISH to update.
     * 
    **/
    where: TTIMERECORDS_HEAT3_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT3_FINISH updateMany
   */
  export type TTIMERECORDS_HEAT3_FINISHUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT3_FINISHES.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT3_FINISHUpdateManyMutationInput, TTIMERECORDS_HEAT3_FINISHUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT3_FINISHES to update
     * 
    **/
    where?: TTIMERECORDS_HEAT3_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT3_FINISH upsert
   */
  export type TTIMERECORDS_HEAT3_FINISHUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT3_FINISHSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT3_FINISH to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT3_FINISHWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT3_FINISH found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT3_FINISH with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT3_FINISHCreateInput, TTIMERECORDS_HEAT3_FINISHUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT3_FINISH was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT3_FINISHUpdateInput, TTIMERECORDS_HEAT3_FINISHUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT3_FINISH delete
   */
  export type TTIMERECORDS_HEAT3_FINISHDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT3_FINISHSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT3_FINISH to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT3_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT3_FINISH deleteMany
   */
  export type TTIMERECORDS_HEAT3_FINISHDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT3_FINISHES to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT3_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT3_FINISH without action
   */
  export type TTIMERECORDS_HEAT3_FINISHArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT3_FINISHSelect | null
  }



  /**
   * Model TTIMERECORDS_HEAT3_INTER1
   */


  export type AggregateTTIMERECORDS_HEAT3_INTER1 = {
    _count: TTIMERECORDS_HEAT3_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT3_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT3_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT3_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT3_INTER1MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT3_INTER1AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT3_INTER1SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT3_INTER1MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT3_INTER1MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT3_INTER1CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT3_INTER1AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT3_INTER1SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT3_INTER1MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT3_INTER1MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT3_INTER1CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT3_INTER1AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT3_INTER1 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT3_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT3_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT3_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT3_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT3_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT3_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT3_INTER1s
    **/
    _count?: true | TTIMERECORDS_HEAT3_INTER1CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT3_INTER1AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT3_INTER1SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT3_INTER1MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT3_INTER1MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT3_INTER1AggregateType<T extends TTIMERECORDS_HEAT3_INTER1AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT3_INTER1]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT3_INTER1[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT3_INTER1[P]>
  }




  export type TTIMERECORDS_HEAT3_INTER1GroupByArgs = {
    where?: TTIMERECORDS_HEAT3_INTER1WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT3_INTER1OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT3_INTER1ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT3_INTER1ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT3_INTER1CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT3_INTER1AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT3_INTER1SumAggregateInputType
    _min?: TTIMERECORDS_HEAT3_INTER1MinAggregateInputType
    _max?: TTIMERECORDS_HEAT3_INTER1MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT3_INTER1GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT3_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT3_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT3_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT3_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT3_INTER1MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT3_INTER1GroupByPayload<T extends TTIMERECORDS_HEAT3_INTER1GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT3_INTER1GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT3_INTER1GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT3_INTER1GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT3_INTER1GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT3_INTER1Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT3_INTER1GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT3_INTER1Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT3_INTER1
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT3_INTER1Args | TTIMERECORDS_HEAT3_INTER1FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT3_INTER1 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT3_INTER1 ? TTIMERECORDS_HEAT3_INTER1[P] : never
  } 
    : TTIMERECORDS_HEAT3_INTER1
  : TTIMERECORDS_HEAT3_INTER1


  type TTIMERECORDS_HEAT3_INTER1CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT3_INTER1FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT3_INTER1CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT3_INTER1Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT3_INTER1 that matches the filter.
     * @param {TTIMERECORDS_HEAT3_INTER1FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT3_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT3_INTER1
     * const tTIMERECORDS_HEAT3_INTER1 = await prisma.tTIMERECORDS_HEAT3_INTER1.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT3_INTER1FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_INTER1FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT3_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_INTER1Client<TTIMERECORDS_HEAT3_INTER1>, Prisma__TTIMERECORDS_HEAT3_INTER1Client<TTIMERECORDS_HEAT3_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_INTER1Client<TTIMERECORDS_HEAT3_INTER1 | null >, Prisma__TTIMERECORDS_HEAT3_INTER1Client<TTIMERECORDS_HEAT3_INTER1GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT3_INTER1 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_INTER1FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT3_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT3_INTER1
     * const tTIMERECORDS_HEAT3_INTER1 = await prisma.tTIMERECORDS_HEAT3_INTER1.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT3_INTER1FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT3_INTER1FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT3_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_INTER1Client<TTIMERECORDS_HEAT3_INTER1>, Prisma__TTIMERECORDS_HEAT3_INTER1Client<TTIMERECORDS_HEAT3_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_INTER1Client<TTIMERECORDS_HEAT3_INTER1 | null >, Prisma__TTIMERECORDS_HEAT3_INTER1Client<TTIMERECORDS_HEAT3_INTER1GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT3_INTER1s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_INTER1FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT3_INTER1s
     * const tTIMERECORDS_HEAT3_INTER1s = await prisma.tTIMERECORDS_HEAT3_INTER1.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT3_INTER1s
     * const tTIMERECORDS_HEAT3_INTER1s = await prisma.tTIMERECORDS_HEAT3_INTER1.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT3_INTER1WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT3_INTER1.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT3_INTER1FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT3_INTER1FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT3_INTER1>>, PrismaPromise<Array<TTIMERECORDS_HEAT3_INTER1GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT3_INTER1.
     * @param {TTIMERECORDS_HEAT3_INTER1CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT3_INTER1.
     * @example
     * // Create one TTIMERECORDS_HEAT3_INTER1
     * const TTIMERECORDS_HEAT3_INTER1 = await prisma.tTIMERECORDS_HEAT3_INTER1.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT3_INTER1
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT3_INTER1CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_INTER1CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_INTER1Client<TTIMERECORDS_HEAT3_INTER1>, Prisma__TTIMERECORDS_HEAT3_INTER1Client<TTIMERECORDS_HEAT3_INTER1GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT3_INTER1.
     * @param {TTIMERECORDS_HEAT3_INTER1DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT3_INTER1.
     * @example
     * // Delete one TTIMERECORDS_HEAT3_INTER1
     * const TTIMERECORDS_HEAT3_INTER1 = await prisma.tTIMERECORDS_HEAT3_INTER1.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT3_INTER1
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT3_INTER1DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_INTER1DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_INTER1Client<TTIMERECORDS_HEAT3_INTER1>, Prisma__TTIMERECORDS_HEAT3_INTER1Client<TTIMERECORDS_HEAT3_INTER1GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT3_INTER1.
     * @param {TTIMERECORDS_HEAT3_INTER1UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT3_INTER1.
     * @example
     * // Update one TTIMERECORDS_HEAT3_INTER1
     * const tTIMERECORDS_HEAT3_INTER1 = await prisma.tTIMERECORDS_HEAT3_INTER1.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT3_INTER1UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_INTER1UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_INTER1Client<TTIMERECORDS_HEAT3_INTER1>, Prisma__TTIMERECORDS_HEAT3_INTER1Client<TTIMERECORDS_HEAT3_INTER1GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT3_INTER1s.
     * @param {TTIMERECORDS_HEAT3_INTER1DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT3_INTER1s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT3_INTER1s
     * const { count } = await prisma.tTIMERECORDS_HEAT3_INTER1.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT3_INTER1DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT3_INTER1DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT3_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_INTER1UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT3_INTER1s
     * const tTIMERECORDS_HEAT3_INTER1 = await prisma.tTIMERECORDS_HEAT3_INTER1.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT3_INTER1UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_INTER1UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT3_INTER1.
     * @param {TTIMERECORDS_HEAT3_INTER1UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT3_INTER1.
     * @example
     * // Update or create a TTIMERECORDS_HEAT3_INTER1
     * const tTIMERECORDS_HEAT3_INTER1 = await prisma.tTIMERECORDS_HEAT3_INTER1.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT3_INTER1
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT3_INTER1 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT3_INTER1UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_INTER1UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_INTER1Client<TTIMERECORDS_HEAT3_INTER1>, Prisma__TTIMERECORDS_HEAT3_INTER1Client<TTIMERECORDS_HEAT3_INTER1GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT3_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_INTER1CountArgs} args - Arguments to filter TTIMERECORDS_HEAT3_INTER1s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT3_INTER1s
     * const count = await prisma.tTIMERECORDS_HEAT3_INTER1.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT3_INTER1s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT3_INTER1CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT3_INTER1CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT3_INTER1CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT3_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_INTER1AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT3_INTER1AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT3_INTER1AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT3_INTER1AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT3_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_INTER1GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT3_INTER1GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT3_INTER1GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT3_INTER1GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT3_INTER1GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT3_INTER1GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT3_INTER1.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT3_INTER1Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT3_INTER1 findUnique
   */
  export type TTIMERECORDS_HEAT3_INTER1FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT3_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT3_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT3_INTER1 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT3_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT3_INTER1 findFirst
   */
  export type TTIMERECORDS_HEAT3_INTER1FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT3_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT3_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT3_INTER1 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT3_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT3_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT3_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT3_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT3_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT3_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT3_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT3_INTER1s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT3_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT3_INTER1 findMany
   */
  export type TTIMERECORDS_HEAT3_INTER1FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT3_INTER1Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT3_INTER1s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT3_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT3_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT3_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT3_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT3_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT3_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT3_INTER1s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT3_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT3_INTER1 create
   */
  export type TTIMERECORDS_HEAT3_INTER1CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT3_INTER1Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT3_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT3_INTER1CreateInput, TTIMERECORDS_HEAT3_INTER1UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT3_INTER1 update
   */
  export type TTIMERECORDS_HEAT3_INTER1UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT3_INTER1Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT3_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT3_INTER1UpdateInput, TTIMERECORDS_HEAT3_INTER1UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT3_INTER1 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT3_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT3_INTER1 updateMany
   */
  export type TTIMERECORDS_HEAT3_INTER1UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT3_INTER1s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT3_INTER1UpdateManyMutationInput, TTIMERECORDS_HEAT3_INTER1UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT3_INTER1s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT3_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT3_INTER1 upsert
   */
  export type TTIMERECORDS_HEAT3_INTER1UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT3_INTER1Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT3_INTER1 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT3_INTER1WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT3_INTER1 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT3_INTER1 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT3_INTER1CreateInput, TTIMERECORDS_HEAT3_INTER1UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT3_INTER1 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT3_INTER1UpdateInput, TTIMERECORDS_HEAT3_INTER1UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT3_INTER1 delete
   */
  export type TTIMERECORDS_HEAT3_INTER1DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT3_INTER1Select | null
    /**
     * Filter which TTIMERECORDS_HEAT3_INTER1 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT3_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT3_INTER1 deleteMany
   */
  export type TTIMERECORDS_HEAT3_INTER1DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT3_INTER1s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT3_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT3_INTER1 without action
   */
  export type TTIMERECORDS_HEAT3_INTER1Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT3_INTER1Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT3_INTER2
   */


  export type AggregateTTIMERECORDS_HEAT3_INTER2 = {
    _count: TTIMERECORDS_HEAT3_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT3_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT3_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT3_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT3_INTER2MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT3_INTER2AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT3_INTER2SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT3_INTER2MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT3_INTER2MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT3_INTER2CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT3_INTER2AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT3_INTER2SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT3_INTER2MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT3_INTER2MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT3_INTER2CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT3_INTER2AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT3_INTER2 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT3_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT3_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT3_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT3_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT3_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT3_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT3_INTER2s
    **/
    _count?: true | TTIMERECORDS_HEAT3_INTER2CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT3_INTER2AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT3_INTER2SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT3_INTER2MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT3_INTER2MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT3_INTER2AggregateType<T extends TTIMERECORDS_HEAT3_INTER2AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT3_INTER2]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT3_INTER2[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT3_INTER2[P]>
  }




  export type TTIMERECORDS_HEAT3_INTER2GroupByArgs = {
    where?: TTIMERECORDS_HEAT3_INTER2WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT3_INTER2OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT3_INTER2ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT3_INTER2ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT3_INTER2CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT3_INTER2AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT3_INTER2SumAggregateInputType
    _min?: TTIMERECORDS_HEAT3_INTER2MinAggregateInputType
    _max?: TTIMERECORDS_HEAT3_INTER2MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT3_INTER2GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT3_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT3_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT3_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT3_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT3_INTER2MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT3_INTER2GroupByPayload<T extends TTIMERECORDS_HEAT3_INTER2GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT3_INTER2GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT3_INTER2GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT3_INTER2GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT3_INTER2GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT3_INTER2Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT3_INTER2GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT3_INTER2Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT3_INTER2
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT3_INTER2Args | TTIMERECORDS_HEAT3_INTER2FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT3_INTER2 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT3_INTER2 ? TTIMERECORDS_HEAT3_INTER2[P] : never
  } 
    : TTIMERECORDS_HEAT3_INTER2
  : TTIMERECORDS_HEAT3_INTER2


  type TTIMERECORDS_HEAT3_INTER2CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT3_INTER2FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT3_INTER2CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT3_INTER2Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT3_INTER2 that matches the filter.
     * @param {TTIMERECORDS_HEAT3_INTER2FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT3_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT3_INTER2
     * const tTIMERECORDS_HEAT3_INTER2 = await prisma.tTIMERECORDS_HEAT3_INTER2.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT3_INTER2FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_INTER2FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT3_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_INTER2Client<TTIMERECORDS_HEAT3_INTER2>, Prisma__TTIMERECORDS_HEAT3_INTER2Client<TTIMERECORDS_HEAT3_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_INTER2Client<TTIMERECORDS_HEAT3_INTER2 | null >, Prisma__TTIMERECORDS_HEAT3_INTER2Client<TTIMERECORDS_HEAT3_INTER2GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT3_INTER2 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_INTER2FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT3_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT3_INTER2
     * const tTIMERECORDS_HEAT3_INTER2 = await prisma.tTIMERECORDS_HEAT3_INTER2.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT3_INTER2FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT3_INTER2FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT3_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_INTER2Client<TTIMERECORDS_HEAT3_INTER2>, Prisma__TTIMERECORDS_HEAT3_INTER2Client<TTIMERECORDS_HEAT3_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_INTER2Client<TTIMERECORDS_HEAT3_INTER2 | null >, Prisma__TTIMERECORDS_HEAT3_INTER2Client<TTIMERECORDS_HEAT3_INTER2GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT3_INTER2s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_INTER2FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT3_INTER2s
     * const tTIMERECORDS_HEAT3_INTER2s = await prisma.tTIMERECORDS_HEAT3_INTER2.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT3_INTER2s
     * const tTIMERECORDS_HEAT3_INTER2s = await prisma.tTIMERECORDS_HEAT3_INTER2.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT3_INTER2WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT3_INTER2.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT3_INTER2FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT3_INTER2FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT3_INTER2>>, PrismaPromise<Array<TTIMERECORDS_HEAT3_INTER2GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT3_INTER2.
     * @param {TTIMERECORDS_HEAT3_INTER2CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT3_INTER2.
     * @example
     * // Create one TTIMERECORDS_HEAT3_INTER2
     * const TTIMERECORDS_HEAT3_INTER2 = await prisma.tTIMERECORDS_HEAT3_INTER2.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT3_INTER2
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT3_INTER2CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_INTER2CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_INTER2Client<TTIMERECORDS_HEAT3_INTER2>, Prisma__TTIMERECORDS_HEAT3_INTER2Client<TTIMERECORDS_HEAT3_INTER2GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT3_INTER2.
     * @param {TTIMERECORDS_HEAT3_INTER2DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT3_INTER2.
     * @example
     * // Delete one TTIMERECORDS_HEAT3_INTER2
     * const TTIMERECORDS_HEAT3_INTER2 = await prisma.tTIMERECORDS_HEAT3_INTER2.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT3_INTER2
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT3_INTER2DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_INTER2DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_INTER2Client<TTIMERECORDS_HEAT3_INTER2>, Prisma__TTIMERECORDS_HEAT3_INTER2Client<TTIMERECORDS_HEAT3_INTER2GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT3_INTER2.
     * @param {TTIMERECORDS_HEAT3_INTER2UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT3_INTER2.
     * @example
     * // Update one TTIMERECORDS_HEAT3_INTER2
     * const tTIMERECORDS_HEAT3_INTER2 = await prisma.tTIMERECORDS_HEAT3_INTER2.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT3_INTER2UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_INTER2UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_INTER2Client<TTIMERECORDS_HEAT3_INTER2>, Prisma__TTIMERECORDS_HEAT3_INTER2Client<TTIMERECORDS_HEAT3_INTER2GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT3_INTER2s.
     * @param {TTIMERECORDS_HEAT3_INTER2DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT3_INTER2s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT3_INTER2s
     * const { count } = await prisma.tTIMERECORDS_HEAT3_INTER2.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT3_INTER2DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT3_INTER2DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT3_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_INTER2UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT3_INTER2s
     * const tTIMERECORDS_HEAT3_INTER2 = await prisma.tTIMERECORDS_HEAT3_INTER2.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT3_INTER2UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_INTER2UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT3_INTER2.
     * @param {TTIMERECORDS_HEAT3_INTER2UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT3_INTER2.
     * @example
     * // Update or create a TTIMERECORDS_HEAT3_INTER2
     * const tTIMERECORDS_HEAT3_INTER2 = await prisma.tTIMERECORDS_HEAT3_INTER2.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT3_INTER2
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT3_INTER2 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT3_INTER2UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_INTER2UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_INTER2Client<TTIMERECORDS_HEAT3_INTER2>, Prisma__TTIMERECORDS_HEAT3_INTER2Client<TTIMERECORDS_HEAT3_INTER2GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT3_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_INTER2CountArgs} args - Arguments to filter TTIMERECORDS_HEAT3_INTER2s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT3_INTER2s
     * const count = await prisma.tTIMERECORDS_HEAT3_INTER2.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT3_INTER2s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT3_INTER2CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT3_INTER2CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT3_INTER2CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT3_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_INTER2AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT3_INTER2AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT3_INTER2AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT3_INTER2AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT3_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_INTER2GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT3_INTER2GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT3_INTER2GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT3_INTER2GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT3_INTER2GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT3_INTER2GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT3_INTER2.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT3_INTER2Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT3_INTER2 findUnique
   */
  export type TTIMERECORDS_HEAT3_INTER2FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT3_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT3_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT3_INTER2 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT3_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT3_INTER2 findFirst
   */
  export type TTIMERECORDS_HEAT3_INTER2FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT3_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT3_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT3_INTER2 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT3_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT3_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT3_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT3_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT3_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT3_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT3_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT3_INTER2s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT3_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT3_INTER2 findMany
   */
  export type TTIMERECORDS_HEAT3_INTER2FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT3_INTER2Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT3_INTER2s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT3_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT3_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT3_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT3_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT3_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT3_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT3_INTER2s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT3_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT3_INTER2 create
   */
  export type TTIMERECORDS_HEAT3_INTER2CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT3_INTER2Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT3_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT3_INTER2CreateInput, TTIMERECORDS_HEAT3_INTER2UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT3_INTER2 update
   */
  export type TTIMERECORDS_HEAT3_INTER2UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT3_INTER2Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT3_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT3_INTER2UpdateInput, TTIMERECORDS_HEAT3_INTER2UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT3_INTER2 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT3_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT3_INTER2 updateMany
   */
  export type TTIMERECORDS_HEAT3_INTER2UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT3_INTER2s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT3_INTER2UpdateManyMutationInput, TTIMERECORDS_HEAT3_INTER2UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT3_INTER2s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT3_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT3_INTER2 upsert
   */
  export type TTIMERECORDS_HEAT3_INTER2UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT3_INTER2Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT3_INTER2 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT3_INTER2WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT3_INTER2 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT3_INTER2 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT3_INTER2CreateInput, TTIMERECORDS_HEAT3_INTER2UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT3_INTER2 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT3_INTER2UpdateInput, TTIMERECORDS_HEAT3_INTER2UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT3_INTER2 delete
   */
  export type TTIMERECORDS_HEAT3_INTER2DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT3_INTER2Select | null
    /**
     * Filter which TTIMERECORDS_HEAT3_INTER2 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT3_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT3_INTER2 deleteMany
   */
  export type TTIMERECORDS_HEAT3_INTER2DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT3_INTER2s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT3_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT3_INTER2 without action
   */
  export type TTIMERECORDS_HEAT3_INTER2Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT3_INTER2Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT3_START
   */


  export type AggregateTTIMERECORDS_HEAT3_START = {
    _count: TTIMERECORDS_HEAT3_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT3_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT3_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT3_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT3_STARTMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT3_STARTAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT3_STARTSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT3_STARTMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT3_STARTMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT3_STARTCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT3_STARTAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT3_STARTSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT3_STARTMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT3_STARTMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT3_STARTCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT3_STARTAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT3_START to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT3_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT3_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT3_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT3_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT3_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT3_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT3_STARTS
    **/
    _count?: true | TTIMERECORDS_HEAT3_STARTCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT3_STARTAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT3_STARTSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT3_STARTMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT3_STARTMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT3_STARTAggregateType<T extends TTIMERECORDS_HEAT3_STARTAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT3_START]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT3_START[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT3_START[P]>
  }




  export type TTIMERECORDS_HEAT3_STARTGroupByArgs = {
    where?: TTIMERECORDS_HEAT3_STARTWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT3_STARTOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT3_STARTScalarFieldEnum>
    having?: TTIMERECORDS_HEAT3_STARTScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT3_STARTCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT3_STARTAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT3_STARTSumAggregateInputType
    _min?: TTIMERECORDS_HEAT3_STARTMinAggregateInputType
    _max?: TTIMERECORDS_HEAT3_STARTMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT3_STARTGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT3_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT3_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT3_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT3_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT3_STARTMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT3_STARTGroupByPayload<T extends TTIMERECORDS_HEAT3_STARTGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT3_STARTGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT3_STARTGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT3_STARTGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT3_STARTGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT3_STARTSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT3_STARTGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT3_STARTArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT3_START
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT3_STARTArgs | TTIMERECORDS_HEAT3_STARTFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT3_START 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT3_START ? TTIMERECORDS_HEAT3_START[P] : never
  } 
    : TTIMERECORDS_HEAT3_START
  : TTIMERECORDS_HEAT3_START


  type TTIMERECORDS_HEAT3_STARTCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT3_STARTFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT3_STARTCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT3_STARTDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT3_START that matches the filter.
     * @param {TTIMERECORDS_HEAT3_STARTFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT3_START
     * @example
     * // Get one TTIMERECORDS_HEAT3_START
     * const tTIMERECORDS_HEAT3_START = await prisma.tTIMERECORDS_HEAT3_START.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT3_STARTFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_STARTFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT3_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_STARTClient<TTIMERECORDS_HEAT3_START>, Prisma__TTIMERECORDS_HEAT3_STARTClient<TTIMERECORDS_HEAT3_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_STARTClient<TTIMERECORDS_HEAT3_START | null >, Prisma__TTIMERECORDS_HEAT3_STARTClient<TTIMERECORDS_HEAT3_STARTGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT3_START that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_STARTFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT3_START
     * @example
     * // Get one TTIMERECORDS_HEAT3_START
     * const tTIMERECORDS_HEAT3_START = await prisma.tTIMERECORDS_HEAT3_START.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT3_STARTFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT3_STARTFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT3_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_STARTClient<TTIMERECORDS_HEAT3_START>, Prisma__TTIMERECORDS_HEAT3_STARTClient<TTIMERECORDS_HEAT3_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_STARTClient<TTIMERECORDS_HEAT3_START | null >, Prisma__TTIMERECORDS_HEAT3_STARTClient<TTIMERECORDS_HEAT3_STARTGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT3_STARTS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_STARTFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT3_STARTS
     * const tTIMERECORDS_HEAT3_STARTS = await prisma.tTIMERECORDS_HEAT3_START.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT3_STARTS
     * const tTIMERECORDS_HEAT3_STARTS = await prisma.tTIMERECORDS_HEAT3_START.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT3_STARTWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT3_START.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT3_STARTFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT3_STARTFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT3_START>>, PrismaPromise<Array<TTIMERECORDS_HEAT3_STARTGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT3_START.
     * @param {TTIMERECORDS_HEAT3_STARTCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT3_START.
     * @example
     * // Create one TTIMERECORDS_HEAT3_START
     * const TTIMERECORDS_HEAT3_START = await prisma.tTIMERECORDS_HEAT3_START.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT3_START
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT3_STARTCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_STARTCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_STARTClient<TTIMERECORDS_HEAT3_START>, Prisma__TTIMERECORDS_HEAT3_STARTClient<TTIMERECORDS_HEAT3_STARTGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT3_START.
     * @param {TTIMERECORDS_HEAT3_STARTDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT3_START.
     * @example
     * // Delete one TTIMERECORDS_HEAT3_START
     * const TTIMERECORDS_HEAT3_START = await prisma.tTIMERECORDS_HEAT3_START.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT3_START
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT3_STARTDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_STARTDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_STARTClient<TTIMERECORDS_HEAT3_START>, Prisma__TTIMERECORDS_HEAT3_STARTClient<TTIMERECORDS_HEAT3_STARTGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT3_START.
     * @param {TTIMERECORDS_HEAT3_STARTUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT3_START.
     * @example
     * // Update one TTIMERECORDS_HEAT3_START
     * const tTIMERECORDS_HEAT3_START = await prisma.tTIMERECORDS_HEAT3_START.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT3_STARTUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_STARTUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_STARTClient<TTIMERECORDS_HEAT3_START>, Prisma__TTIMERECORDS_HEAT3_STARTClient<TTIMERECORDS_HEAT3_STARTGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT3_STARTS.
     * @param {TTIMERECORDS_HEAT3_STARTDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT3_STARTS to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT3_STARTS
     * const { count } = await prisma.tTIMERECORDS_HEAT3_START.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT3_STARTDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT3_STARTDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT3_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_STARTUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT3_STARTS
     * const tTIMERECORDS_HEAT3_START = await prisma.tTIMERECORDS_HEAT3_START.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT3_STARTUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_STARTUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT3_START.
     * @param {TTIMERECORDS_HEAT3_STARTUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT3_START.
     * @example
     * // Update or create a TTIMERECORDS_HEAT3_START
     * const tTIMERECORDS_HEAT3_START = await prisma.tTIMERECORDS_HEAT3_START.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT3_START
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT3_START we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT3_STARTUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT3_STARTUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT3_STARTClient<TTIMERECORDS_HEAT3_START>, Prisma__TTIMERECORDS_HEAT3_STARTClient<TTIMERECORDS_HEAT3_STARTGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT3_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_STARTCountArgs} args - Arguments to filter TTIMERECORDS_HEAT3_STARTS to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT3_STARTS
     * const count = await prisma.tTIMERECORDS_HEAT3_START.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT3_STARTS we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT3_STARTCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT3_STARTCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT3_STARTCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT3_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_STARTAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT3_STARTAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT3_STARTAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT3_STARTAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT3_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT3_STARTGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT3_STARTGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT3_STARTGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT3_STARTGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT3_STARTGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT3_STARTGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT3_START.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT3_STARTClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT3_START findUnique
   */
  export type TTIMERECORDS_HEAT3_STARTFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_START
     * 
    **/
    select?: TTIMERECORDS_HEAT3_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT3_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT3_START to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT3_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT3_START findFirst
   */
  export type TTIMERECORDS_HEAT3_STARTFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_START
     * 
    **/
    select?: TTIMERECORDS_HEAT3_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT3_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT3_START to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT3_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT3_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT3_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT3_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT3_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT3_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT3_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT3_STARTS.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT3_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT3_START findMany
   */
  export type TTIMERECORDS_HEAT3_STARTFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_START
     * 
    **/
    select?: TTIMERECORDS_HEAT3_STARTSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT3_STARTS to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT3_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT3_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT3_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT3_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT3_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT3_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT3_STARTS.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT3_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT3_START create
   */
  export type TTIMERECORDS_HEAT3_STARTCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_START
     * 
    **/
    select?: TTIMERECORDS_HEAT3_STARTSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT3_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT3_STARTCreateInput, TTIMERECORDS_HEAT3_STARTUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT3_START update
   */
  export type TTIMERECORDS_HEAT3_STARTUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_START
     * 
    **/
    select?: TTIMERECORDS_HEAT3_STARTSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT3_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT3_STARTUpdateInput, TTIMERECORDS_HEAT3_STARTUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT3_START to update.
     * 
    **/
    where: TTIMERECORDS_HEAT3_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT3_START updateMany
   */
  export type TTIMERECORDS_HEAT3_STARTUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT3_STARTS.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT3_STARTUpdateManyMutationInput, TTIMERECORDS_HEAT3_STARTUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT3_STARTS to update
     * 
    **/
    where?: TTIMERECORDS_HEAT3_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT3_START upsert
   */
  export type TTIMERECORDS_HEAT3_STARTUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_START
     * 
    **/
    select?: TTIMERECORDS_HEAT3_STARTSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT3_START to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT3_STARTWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT3_START found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT3_START with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT3_STARTCreateInput, TTIMERECORDS_HEAT3_STARTUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT3_START was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT3_STARTUpdateInput, TTIMERECORDS_HEAT3_STARTUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT3_START delete
   */
  export type TTIMERECORDS_HEAT3_STARTDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_START
     * 
    **/
    select?: TTIMERECORDS_HEAT3_STARTSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT3_START to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT3_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT3_START deleteMany
   */
  export type TTIMERECORDS_HEAT3_STARTDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT3_STARTS to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT3_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT3_START without action
   */
  export type TTIMERECORDS_HEAT3_STARTArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT3_START
     * 
    **/
    select?: TTIMERECORDS_HEAT3_STARTSelect | null
  }



  /**
   * Model TTIMERECORDS_HEAT4_FINISH
   */


  export type AggregateTTIMERECORDS_HEAT4_FINISH = {
    _count: TTIMERECORDS_HEAT4_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT4_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT4_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT4_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT4_FINISHMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT4_FINISHAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT4_FINISHSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT4_FINISHMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT4_FINISHMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT4_FINISHCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT4_FINISHAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT4_FINISHSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT4_FINISHMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT4_FINISHMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT4_FINISHCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT4_FINISHAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT4_FINISH to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT4_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT4_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT4_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT4_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT4_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT4_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT4_FINISHES
    **/
    _count?: true | TTIMERECORDS_HEAT4_FINISHCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT4_FINISHAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT4_FINISHSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT4_FINISHMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT4_FINISHMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT4_FINISHAggregateType<T extends TTIMERECORDS_HEAT4_FINISHAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT4_FINISH]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT4_FINISH[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT4_FINISH[P]>
  }




  export type TTIMERECORDS_HEAT4_FINISHGroupByArgs = {
    where?: TTIMERECORDS_HEAT4_FINISHWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT4_FINISHOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT4_FINISHScalarFieldEnum>
    having?: TTIMERECORDS_HEAT4_FINISHScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT4_FINISHCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT4_FINISHAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT4_FINISHSumAggregateInputType
    _min?: TTIMERECORDS_HEAT4_FINISHMinAggregateInputType
    _max?: TTIMERECORDS_HEAT4_FINISHMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT4_FINISHGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT4_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT4_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT4_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT4_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT4_FINISHMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT4_FINISHGroupByPayload<T extends TTIMERECORDS_HEAT4_FINISHGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT4_FINISHGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT4_FINISHGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT4_FINISHGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT4_FINISHGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT4_FINISHSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT4_FINISHGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT4_FINISHArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT4_FINISH
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT4_FINISHArgs | TTIMERECORDS_HEAT4_FINISHFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT4_FINISH 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT4_FINISH ? TTIMERECORDS_HEAT4_FINISH[P] : never
  } 
    : TTIMERECORDS_HEAT4_FINISH
  : TTIMERECORDS_HEAT4_FINISH


  type TTIMERECORDS_HEAT4_FINISHCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT4_FINISHFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT4_FINISHCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT4_FINISHDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT4_FINISH that matches the filter.
     * @param {TTIMERECORDS_HEAT4_FINISHFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT4_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT4_FINISH
     * const tTIMERECORDS_HEAT4_FINISH = await prisma.tTIMERECORDS_HEAT4_FINISH.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT4_FINISHFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_FINISHFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT4_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_FINISHClient<TTIMERECORDS_HEAT4_FINISH>, Prisma__TTIMERECORDS_HEAT4_FINISHClient<TTIMERECORDS_HEAT4_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_FINISHClient<TTIMERECORDS_HEAT4_FINISH | null >, Prisma__TTIMERECORDS_HEAT4_FINISHClient<TTIMERECORDS_HEAT4_FINISHGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT4_FINISH that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_FINISHFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT4_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT4_FINISH
     * const tTIMERECORDS_HEAT4_FINISH = await prisma.tTIMERECORDS_HEAT4_FINISH.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT4_FINISHFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT4_FINISHFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT4_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_FINISHClient<TTIMERECORDS_HEAT4_FINISH>, Prisma__TTIMERECORDS_HEAT4_FINISHClient<TTIMERECORDS_HEAT4_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_FINISHClient<TTIMERECORDS_HEAT4_FINISH | null >, Prisma__TTIMERECORDS_HEAT4_FINISHClient<TTIMERECORDS_HEAT4_FINISHGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT4_FINISHES that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_FINISHFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT4_FINISHES
     * const tTIMERECORDS_HEAT4_FINISHES = await prisma.tTIMERECORDS_HEAT4_FINISH.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT4_FINISHES
     * const tTIMERECORDS_HEAT4_FINISHES = await prisma.tTIMERECORDS_HEAT4_FINISH.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT4_FINISHWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT4_FINISH.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT4_FINISHFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT4_FINISHFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT4_FINISH>>, PrismaPromise<Array<TTIMERECORDS_HEAT4_FINISHGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT4_FINISH.
     * @param {TTIMERECORDS_HEAT4_FINISHCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT4_FINISH.
     * @example
     * // Create one TTIMERECORDS_HEAT4_FINISH
     * const TTIMERECORDS_HEAT4_FINISH = await prisma.tTIMERECORDS_HEAT4_FINISH.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT4_FINISH
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT4_FINISHCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_FINISHCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_FINISHClient<TTIMERECORDS_HEAT4_FINISH>, Prisma__TTIMERECORDS_HEAT4_FINISHClient<TTIMERECORDS_HEAT4_FINISHGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT4_FINISH.
     * @param {TTIMERECORDS_HEAT4_FINISHDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT4_FINISH.
     * @example
     * // Delete one TTIMERECORDS_HEAT4_FINISH
     * const TTIMERECORDS_HEAT4_FINISH = await prisma.tTIMERECORDS_HEAT4_FINISH.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT4_FINISH
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT4_FINISHDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_FINISHDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_FINISHClient<TTIMERECORDS_HEAT4_FINISH>, Prisma__TTIMERECORDS_HEAT4_FINISHClient<TTIMERECORDS_HEAT4_FINISHGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT4_FINISH.
     * @param {TTIMERECORDS_HEAT4_FINISHUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT4_FINISH.
     * @example
     * // Update one TTIMERECORDS_HEAT4_FINISH
     * const tTIMERECORDS_HEAT4_FINISH = await prisma.tTIMERECORDS_HEAT4_FINISH.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT4_FINISHUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_FINISHUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_FINISHClient<TTIMERECORDS_HEAT4_FINISH>, Prisma__TTIMERECORDS_HEAT4_FINISHClient<TTIMERECORDS_HEAT4_FINISHGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT4_FINISHES.
     * @param {TTIMERECORDS_HEAT4_FINISHDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT4_FINISHES to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT4_FINISHES
     * const { count } = await prisma.tTIMERECORDS_HEAT4_FINISH.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT4_FINISHDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT4_FINISHDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT4_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_FINISHUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT4_FINISHES
     * const tTIMERECORDS_HEAT4_FINISH = await prisma.tTIMERECORDS_HEAT4_FINISH.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT4_FINISHUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_FINISHUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT4_FINISH.
     * @param {TTIMERECORDS_HEAT4_FINISHUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT4_FINISH.
     * @example
     * // Update or create a TTIMERECORDS_HEAT4_FINISH
     * const tTIMERECORDS_HEAT4_FINISH = await prisma.tTIMERECORDS_HEAT4_FINISH.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT4_FINISH
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT4_FINISH we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT4_FINISHUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_FINISHUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_FINISHClient<TTIMERECORDS_HEAT4_FINISH>, Prisma__TTIMERECORDS_HEAT4_FINISHClient<TTIMERECORDS_HEAT4_FINISHGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT4_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_FINISHCountArgs} args - Arguments to filter TTIMERECORDS_HEAT4_FINISHES to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT4_FINISHES
     * const count = await prisma.tTIMERECORDS_HEAT4_FINISH.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT4_FINISHES we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT4_FINISHCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT4_FINISHCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT4_FINISHCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT4_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_FINISHAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT4_FINISHAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT4_FINISHAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT4_FINISHAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT4_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_FINISHGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT4_FINISHGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT4_FINISHGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT4_FINISHGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT4_FINISHGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT4_FINISHGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT4_FINISH.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT4_FINISHClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT4_FINISH findUnique
   */
  export type TTIMERECORDS_HEAT4_FINISHFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT4_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT4_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT4_FINISH to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT4_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT4_FINISH findFirst
   */
  export type TTIMERECORDS_HEAT4_FINISHFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT4_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT4_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT4_FINISH to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT4_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT4_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT4_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT4_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT4_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT4_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT4_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT4_FINISHES.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT4_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT4_FINISH findMany
   */
  export type TTIMERECORDS_HEAT4_FINISHFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT4_FINISHSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT4_FINISHES to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT4_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT4_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT4_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT4_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT4_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT4_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT4_FINISHES.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT4_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT4_FINISH create
   */
  export type TTIMERECORDS_HEAT4_FINISHCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT4_FINISHSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT4_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT4_FINISHCreateInput, TTIMERECORDS_HEAT4_FINISHUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT4_FINISH update
   */
  export type TTIMERECORDS_HEAT4_FINISHUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT4_FINISHSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT4_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT4_FINISHUpdateInput, TTIMERECORDS_HEAT4_FINISHUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT4_FINISH to update.
     * 
    **/
    where: TTIMERECORDS_HEAT4_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT4_FINISH updateMany
   */
  export type TTIMERECORDS_HEAT4_FINISHUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT4_FINISHES.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT4_FINISHUpdateManyMutationInput, TTIMERECORDS_HEAT4_FINISHUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT4_FINISHES to update
     * 
    **/
    where?: TTIMERECORDS_HEAT4_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT4_FINISH upsert
   */
  export type TTIMERECORDS_HEAT4_FINISHUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT4_FINISHSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT4_FINISH to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT4_FINISHWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT4_FINISH found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT4_FINISH with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT4_FINISHCreateInput, TTIMERECORDS_HEAT4_FINISHUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT4_FINISH was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT4_FINISHUpdateInput, TTIMERECORDS_HEAT4_FINISHUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT4_FINISH delete
   */
  export type TTIMERECORDS_HEAT4_FINISHDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT4_FINISHSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT4_FINISH to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT4_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT4_FINISH deleteMany
   */
  export type TTIMERECORDS_HEAT4_FINISHDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT4_FINISHES to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT4_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT4_FINISH without action
   */
  export type TTIMERECORDS_HEAT4_FINISHArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT4_FINISHSelect | null
  }



  /**
   * Model TTIMERECORDS_HEAT4_INTER1
   */


  export type AggregateTTIMERECORDS_HEAT4_INTER1 = {
    _count: TTIMERECORDS_HEAT4_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT4_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT4_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT4_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT4_INTER1MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT4_INTER1AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT4_INTER1SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT4_INTER1MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT4_INTER1MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT4_INTER1CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT4_INTER1AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT4_INTER1SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT4_INTER1MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT4_INTER1MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT4_INTER1CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT4_INTER1AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT4_INTER1 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT4_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT4_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT4_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT4_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT4_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT4_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT4_INTER1s
    **/
    _count?: true | TTIMERECORDS_HEAT4_INTER1CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT4_INTER1AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT4_INTER1SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT4_INTER1MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT4_INTER1MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT4_INTER1AggregateType<T extends TTIMERECORDS_HEAT4_INTER1AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT4_INTER1]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT4_INTER1[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT4_INTER1[P]>
  }




  export type TTIMERECORDS_HEAT4_INTER1GroupByArgs = {
    where?: TTIMERECORDS_HEAT4_INTER1WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT4_INTER1OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT4_INTER1ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT4_INTER1ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT4_INTER1CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT4_INTER1AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT4_INTER1SumAggregateInputType
    _min?: TTIMERECORDS_HEAT4_INTER1MinAggregateInputType
    _max?: TTIMERECORDS_HEAT4_INTER1MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT4_INTER1GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT4_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT4_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT4_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT4_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT4_INTER1MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT4_INTER1GroupByPayload<T extends TTIMERECORDS_HEAT4_INTER1GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT4_INTER1GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT4_INTER1GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT4_INTER1GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT4_INTER1GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT4_INTER1Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT4_INTER1GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT4_INTER1Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT4_INTER1
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT4_INTER1Args | TTIMERECORDS_HEAT4_INTER1FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT4_INTER1 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT4_INTER1 ? TTIMERECORDS_HEAT4_INTER1[P] : never
  } 
    : TTIMERECORDS_HEAT4_INTER1
  : TTIMERECORDS_HEAT4_INTER1


  type TTIMERECORDS_HEAT4_INTER1CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT4_INTER1FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT4_INTER1CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT4_INTER1Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT4_INTER1 that matches the filter.
     * @param {TTIMERECORDS_HEAT4_INTER1FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT4_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT4_INTER1
     * const tTIMERECORDS_HEAT4_INTER1 = await prisma.tTIMERECORDS_HEAT4_INTER1.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT4_INTER1FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_INTER1FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT4_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_INTER1Client<TTIMERECORDS_HEAT4_INTER1>, Prisma__TTIMERECORDS_HEAT4_INTER1Client<TTIMERECORDS_HEAT4_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_INTER1Client<TTIMERECORDS_HEAT4_INTER1 | null >, Prisma__TTIMERECORDS_HEAT4_INTER1Client<TTIMERECORDS_HEAT4_INTER1GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT4_INTER1 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_INTER1FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT4_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT4_INTER1
     * const tTIMERECORDS_HEAT4_INTER1 = await prisma.tTIMERECORDS_HEAT4_INTER1.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT4_INTER1FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT4_INTER1FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT4_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_INTER1Client<TTIMERECORDS_HEAT4_INTER1>, Prisma__TTIMERECORDS_HEAT4_INTER1Client<TTIMERECORDS_HEAT4_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_INTER1Client<TTIMERECORDS_HEAT4_INTER1 | null >, Prisma__TTIMERECORDS_HEAT4_INTER1Client<TTIMERECORDS_HEAT4_INTER1GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT4_INTER1s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_INTER1FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT4_INTER1s
     * const tTIMERECORDS_HEAT4_INTER1s = await prisma.tTIMERECORDS_HEAT4_INTER1.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT4_INTER1s
     * const tTIMERECORDS_HEAT4_INTER1s = await prisma.tTIMERECORDS_HEAT4_INTER1.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT4_INTER1WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT4_INTER1.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT4_INTER1FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT4_INTER1FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT4_INTER1>>, PrismaPromise<Array<TTIMERECORDS_HEAT4_INTER1GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT4_INTER1.
     * @param {TTIMERECORDS_HEAT4_INTER1CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT4_INTER1.
     * @example
     * // Create one TTIMERECORDS_HEAT4_INTER1
     * const TTIMERECORDS_HEAT4_INTER1 = await prisma.tTIMERECORDS_HEAT4_INTER1.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT4_INTER1
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT4_INTER1CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_INTER1CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_INTER1Client<TTIMERECORDS_HEAT4_INTER1>, Prisma__TTIMERECORDS_HEAT4_INTER1Client<TTIMERECORDS_HEAT4_INTER1GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT4_INTER1.
     * @param {TTIMERECORDS_HEAT4_INTER1DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT4_INTER1.
     * @example
     * // Delete one TTIMERECORDS_HEAT4_INTER1
     * const TTIMERECORDS_HEAT4_INTER1 = await prisma.tTIMERECORDS_HEAT4_INTER1.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT4_INTER1
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT4_INTER1DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_INTER1DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_INTER1Client<TTIMERECORDS_HEAT4_INTER1>, Prisma__TTIMERECORDS_HEAT4_INTER1Client<TTIMERECORDS_HEAT4_INTER1GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT4_INTER1.
     * @param {TTIMERECORDS_HEAT4_INTER1UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT4_INTER1.
     * @example
     * // Update one TTIMERECORDS_HEAT4_INTER1
     * const tTIMERECORDS_HEAT4_INTER1 = await prisma.tTIMERECORDS_HEAT4_INTER1.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT4_INTER1UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_INTER1UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_INTER1Client<TTIMERECORDS_HEAT4_INTER1>, Prisma__TTIMERECORDS_HEAT4_INTER1Client<TTIMERECORDS_HEAT4_INTER1GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT4_INTER1s.
     * @param {TTIMERECORDS_HEAT4_INTER1DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT4_INTER1s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT4_INTER1s
     * const { count } = await prisma.tTIMERECORDS_HEAT4_INTER1.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT4_INTER1DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT4_INTER1DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT4_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_INTER1UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT4_INTER1s
     * const tTIMERECORDS_HEAT4_INTER1 = await prisma.tTIMERECORDS_HEAT4_INTER1.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT4_INTER1UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_INTER1UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT4_INTER1.
     * @param {TTIMERECORDS_HEAT4_INTER1UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT4_INTER1.
     * @example
     * // Update or create a TTIMERECORDS_HEAT4_INTER1
     * const tTIMERECORDS_HEAT4_INTER1 = await prisma.tTIMERECORDS_HEAT4_INTER1.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT4_INTER1
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT4_INTER1 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT4_INTER1UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_INTER1UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_INTER1Client<TTIMERECORDS_HEAT4_INTER1>, Prisma__TTIMERECORDS_HEAT4_INTER1Client<TTIMERECORDS_HEAT4_INTER1GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT4_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_INTER1CountArgs} args - Arguments to filter TTIMERECORDS_HEAT4_INTER1s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT4_INTER1s
     * const count = await prisma.tTIMERECORDS_HEAT4_INTER1.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT4_INTER1s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT4_INTER1CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT4_INTER1CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT4_INTER1CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT4_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_INTER1AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT4_INTER1AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT4_INTER1AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT4_INTER1AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT4_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_INTER1GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT4_INTER1GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT4_INTER1GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT4_INTER1GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT4_INTER1GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT4_INTER1GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT4_INTER1.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT4_INTER1Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT4_INTER1 findUnique
   */
  export type TTIMERECORDS_HEAT4_INTER1FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT4_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT4_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT4_INTER1 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT4_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT4_INTER1 findFirst
   */
  export type TTIMERECORDS_HEAT4_INTER1FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT4_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT4_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT4_INTER1 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT4_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT4_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT4_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT4_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT4_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT4_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT4_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT4_INTER1s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT4_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT4_INTER1 findMany
   */
  export type TTIMERECORDS_HEAT4_INTER1FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT4_INTER1Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT4_INTER1s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT4_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT4_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT4_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT4_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT4_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT4_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT4_INTER1s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT4_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT4_INTER1 create
   */
  export type TTIMERECORDS_HEAT4_INTER1CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT4_INTER1Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT4_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT4_INTER1CreateInput, TTIMERECORDS_HEAT4_INTER1UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT4_INTER1 update
   */
  export type TTIMERECORDS_HEAT4_INTER1UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT4_INTER1Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT4_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT4_INTER1UpdateInput, TTIMERECORDS_HEAT4_INTER1UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT4_INTER1 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT4_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT4_INTER1 updateMany
   */
  export type TTIMERECORDS_HEAT4_INTER1UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT4_INTER1s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT4_INTER1UpdateManyMutationInput, TTIMERECORDS_HEAT4_INTER1UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT4_INTER1s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT4_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT4_INTER1 upsert
   */
  export type TTIMERECORDS_HEAT4_INTER1UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT4_INTER1Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT4_INTER1 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT4_INTER1WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT4_INTER1 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT4_INTER1 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT4_INTER1CreateInput, TTIMERECORDS_HEAT4_INTER1UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT4_INTER1 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT4_INTER1UpdateInput, TTIMERECORDS_HEAT4_INTER1UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT4_INTER1 delete
   */
  export type TTIMERECORDS_HEAT4_INTER1DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT4_INTER1Select | null
    /**
     * Filter which TTIMERECORDS_HEAT4_INTER1 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT4_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT4_INTER1 deleteMany
   */
  export type TTIMERECORDS_HEAT4_INTER1DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT4_INTER1s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT4_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT4_INTER1 without action
   */
  export type TTIMERECORDS_HEAT4_INTER1Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT4_INTER1Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT4_INTER2
   */


  export type AggregateTTIMERECORDS_HEAT4_INTER2 = {
    _count: TTIMERECORDS_HEAT4_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT4_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT4_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT4_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT4_INTER2MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT4_INTER2AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT4_INTER2SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT4_INTER2MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT4_INTER2MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT4_INTER2CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT4_INTER2AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT4_INTER2SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT4_INTER2MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT4_INTER2MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT4_INTER2CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT4_INTER2AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT4_INTER2 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT4_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT4_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT4_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT4_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT4_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT4_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT4_INTER2s
    **/
    _count?: true | TTIMERECORDS_HEAT4_INTER2CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT4_INTER2AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT4_INTER2SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT4_INTER2MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT4_INTER2MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT4_INTER2AggregateType<T extends TTIMERECORDS_HEAT4_INTER2AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT4_INTER2]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT4_INTER2[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT4_INTER2[P]>
  }




  export type TTIMERECORDS_HEAT4_INTER2GroupByArgs = {
    where?: TTIMERECORDS_HEAT4_INTER2WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT4_INTER2OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT4_INTER2ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT4_INTER2ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT4_INTER2CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT4_INTER2AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT4_INTER2SumAggregateInputType
    _min?: TTIMERECORDS_HEAT4_INTER2MinAggregateInputType
    _max?: TTIMERECORDS_HEAT4_INTER2MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT4_INTER2GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT4_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT4_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT4_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT4_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT4_INTER2MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT4_INTER2GroupByPayload<T extends TTIMERECORDS_HEAT4_INTER2GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT4_INTER2GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT4_INTER2GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT4_INTER2GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT4_INTER2GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT4_INTER2Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT4_INTER2GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT4_INTER2Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT4_INTER2
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT4_INTER2Args | TTIMERECORDS_HEAT4_INTER2FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT4_INTER2 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT4_INTER2 ? TTIMERECORDS_HEAT4_INTER2[P] : never
  } 
    : TTIMERECORDS_HEAT4_INTER2
  : TTIMERECORDS_HEAT4_INTER2


  type TTIMERECORDS_HEAT4_INTER2CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT4_INTER2FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT4_INTER2CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT4_INTER2Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT4_INTER2 that matches the filter.
     * @param {TTIMERECORDS_HEAT4_INTER2FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT4_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT4_INTER2
     * const tTIMERECORDS_HEAT4_INTER2 = await prisma.tTIMERECORDS_HEAT4_INTER2.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT4_INTER2FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_INTER2FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT4_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_INTER2Client<TTIMERECORDS_HEAT4_INTER2>, Prisma__TTIMERECORDS_HEAT4_INTER2Client<TTIMERECORDS_HEAT4_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_INTER2Client<TTIMERECORDS_HEAT4_INTER2 | null >, Prisma__TTIMERECORDS_HEAT4_INTER2Client<TTIMERECORDS_HEAT4_INTER2GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT4_INTER2 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_INTER2FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT4_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT4_INTER2
     * const tTIMERECORDS_HEAT4_INTER2 = await prisma.tTIMERECORDS_HEAT4_INTER2.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT4_INTER2FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT4_INTER2FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT4_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_INTER2Client<TTIMERECORDS_HEAT4_INTER2>, Prisma__TTIMERECORDS_HEAT4_INTER2Client<TTIMERECORDS_HEAT4_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_INTER2Client<TTIMERECORDS_HEAT4_INTER2 | null >, Prisma__TTIMERECORDS_HEAT4_INTER2Client<TTIMERECORDS_HEAT4_INTER2GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT4_INTER2s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_INTER2FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT4_INTER2s
     * const tTIMERECORDS_HEAT4_INTER2s = await prisma.tTIMERECORDS_HEAT4_INTER2.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT4_INTER2s
     * const tTIMERECORDS_HEAT4_INTER2s = await prisma.tTIMERECORDS_HEAT4_INTER2.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT4_INTER2WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT4_INTER2.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT4_INTER2FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT4_INTER2FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT4_INTER2>>, PrismaPromise<Array<TTIMERECORDS_HEAT4_INTER2GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT4_INTER2.
     * @param {TTIMERECORDS_HEAT4_INTER2CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT4_INTER2.
     * @example
     * // Create one TTIMERECORDS_HEAT4_INTER2
     * const TTIMERECORDS_HEAT4_INTER2 = await prisma.tTIMERECORDS_HEAT4_INTER2.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT4_INTER2
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT4_INTER2CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_INTER2CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_INTER2Client<TTIMERECORDS_HEAT4_INTER2>, Prisma__TTIMERECORDS_HEAT4_INTER2Client<TTIMERECORDS_HEAT4_INTER2GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT4_INTER2.
     * @param {TTIMERECORDS_HEAT4_INTER2DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT4_INTER2.
     * @example
     * // Delete one TTIMERECORDS_HEAT4_INTER2
     * const TTIMERECORDS_HEAT4_INTER2 = await prisma.tTIMERECORDS_HEAT4_INTER2.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT4_INTER2
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT4_INTER2DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_INTER2DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_INTER2Client<TTIMERECORDS_HEAT4_INTER2>, Prisma__TTIMERECORDS_HEAT4_INTER2Client<TTIMERECORDS_HEAT4_INTER2GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT4_INTER2.
     * @param {TTIMERECORDS_HEAT4_INTER2UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT4_INTER2.
     * @example
     * // Update one TTIMERECORDS_HEAT4_INTER2
     * const tTIMERECORDS_HEAT4_INTER2 = await prisma.tTIMERECORDS_HEAT4_INTER2.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT4_INTER2UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_INTER2UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_INTER2Client<TTIMERECORDS_HEAT4_INTER2>, Prisma__TTIMERECORDS_HEAT4_INTER2Client<TTIMERECORDS_HEAT4_INTER2GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT4_INTER2s.
     * @param {TTIMERECORDS_HEAT4_INTER2DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT4_INTER2s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT4_INTER2s
     * const { count } = await prisma.tTIMERECORDS_HEAT4_INTER2.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT4_INTER2DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT4_INTER2DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT4_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_INTER2UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT4_INTER2s
     * const tTIMERECORDS_HEAT4_INTER2 = await prisma.tTIMERECORDS_HEAT4_INTER2.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT4_INTER2UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_INTER2UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT4_INTER2.
     * @param {TTIMERECORDS_HEAT4_INTER2UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT4_INTER2.
     * @example
     * // Update or create a TTIMERECORDS_HEAT4_INTER2
     * const tTIMERECORDS_HEAT4_INTER2 = await prisma.tTIMERECORDS_HEAT4_INTER2.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT4_INTER2
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT4_INTER2 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT4_INTER2UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_INTER2UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_INTER2Client<TTIMERECORDS_HEAT4_INTER2>, Prisma__TTIMERECORDS_HEAT4_INTER2Client<TTIMERECORDS_HEAT4_INTER2GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT4_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_INTER2CountArgs} args - Arguments to filter TTIMERECORDS_HEAT4_INTER2s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT4_INTER2s
     * const count = await prisma.tTIMERECORDS_HEAT4_INTER2.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT4_INTER2s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT4_INTER2CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT4_INTER2CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT4_INTER2CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT4_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_INTER2AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT4_INTER2AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT4_INTER2AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT4_INTER2AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT4_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_INTER2GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT4_INTER2GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT4_INTER2GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT4_INTER2GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT4_INTER2GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT4_INTER2GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT4_INTER2.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT4_INTER2Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT4_INTER2 findUnique
   */
  export type TTIMERECORDS_HEAT4_INTER2FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT4_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT4_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT4_INTER2 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT4_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT4_INTER2 findFirst
   */
  export type TTIMERECORDS_HEAT4_INTER2FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT4_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT4_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT4_INTER2 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT4_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT4_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT4_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT4_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT4_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT4_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT4_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT4_INTER2s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT4_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT4_INTER2 findMany
   */
  export type TTIMERECORDS_HEAT4_INTER2FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT4_INTER2Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT4_INTER2s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT4_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT4_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT4_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT4_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT4_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT4_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT4_INTER2s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT4_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT4_INTER2 create
   */
  export type TTIMERECORDS_HEAT4_INTER2CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT4_INTER2Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT4_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT4_INTER2CreateInput, TTIMERECORDS_HEAT4_INTER2UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT4_INTER2 update
   */
  export type TTIMERECORDS_HEAT4_INTER2UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT4_INTER2Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT4_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT4_INTER2UpdateInput, TTIMERECORDS_HEAT4_INTER2UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT4_INTER2 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT4_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT4_INTER2 updateMany
   */
  export type TTIMERECORDS_HEAT4_INTER2UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT4_INTER2s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT4_INTER2UpdateManyMutationInput, TTIMERECORDS_HEAT4_INTER2UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT4_INTER2s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT4_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT4_INTER2 upsert
   */
  export type TTIMERECORDS_HEAT4_INTER2UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT4_INTER2Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT4_INTER2 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT4_INTER2WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT4_INTER2 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT4_INTER2 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT4_INTER2CreateInput, TTIMERECORDS_HEAT4_INTER2UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT4_INTER2 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT4_INTER2UpdateInput, TTIMERECORDS_HEAT4_INTER2UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT4_INTER2 delete
   */
  export type TTIMERECORDS_HEAT4_INTER2DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT4_INTER2Select | null
    /**
     * Filter which TTIMERECORDS_HEAT4_INTER2 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT4_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT4_INTER2 deleteMany
   */
  export type TTIMERECORDS_HEAT4_INTER2DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT4_INTER2s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT4_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT4_INTER2 without action
   */
  export type TTIMERECORDS_HEAT4_INTER2Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT4_INTER2Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT4_START
   */


  export type AggregateTTIMERECORDS_HEAT4_START = {
    _count: TTIMERECORDS_HEAT4_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT4_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT4_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT4_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT4_STARTMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT4_STARTAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT4_STARTSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT4_STARTMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT4_STARTMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT4_STARTCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT4_STARTAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT4_STARTSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT4_STARTMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT4_STARTMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT4_STARTCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT4_STARTAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT4_START to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT4_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT4_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT4_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT4_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT4_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT4_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT4_STARTS
    **/
    _count?: true | TTIMERECORDS_HEAT4_STARTCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT4_STARTAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT4_STARTSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT4_STARTMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT4_STARTMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT4_STARTAggregateType<T extends TTIMERECORDS_HEAT4_STARTAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT4_START]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT4_START[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT4_START[P]>
  }




  export type TTIMERECORDS_HEAT4_STARTGroupByArgs = {
    where?: TTIMERECORDS_HEAT4_STARTWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT4_STARTOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT4_STARTScalarFieldEnum>
    having?: TTIMERECORDS_HEAT4_STARTScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT4_STARTCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT4_STARTAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT4_STARTSumAggregateInputType
    _min?: TTIMERECORDS_HEAT4_STARTMinAggregateInputType
    _max?: TTIMERECORDS_HEAT4_STARTMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT4_STARTGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT4_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT4_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT4_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT4_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT4_STARTMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT4_STARTGroupByPayload<T extends TTIMERECORDS_HEAT4_STARTGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT4_STARTGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT4_STARTGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT4_STARTGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT4_STARTGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT4_STARTSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT4_STARTGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT4_STARTArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT4_START
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT4_STARTArgs | TTIMERECORDS_HEAT4_STARTFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT4_START 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT4_START ? TTIMERECORDS_HEAT4_START[P] : never
  } 
    : TTIMERECORDS_HEAT4_START
  : TTIMERECORDS_HEAT4_START


  type TTIMERECORDS_HEAT4_STARTCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT4_STARTFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT4_STARTCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT4_STARTDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT4_START that matches the filter.
     * @param {TTIMERECORDS_HEAT4_STARTFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT4_START
     * @example
     * // Get one TTIMERECORDS_HEAT4_START
     * const tTIMERECORDS_HEAT4_START = await prisma.tTIMERECORDS_HEAT4_START.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT4_STARTFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_STARTFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT4_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_STARTClient<TTIMERECORDS_HEAT4_START>, Prisma__TTIMERECORDS_HEAT4_STARTClient<TTIMERECORDS_HEAT4_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_STARTClient<TTIMERECORDS_HEAT4_START | null >, Prisma__TTIMERECORDS_HEAT4_STARTClient<TTIMERECORDS_HEAT4_STARTGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT4_START that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_STARTFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT4_START
     * @example
     * // Get one TTIMERECORDS_HEAT4_START
     * const tTIMERECORDS_HEAT4_START = await prisma.tTIMERECORDS_HEAT4_START.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT4_STARTFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT4_STARTFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT4_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_STARTClient<TTIMERECORDS_HEAT4_START>, Prisma__TTIMERECORDS_HEAT4_STARTClient<TTIMERECORDS_HEAT4_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_STARTClient<TTIMERECORDS_HEAT4_START | null >, Prisma__TTIMERECORDS_HEAT4_STARTClient<TTIMERECORDS_HEAT4_STARTGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT4_STARTS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_STARTFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT4_STARTS
     * const tTIMERECORDS_HEAT4_STARTS = await prisma.tTIMERECORDS_HEAT4_START.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT4_STARTS
     * const tTIMERECORDS_HEAT4_STARTS = await prisma.tTIMERECORDS_HEAT4_START.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT4_STARTWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT4_START.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT4_STARTFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT4_STARTFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT4_START>>, PrismaPromise<Array<TTIMERECORDS_HEAT4_STARTGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT4_START.
     * @param {TTIMERECORDS_HEAT4_STARTCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT4_START.
     * @example
     * // Create one TTIMERECORDS_HEAT4_START
     * const TTIMERECORDS_HEAT4_START = await prisma.tTIMERECORDS_HEAT4_START.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT4_START
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT4_STARTCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_STARTCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_STARTClient<TTIMERECORDS_HEAT4_START>, Prisma__TTIMERECORDS_HEAT4_STARTClient<TTIMERECORDS_HEAT4_STARTGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT4_START.
     * @param {TTIMERECORDS_HEAT4_STARTDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT4_START.
     * @example
     * // Delete one TTIMERECORDS_HEAT4_START
     * const TTIMERECORDS_HEAT4_START = await prisma.tTIMERECORDS_HEAT4_START.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT4_START
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT4_STARTDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_STARTDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_STARTClient<TTIMERECORDS_HEAT4_START>, Prisma__TTIMERECORDS_HEAT4_STARTClient<TTIMERECORDS_HEAT4_STARTGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT4_START.
     * @param {TTIMERECORDS_HEAT4_STARTUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT4_START.
     * @example
     * // Update one TTIMERECORDS_HEAT4_START
     * const tTIMERECORDS_HEAT4_START = await prisma.tTIMERECORDS_HEAT4_START.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT4_STARTUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_STARTUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_STARTClient<TTIMERECORDS_HEAT4_START>, Prisma__TTIMERECORDS_HEAT4_STARTClient<TTIMERECORDS_HEAT4_STARTGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT4_STARTS.
     * @param {TTIMERECORDS_HEAT4_STARTDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT4_STARTS to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT4_STARTS
     * const { count } = await prisma.tTIMERECORDS_HEAT4_START.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT4_STARTDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT4_STARTDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT4_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_STARTUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT4_STARTS
     * const tTIMERECORDS_HEAT4_START = await prisma.tTIMERECORDS_HEAT4_START.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT4_STARTUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_STARTUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT4_START.
     * @param {TTIMERECORDS_HEAT4_STARTUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT4_START.
     * @example
     * // Update or create a TTIMERECORDS_HEAT4_START
     * const tTIMERECORDS_HEAT4_START = await prisma.tTIMERECORDS_HEAT4_START.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT4_START
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT4_START we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT4_STARTUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT4_STARTUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT4_STARTClient<TTIMERECORDS_HEAT4_START>, Prisma__TTIMERECORDS_HEAT4_STARTClient<TTIMERECORDS_HEAT4_STARTGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT4_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_STARTCountArgs} args - Arguments to filter TTIMERECORDS_HEAT4_STARTS to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT4_STARTS
     * const count = await prisma.tTIMERECORDS_HEAT4_START.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT4_STARTS we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT4_STARTCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT4_STARTCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT4_STARTCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT4_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_STARTAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT4_STARTAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT4_STARTAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT4_STARTAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT4_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT4_STARTGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT4_STARTGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT4_STARTGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT4_STARTGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT4_STARTGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT4_STARTGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT4_START.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT4_STARTClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT4_START findUnique
   */
  export type TTIMERECORDS_HEAT4_STARTFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_START
     * 
    **/
    select?: TTIMERECORDS_HEAT4_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT4_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT4_START to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT4_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT4_START findFirst
   */
  export type TTIMERECORDS_HEAT4_STARTFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_START
     * 
    **/
    select?: TTIMERECORDS_HEAT4_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT4_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT4_START to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT4_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT4_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT4_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT4_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT4_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT4_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT4_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT4_STARTS.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT4_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT4_START findMany
   */
  export type TTIMERECORDS_HEAT4_STARTFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_START
     * 
    **/
    select?: TTIMERECORDS_HEAT4_STARTSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT4_STARTS to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT4_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT4_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT4_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT4_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT4_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT4_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT4_STARTS.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT4_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT4_START create
   */
  export type TTIMERECORDS_HEAT4_STARTCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_START
     * 
    **/
    select?: TTIMERECORDS_HEAT4_STARTSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT4_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT4_STARTCreateInput, TTIMERECORDS_HEAT4_STARTUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT4_START update
   */
  export type TTIMERECORDS_HEAT4_STARTUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_START
     * 
    **/
    select?: TTIMERECORDS_HEAT4_STARTSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT4_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT4_STARTUpdateInput, TTIMERECORDS_HEAT4_STARTUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT4_START to update.
     * 
    **/
    where: TTIMERECORDS_HEAT4_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT4_START updateMany
   */
  export type TTIMERECORDS_HEAT4_STARTUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT4_STARTS.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT4_STARTUpdateManyMutationInput, TTIMERECORDS_HEAT4_STARTUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT4_STARTS to update
     * 
    **/
    where?: TTIMERECORDS_HEAT4_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT4_START upsert
   */
  export type TTIMERECORDS_HEAT4_STARTUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_START
     * 
    **/
    select?: TTIMERECORDS_HEAT4_STARTSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT4_START to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT4_STARTWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT4_START found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT4_START with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT4_STARTCreateInput, TTIMERECORDS_HEAT4_STARTUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT4_START was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT4_STARTUpdateInput, TTIMERECORDS_HEAT4_STARTUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT4_START delete
   */
  export type TTIMERECORDS_HEAT4_STARTDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_START
     * 
    **/
    select?: TTIMERECORDS_HEAT4_STARTSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT4_START to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT4_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT4_START deleteMany
   */
  export type TTIMERECORDS_HEAT4_STARTDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT4_STARTS to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT4_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT4_START without action
   */
  export type TTIMERECORDS_HEAT4_STARTArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT4_START
     * 
    **/
    select?: TTIMERECORDS_HEAT4_STARTSelect | null
  }



  /**
   * Model TTIMERECORDS_HEAT5_FINISH
   */


  export type AggregateTTIMERECORDS_HEAT5_FINISH = {
    _count: TTIMERECORDS_HEAT5_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT5_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT5_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT5_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT5_FINISHMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT5_FINISHAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT5_FINISHSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT5_FINISHMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT5_FINISHMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT5_FINISHCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT5_FINISHAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT5_FINISHSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT5_FINISHMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT5_FINISHMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT5_FINISHCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT5_FINISHAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT5_FINISH to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT5_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT5_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT5_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT5_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT5_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT5_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT5_FINISHES
    **/
    _count?: true | TTIMERECORDS_HEAT5_FINISHCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT5_FINISHAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT5_FINISHSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT5_FINISHMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT5_FINISHMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT5_FINISHAggregateType<T extends TTIMERECORDS_HEAT5_FINISHAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT5_FINISH]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT5_FINISH[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT5_FINISH[P]>
  }




  export type TTIMERECORDS_HEAT5_FINISHGroupByArgs = {
    where?: TTIMERECORDS_HEAT5_FINISHWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT5_FINISHOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT5_FINISHScalarFieldEnum>
    having?: TTIMERECORDS_HEAT5_FINISHScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT5_FINISHCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT5_FINISHAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT5_FINISHSumAggregateInputType
    _min?: TTIMERECORDS_HEAT5_FINISHMinAggregateInputType
    _max?: TTIMERECORDS_HEAT5_FINISHMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT5_FINISHGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT5_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT5_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT5_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT5_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT5_FINISHMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT5_FINISHGroupByPayload<T extends TTIMERECORDS_HEAT5_FINISHGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT5_FINISHGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT5_FINISHGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT5_FINISHGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT5_FINISHGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT5_FINISHSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT5_FINISHGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT5_FINISHArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT5_FINISH
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT5_FINISHArgs | TTIMERECORDS_HEAT5_FINISHFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT5_FINISH 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT5_FINISH ? TTIMERECORDS_HEAT5_FINISH[P] : never
  } 
    : TTIMERECORDS_HEAT5_FINISH
  : TTIMERECORDS_HEAT5_FINISH


  type TTIMERECORDS_HEAT5_FINISHCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT5_FINISHFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT5_FINISHCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT5_FINISHDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT5_FINISH that matches the filter.
     * @param {TTIMERECORDS_HEAT5_FINISHFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT5_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT5_FINISH
     * const tTIMERECORDS_HEAT5_FINISH = await prisma.tTIMERECORDS_HEAT5_FINISH.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT5_FINISHFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_FINISHFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT5_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_FINISHClient<TTIMERECORDS_HEAT5_FINISH>, Prisma__TTIMERECORDS_HEAT5_FINISHClient<TTIMERECORDS_HEAT5_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_FINISHClient<TTIMERECORDS_HEAT5_FINISH | null >, Prisma__TTIMERECORDS_HEAT5_FINISHClient<TTIMERECORDS_HEAT5_FINISHGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT5_FINISH that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_FINISHFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT5_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT5_FINISH
     * const tTIMERECORDS_HEAT5_FINISH = await prisma.tTIMERECORDS_HEAT5_FINISH.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT5_FINISHFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT5_FINISHFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT5_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_FINISHClient<TTIMERECORDS_HEAT5_FINISH>, Prisma__TTIMERECORDS_HEAT5_FINISHClient<TTIMERECORDS_HEAT5_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_FINISHClient<TTIMERECORDS_HEAT5_FINISH | null >, Prisma__TTIMERECORDS_HEAT5_FINISHClient<TTIMERECORDS_HEAT5_FINISHGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT5_FINISHES that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_FINISHFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT5_FINISHES
     * const tTIMERECORDS_HEAT5_FINISHES = await prisma.tTIMERECORDS_HEAT5_FINISH.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT5_FINISHES
     * const tTIMERECORDS_HEAT5_FINISHES = await prisma.tTIMERECORDS_HEAT5_FINISH.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT5_FINISHWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT5_FINISH.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT5_FINISHFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT5_FINISHFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT5_FINISH>>, PrismaPromise<Array<TTIMERECORDS_HEAT5_FINISHGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT5_FINISH.
     * @param {TTIMERECORDS_HEAT5_FINISHCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT5_FINISH.
     * @example
     * // Create one TTIMERECORDS_HEAT5_FINISH
     * const TTIMERECORDS_HEAT5_FINISH = await prisma.tTIMERECORDS_HEAT5_FINISH.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT5_FINISH
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT5_FINISHCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_FINISHCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_FINISHClient<TTIMERECORDS_HEAT5_FINISH>, Prisma__TTIMERECORDS_HEAT5_FINISHClient<TTIMERECORDS_HEAT5_FINISHGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT5_FINISH.
     * @param {TTIMERECORDS_HEAT5_FINISHDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT5_FINISH.
     * @example
     * // Delete one TTIMERECORDS_HEAT5_FINISH
     * const TTIMERECORDS_HEAT5_FINISH = await prisma.tTIMERECORDS_HEAT5_FINISH.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT5_FINISH
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT5_FINISHDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_FINISHDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_FINISHClient<TTIMERECORDS_HEAT5_FINISH>, Prisma__TTIMERECORDS_HEAT5_FINISHClient<TTIMERECORDS_HEAT5_FINISHGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT5_FINISH.
     * @param {TTIMERECORDS_HEAT5_FINISHUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT5_FINISH.
     * @example
     * // Update one TTIMERECORDS_HEAT5_FINISH
     * const tTIMERECORDS_HEAT5_FINISH = await prisma.tTIMERECORDS_HEAT5_FINISH.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT5_FINISHUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_FINISHUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_FINISHClient<TTIMERECORDS_HEAT5_FINISH>, Prisma__TTIMERECORDS_HEAT5_FINISHClient<TTIMERECORDS_HEAT5_FINISHGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT5_FINISHES.
     * @param {TTIMERECORDS_HEAT5_FINISHDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT5_FINISHES to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT5_FINISHES
     * const { count } = await prisma.tTIMERECORDS_HEAT5_FINISH.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT5_FINISHDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT5_FINISHDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT5_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_FINISHUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT5_FINISHES
     * const tTIMERECORDS_HEAT5_FINISH = await prisma.tTIMERECORDS_HEAT5_FINISH.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT5_FINISHUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_FINISHUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT5_FINISH.
     * @param {TTIMERECORDS_HEAT5_FINISHUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT5_FINISH.
     * @example
     * // Update or create a TTIMERECORDS_HEAT5_FINISH
     * const tTIMERECORDS_HEAT5_FINISH = await prisma.tTIMERECORDS_HEAT5_FINISH.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT5_FINISH
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT5_FINISH we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT5_FINISHUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_FINISHUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_FINISHClient<TTIMERECORDS_HEAT5_FINISH>, Prisma__TTIMERECORDS_HEAT5_FINISHClient<TTIMERECORDS_HEAT5_FINISHGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT5_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_FINISHCountArgs} args - Arguments to filter TTIMERECORDS_HEAT5_FINISHES to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT5_FINISHES
     * const count = await prisma.tTIMERECORDS_HEAT5_FINISH.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT5_FINISHES we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT5_FINISHCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT5_FINISHCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT5_FINISHCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT5_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_FINISHAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT5_FINISHAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT5_FINISHAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT5_FINISHAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT5_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_FINISHGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT5_FINISHGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT5_FINISHGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT5_FINISHGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT5_FINISHGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT5_FINISHGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT5_FINISH.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT5_FINISHClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT5_FINISH findUnique
   */
  export type TTIMERECORDS_HEAT5_FINISHFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT5_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT5_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT5_FINISH to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT5_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT5_FINISH findFirst
   */
  export type TTIMERECORDS_HEAT5_FINISHFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT5_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT5_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT5_FINISH to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT5_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT5_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT5_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT5_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT5_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT5_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT5_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT5_FINISHES.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT5_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT5_FINISH findMany
   */
  export type TTIMERECORDS_HEAT5_FINISHFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT5_FINISHSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT5_FINISHES to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT5_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT5_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT5_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT5_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT5_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT5_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT5_FINISHES.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT5_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT5_FINISH create
   */
  export type TTIMERECORDS_HEAT5_FINISHCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT5_FINISHSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT5_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT5_FINISHCreateInput, TTIMERECORDS_HEAT5_FINISHUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT5_FINISH update
   */
  export type TTIMERECORDS_HEAT5_FINISHUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT5_FINISHSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT5_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT5_FINISHUpdateInput, TTIMERECORDS_HEAT5_FINISHUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT5_FINISH to update.
     * 
    **/
    where: TTIMERECORDS_HEAT5_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT5_FINISH updateMany
   */
  export type TTIMERECORDS_HEAT5_FINISHUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT5_FINISHES.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT5_FINISHUpdateManyMutationInput, TTIMERECORDS_HEAT5_FINISHUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT5_FINISHES to update
     * 
    **/
    where?: TTIMERECORDS_HEAT5_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT5_FINISH upsert
   */
  export type TTIMERECORDS_HEAT5_FINISHUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT5_FINISHSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT5_FINISH to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT5_FINISHWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT5_FINISH found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT5_FINISH with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT5_FINISHCreateInput, TTIMERECORDS_HEAT5_FINISHUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT5_FINISH was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT5_FINISHUpdateInput, TTIMERECORDS_HEAT5_FINISHUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT5_FINISH delete
   */
  export type TTIMERECORDS_HEAT5_FINISHDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT5_FINISHSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT5_FINISH to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT5_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT5_FINISH deleteMany
   */
  export type TTIMERECORDS_HEAT5_FINISHDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT5_FINISHES to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT5_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT5_FINISH without action
   */
  export type TTIMERECORDS_HEAT5_FINISHArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT5_FINISHSelect | null
  }



  /**
   * Model TTIMERECORDS_HEAT5_INTER1
   */


  export type AggregateTTIMERECORDS_HEAT5_INTER1 = {
    _count: TTIMERECORDS_HEAT5_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT5_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT5_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT5_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT5_INTER1MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT5_INTER1AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT5_INTER1SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT5_INTER1MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT5_INTER1MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT5_INTER1CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT5_INTER1AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT5_INTER1SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT5_INTER1MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT5_INTER1MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT5_INTER1CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT5_INTER1AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT5_INTER1 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT5_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT5_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT5_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT5_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT5_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT5_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT5_INTER1s
    **/
    _count?: true | TTIMERECORDS_HEAT5_INTER1CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT5_INTER1AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT5_INTER1SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT5_INTER1MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT5_INTER1MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT5_INTER1AggregateType<T extends TTIMERECORDS_HEAT5_INTER1AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT5_INTER1]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT5_INTER1[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT5_INTER1[P]>
  }




  export type TTIMERECORDS_HEAT5_INTER1GroupByArgs = {
    where?: TTIMERECORDS_HEAT5_INTER1WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT5_INTER1OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT5_INTER1ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT5_INTER1ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT5_INTER1CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT5_INTER1AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT5_INTER1SumAggregateInputType
    _min?: TTIMERECORDS_HEAT5_INTER1MinAggregateInputType
    _max?: TTIMERECORDS_HEAT5_INTER1MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT5_INTER1GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT5_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT5_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT5_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT5_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT5_INTER1MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT5_INTER1GroupByPayload<T extends TTIMERECORDS_HEAT5_INTER1GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT5_INTER1GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT5_INTER1GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT5_INTER1GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT5_INTER1GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT5_INTER1Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT5_INTER1GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT5_INTER1Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT5_INTER1
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT5_INTER1Args | TTIMERECORDS_HEAT5_INTER1FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT5_INTER1 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT5_INTER1 ? TTIMERECORDS_HEAT5_INTER1[P] : never
  } 
    : TTIMERECORDS_HEAT5_INTER1
  : TTIMERECORDS_HEAT5_INTER1


  type TTIMERECORDS_HEAT5_INTER1CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT5_INTER1FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT5_INTER1CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT5_INTER1Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT5_INTER1 that matches the filter.
     * @param {TTIMERECORDS_HEAT5_INTER1FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT5_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT5_INTER1
     * const tTIMERECORDS_HEAT5_INTER1 = await prisma.tTIMERECORDS_HEAT5_INTER1.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT5_INTER1FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_INTER1FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT5_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_INTER1Client<TTIMERECORDS_HEAT5_INTER1>, Prisma__TTIMERECORDS_HEAT5_INTER1Client<TTIMERECORDS_HEAT5_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_INTER1Client<TTIMERECORDS_HEAT5_INTER1 | null >, Prisma__TTIMERECORDS_HEAT5_INTER1Client<TTIMERECORDS_HEAT5_INTER1GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT5_INTER1 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_INTER1FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT5_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT5_INTER1
     * const tTIMERECORDS_HEAT5_INTER1 = await prisma.tTIMERECORDS_HEAT5_INTER1.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT5_INTER1FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT5_INTER1FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT5_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_INTER1Client<TTIMERECORDS_HEAT5_INTER1>, Prisma__TTIMERECORDS_HEAT5_INTER1Client<TTIMERECORDS_HEAT5_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_INTER1Client<TTIMERECORDS_HEAT5_INTER1 | null >, Prisma__TTIMERECORDS_HEAT5_INTER1Client<TTIMERECORDS_HEAT5_INTER1GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT5_INTER1s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_INTER1FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT5_INTER1s
     * const tTIMERECORDS_HEAT5_INTER1s = await prisma.tTIMERECORDS_HEAT5_INTER1.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT5_INTER1s
     * const tTIMERECORDS_HEAT5_INTER1s = await prisma.tTIMERECORDS_HEAT5_INTER1.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT5_INTER1WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT5_INTER1.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT5_INTER1FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT5_INTER1FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT5_INTER1>>, PrismaPromise<Array<TTIMERECORDS_HEAT5_INTER1GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT5_INTER1.
     * @param {TTIMERECORDS_HEAT5_INTER1CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT5_INTER1.
     * @example
     * // Create one TTIMERECORDS_HEAT5_INTER1
     * const TTIMERECORDS_HEAT5_INTER1 = await prisma.tTIMERECORDS_HEAT5_INTER1.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT5_INTER1
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT5_INTER1CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_INTER1CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_INTER1Client<TTIMERECORDS_HEAT5_INTER1>, Prisma__TTIMERECORDS_HEAT5_INTER1Client<TTIMERECORDS_HEAT5_INTER1GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT5_INTER1.
     * @param {TTIMERECORDS_HEAT5_INTER1DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT5_INTER1.
     * @example
     * // Delete one TTIMERECORDS_HEAT5_INTER1
     * const TTIMERECORDS_HEAT5_INTER1 = await prisma.tTIMERECORDS_HEAT5_INTER1.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT5_INTER1
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT5_INTER1DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_INTER1DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_INTER1Client<TTIMERECORDS_HEAT5_INTER1>, Prisma__TTIMERECORDS_HEAT5_INTER1Client<TTIMERECORDS_HEAT5_INTER1GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT5_INTER1.
     * @param {TTIMERECORDS_HEAT5_INTER1UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT5_INTER1.
     * @example
     * // Update one TTIMERECORDS_HEAT5_INTER1
     * const tTIMERECORDS_HEAT5_INTER1 = await prisma.tTIMERECORDS_HEAT5_INTER1.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT5_INTER1UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_INTER1UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_INTER1Client<TTIMERECORDS_HEAT5_INTER1>, Prisma__TTIMERECORDS_HEAT5_INTER1Client<TTIMERECORDS_HEAT5_INTER1GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT5_INTER1s.
     * @param {TTIMERECORDS_HEAT5_INTER1DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT5_INTER1s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT5_INTER1s
     * const { count } = await prisma.tTIMERECORDS_HEAT5_INTER1.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT5_INTER1DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT5_INTER1DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT5_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_INTER1UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT5_INTER1s
     * const tTIMERECORDS_HEAT5_INTER1 = await prisma.tTIMERECORDS_HEAT5_INTER1.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT5_INTER1UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_INTER1UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT5_INTER1.
     * @param {TTIMERECORDS_HEAT5_INTER1UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT5_INTER1.
     * @example
     * // Update or create a TTIMERECORDS_HEAT5_INTER1
     * const tTIMERECORDS_HEAT5_INTER1 = await prisma.tTIMERECORDS_HEAT5_INTER1.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT5_INTER1
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT5_INTER1 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT5_INTER1UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_INTER1UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_INTER1Client<TTIMERECORDS_HEAT5_INTER1>, Prisma__TTIMERECORDS_HEAT5_INTER1Client<TTIMERECORDS_HEAT5_INTER1GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT5_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_INTER1CountArgs} args - Arguments to filter TTIMERECORDS_HEAT5_INTER1s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT5_INTER1s
     * const count = await prisma.tTIMERECORDS_HEAT5_INTER1.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT5_INTER1s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT5_INTER1CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT5_INTER1CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT5_INTER1CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT5_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_INTER1AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT5_INTER1AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT5_INTER1AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT5_INTER1AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT5_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_INTER1GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT5_INTER1GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT5_INTER1GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT5_INTER1GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT5_INTER1GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT5_INTER1GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT5_INTER1.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT5_INTER1Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT5_INTER1 findUnique
   */
  export type TTIMERECORDS_HEAT5_INTER1FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT5_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT5_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT5_INTER1 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT5_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT5_INTER1 findFirst
   */
  export type TTIMERECORDS_HEAT5_INTER1FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT5_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT5_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT5_INTER1 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT5_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT5_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT5_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT5_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT5_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT5_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT5_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT5_INTER1s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT5_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT5_INTER1 findMany
   */
  export type TTIMERECORDS_HEAT5_INTER1FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT5_INTER1Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT5_INTER1s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT5_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT5_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT5_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT5_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT5_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT5_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT5_INTER1s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT5_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT5_INTER1 create
   */
  export type TTIMERECORDS_HEAT5_INTER1CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT5_INTER1Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT5_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT5_INTER1CreateInput, TTIMERECORDS_HEAT5_INTER1UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT5_INTER1 update
   */
  export type TTIMERECORDS_HEAT5_INTER1UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT5_INTER1Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT5_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT5_INTER1UpdateInput, TTIMERECORDS_HEAT5_INTER1UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT5_INTER1 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT5_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT5_INTER1 updateMany
   */
  export type TTIMERECORDS_HEAT5_INTER1UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT5_INTER1s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT5_INTER1UpdateManyMutationInput, TTIMERECORDS_HEAT5_INTER1UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT5_INTER1s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT5_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT5_INTER1 upsert
   */
  export type TTIMERECORDS_HEAT5_INTER1UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT5_INTER1Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT5_INTER1 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT5_INTER1WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT5_INTER1 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT5_INTER1 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT5_INTER1CreateInput, TTIMERECORDS_HEAT5_INTER1UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT5_INTER1 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT5_INTER1UpdateInput, TTIMERECORDS_HEAT5_INTER1UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT5_INTER1 delete
   */
  export type TTIMERECORDS_HEAT5_INTER1DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT5_INTER1Select | null
    /**
     * Filter which TTIMERECORDS_HEAT5_INTER1 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT5_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT5_INTER1 deleteMany
   */
  export type TTIMERECORDS_HEAT5_INTER1DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT5_INTER1s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT5_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT5_INTER1 without action
   */
  export type TTIMERECORDS_HEAT5_INTER1Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT5_INTER1Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT5_INTER2
   */


  export type AggregateTTIMERECORDS_HEAT5_INTER2 = {
    _count: TTIMERECORDS_HEAT5_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT5_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT5_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT5_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT5_INTER2MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT5_INTER2AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT5_INTER2SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT5_INTER2MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT5_INTER2MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT5_INTER2CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT5_INTER2AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT5_INTER2SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT5_INTER2MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT5_INTER2MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT5_INTER2CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT5_INTER2AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT5_INTER2 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT5_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT5_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT5_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT5_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT5_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT5_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT5_INTER2s
    **/
    _count?: true | TTIMERECORDS_HEAT5_INTER2CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT5_INTER2AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT5_INTER2SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT5_INTER2MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT5_INTER2MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT5_INTER2AggregateType<T extends TTIMERECORDS_HEAT5_INTER2AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT5_INTER2]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT5_INTER2[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT5_INTER2[P]>
  }




  export type TTIMERECORDS_HEAT5_INTER2GroupByArgs = {
    where?: TTIMERECORDS_HEAT5_INTER2WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT5_INTER2OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT5_INTER2ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT5_INTER2ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT5_INTER2CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT5_INTER2AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT5_INTER2SumAggregateInputType
    _min?: TTIMERECORDS_HEAT5_INTER2MinAggregateInputType
    _max?: TTIMERECORDS_HEAT5_INTER2MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT5_INTER2GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT5_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT5_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT5_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT5_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT5_INTER2MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT5_INTER2GroupByPayload<T extends TTIMERECORDS_HEAT5_INTER2GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT5_INTER2GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT5_INTER2GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT5_INTER2GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT5_INTER2GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT5_INTER2Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT5_INTER2GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT5_INTER2Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT5_INTER2
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT5_INTER2Args | TTIMERECORDS_HEAT5_INTER2FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT5_INTER2 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT5_INTER2 ? TTIMERECORDS_HEAT5_INTER2[P] : never
  } 
    : TTIMERECORDS_HEAT5_INTER2
  : TTIMERECORDS_HEAT5_INTER2


  type TTIMERECORDS_HEAT5_INTER2CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT5_INTER2FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT5_INTER2CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT5_INTER2Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT5_INTER2 that matches the filter.
     * @param {TTIMERECORDS_HEAT5_INTER2FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT5_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT5_INTER2
     * const tTIMERECORDS_HEAT5_INTER2 = await prisma.tTIMERECORDS_HEAT5_INTER2.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT5_INTER2FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_INTER2FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT5_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_INTER2Client<TTIMERECORDS_HEAT5_INTER2>, Prisma__TTIMERECORDS_HEAT5_INTER2Client<TTIMERECORDS_HEAT5_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_INTER2Client<TTIMERECORDS_HEAT5_INTER2 | null >, Prisma__TTIMERECORDS_HEAT5_INTER2Client<TTIMERECORDS_HEAT5_INTER2GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT5_INTER2 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_INTER2FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT5_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT5_INTER2
     * const tTIMERECORDS_HEAT5_INTER2 = await prisma.tTIMERECORDS_HEAT5_INTER2.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT5_INTER2FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT5_INTER2FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT5_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_INTER2Client<TTIMERECORDS_HEAT5_INTER2>, Prisma__TTIMERECORDS_HEAT5_INTER2Client<TTIMERECORDS_HEAT5_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_INTER2Client<TTIMERECORDS_HEAT5_INTER2 | null >, Prisma__TTIMERECORDS_HEAT5_INTER2Client<TTIMERECORDS_HEAT5_INTER2GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT5_INTER2s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_INTER2FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT5_INTER2s
     * const tTIMERECORDS_HEAT5_INTER2s = await prisma.tTIMERECORDS_HEAT5_INTER2.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT5_INTER2s
     * const tTIMERECORDS_HEAT5_INTER2s = await prisma.tTIMERECORDS_HEAT5_INTER2.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT5_INTER2WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT5_INTER2.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT5_INTER2FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT5_INTER2FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT5_INTER2>>, PrismaPromise<Array<TTIMERECORDS_HEAT5_INTER2GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT5_INTER2.
     * @param {TTIMERECORDS_HEAT5_INTER2CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT5_INTER2.
     * @example
     * // Create one TTIMERECORDS_HEAT5_INTER2
     * const TTIMERECORDS_HEAT5_INTER2 = await prisma.tTIMERECORDS_HEAT5_INTER2.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT5_INTER2
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT5_INTER2CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_INTER2CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_INTER2Client<TTIMERECORDS_HEAT5_INTER2>, Prisma__TTIMERECORDS_HEAT5_INTER2Client<TTIMERECORDS_HEAT5_INTER2GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT5_INTER2.
     * @param {TTIMERECORDS_HEAT5_INTER2DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT5_INTER2.
     * @example
     * // Delete one TTIMERECORDS_HEAT5_INTER2
     * const TTIMERECORDS_HEAT5_INTER2 = await prisma.tTIMERECORDS_HEAT5_INTER2.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT5_INTER2
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT5_INTER2DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_INTER2DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_INTER2Client<TTIMERECORDS_HEAT5_INTER2>, Prisma__TTIMERECORDS_HEAT5_INTER2Client<TTIMERECORDS_HEAT5_INTER2GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT5_INTER2.
     * @param {TTIMERECORDS_HEAT5_INTER2UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT5_INTER2.
     * @example
     * // Update one TTIMERECORDS_HEAT5_INTER2
     * const tTIMERECORDS_HEAT5_INTER2 = await prisma.tTIMERECORDS_HEAT5_INTER2.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT5_INTER2UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_INTER2UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_INTER2Client<TTIMERECORDS_HEAT5_INTER2>, Prisma__TTIMERECORDS_HEAT5_INTER2Client<TTIMERECORDS_HEAT5_INTER2GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT5_INTER2s.
     * @param {TTIMERECORDS_HEAT5_INTER2DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT5_INTER2s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT5_INTER2s
     * const { count } = await prisma.tTIMERECORDS_HEAT5_INTER2.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT5_INTER2DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT5_INTER2DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT5_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_INTER2UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT5_INTER2s
     * const tTIMERECORDS_HEAT5_INTER2 = await prisma.tTIMERECORDS_HEAT5_INTER2.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT5_INTER2UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_INTER2UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT5_INTER2.
     * @param {TTIMERECORDS_HEAT5_INTER2UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT5_INTER2.
     * @example
     * // Update or create a TTIMERECORDS_HEAT5_INTER2
     * const tTIMERECORDS_HEAT5_INTER2 = await prisma.tTIMERECORDS_HEAT5_INTER2.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT5_INTER2
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT5_INTER2 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT5_INTER2UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_INTER2UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_INTER2Client<TTIMERECORDS_HEAT5_INTER2>, Prisma__TTIMERECORDS_HEAT5_INTER2Client<TTIMERECORDS_HEAT5_INTER2GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT5_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_INTER2CountArgs} args - Arguments to filter TTIMERECORDS_HEAT5_INTER2s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT5_INTER2s
     * const count = await prisma.tTIMERECORDS_HEAT5_INTER2.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT5_INTER2s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT5_INTER2CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT5_INTER2CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT5_INTER2CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT5_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_INTER2AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT5_INTER2AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT5_INTER2AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT5_INTER2AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT5_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_INTER2GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT5_INTER2GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT5_INTER2GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT5_INTER2GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT5_INTER2GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT5_INTER2GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT5_INTER2.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT5_INTER2Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT5_INTER2 findUnique
   */
  export type TTIMERECORDS_HEAT5_INTER2FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT5_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT5_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT5_INTER2 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT5_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT5_INTER2 findFirst
   */
  export type TTIMERECORDS_HEAT5_INTER2FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT5_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT5_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT5_INTER2 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT5_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT5_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT5_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT5_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT5_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT5_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT5_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT5_INTER2s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT5_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT5_INTER2 findMany
   */
  export type TTIMERECORDS_HEAT5_INTER2FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT5_INTER2Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT5_INTER2s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT5_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT5_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT5_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT5_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT5_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT5_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT5_INTER2s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT5_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT5_INTER2 create
   */
  export type TTIMERECORDS_HEAT5_INTER2CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT5_INTER2Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT5_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT5_INTER2CreateInput, TTIMERECORDS_HEAT5_INTER2UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT5_INTER2 update
   */
  export type TTIMERECORDS_HEAT5_INTER2UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT5_INTER2Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT5_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT5_INTER2UpdateInput, TTIMERECORDS_HEAT5_INTER2UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT5_INTER2 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT5_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT5_INTER2 updateMany
   */
  export type TTIMERECORDS_HEAT5_INTER2UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT5_INTER2s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT5_INTER2UpdateManyMutationInput, TTIMERECORDS_HEAT5_INTER2UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT5_INTER2s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT5_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT5_INTER2 upsert
   */
  export type TTIMERECORDS_HEAT5_INTER2UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT5_INTER2Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT5_INTER2 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT5_INTER2WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT5_INTER2 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT5_INTER2 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT5_INTER2CreateInput, TTIMERECORDS_HEAT5_INTER2UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT5_INTER2 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT5_INTER2UpdateInput, TTIMERECORDS_HEAT5_INTER2UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT5_INTER2 delete
   */
  export type TTIMERECORDS_HEAT5_INTER2DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT5_INTER2Select | null
    /**
     * Filter which TTIMERECORDS_HEAT5_INTER2 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT5_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT5_INTER2 deleteMany
   */
  export type TTIMERECORDS_HEAT5_INTER2DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT5_INTER2s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT5_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT5_INTER2 without action
   */
  export type TTIMERECORDS_HEAT5_INTER2Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT5_INTER2Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT5_START
   */


  export type AggregateTTIMERECORDS_HEAT5_START = {
    _count: TTIMERECORDS_HEAT5_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT5_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT5_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT5_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT5_STARTMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT5_STARTAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT5_STARTSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT5_STARTMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT5_STARTMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT5_STARTCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT5_STARTAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT5_STARTSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT5_STARTMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT5_STARTMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT5_STARTCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT5_STARTAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT5_START to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT5_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT5_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT5_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT5_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT5_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT5_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT5_STARTS
    **/
    _count?: true | TTIMERECORDS_HEAT5_STARTCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT5_STARTAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT5_STARTSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT5_STARTMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT5_STARTMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT5_STARTAggregateType<T extends TTIMERECORDS_HEAT5_STARTAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT5_START]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT5_START[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT5_START[P]>
  }




  export type TTIMERECORDS_HEAT5_STARTGroupByArgs = {
    where?: TTIMERECORDS_HEAT5_STARTWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT5_STARTOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT5_STARTScalarFieldEnum>
    having?: TTIMERECORDS_HEAT5_STARTScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT5_STARTCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT5_STARTAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT5_STARTSumAggregateInputType
    _min?: TTIMERECORDS_HEAT5_STARTMinAggregateInputType
    _max?: TTIMERECORDS_HEAT5_STARTMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT5_STARTGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT5_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT5_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT5_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT5_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT5_STARTMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT5_STARTGroupByPayload<T extends TTIMERECORDS_HEAT5_STARTGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT5_STARTGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT5_STARTGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT5_STARTGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT5_STARTGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT5_STARTSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT5_STARTGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT5_STARTArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT5_START
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT5_STARTArgs | TTIMERECORDS_HEAT5_STARTFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT5_START 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT5_START ? TTIMERECORDS_HEAT5_START[P] : never
  } 
    : TTIMERECORDS_HEAT5_START
  : TTIMERECORDS_HEAT5_START


  type TTIMERECORDS_HEAT5_STARTCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT5_STARTFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT5_STARTCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT5_STARTDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT5_START that matches the filter.
     * @param {TTIMERECORDS_HEAT5_STARTFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT5_START
     * @example
     * // Get one TTIMERECORDS_HEAT5_START
     * const tTIMERECORDS_HEAT5_START = await prisma.tTIMERECORDS_HEAT5_START.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT5_STARTFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_STARTFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT5_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_STARTClient<TTIMERECORDS_HEAT5_START>, Prisma__TTIMERECORDS_HEAT5_STARTClient<TTIMERECORDS_HEAT5_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_STARTClient<TTIMERECORDS_HEAT5_START | null >, Prisma__TTIMERECORDS_HEAT5_STARTClient<TTIMERECORDS_HEAT5_STARTGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT5_START that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_STARTFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT5_START
     * @example
     * // Get one TTIMERECORDS_HEAT5_START
     * const tTIMERECORDS_HEAT5_START = await prisma.tTIMERECORDS_HEAT5_START.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT5_STARTFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT5_STARTFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT5_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_STARTClient<TTIMERECORDS_HEAT5_START>, Prisma__TTIMERECORDS_HEAT5_STARTClient<TTIMERECORDS_HEAT5_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_STARTClient<TTIMERECORDS_HEAT5_START | null >, Prisma__TTIMERECORDS_HEAT5_STARTClient<TTIMERECORDS_HEAT5_STARTGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT5_STARTS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_STARTFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT5_STARTS
     * const tTIMERECORDS_HEAT5_STARTS = await prisma.tTIMERECORDS_HEAT5_START.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT5_STARTS
     * const tTIMERECORDS_HEAT5_STARTS = await prisma.tTIMERECORDS_HEAT5_START.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT5_STARTWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT5_START.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT5_STARTFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT5_STARTFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT5_START>>, PrismaPromise<Array<TTIMERECORDS_HEAT5_STARTGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT5_START.
     * @param {TTIMERECORDS_HEAT5_STARTCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT5_START.
     * @example
     * // Create one TTIMERECORDS_HEAT5_START
     * const TTIMERECORDS_HEAT5_START = await prisma.tTIMERECORDS_HEAT5_START.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT5_START
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT5_STARTCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_STARTCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_STARTClient<TTIMERECORDS_HEAT5_START>, Prisma__TTIMERECORDS_HEAT5_STARTClient<TTIMERECORDS_HEAT5_STARTGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT5_START.
     * @param {TTIMERECORDS_HEAT5_STARTDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT5_START.
     * @example
     * // Delete one TTIMERECORDS_HEAT5_START
     * const TTIMERECORDS_HEAT5_START = await prisma.tTIMERECORDS_HEAT5_START.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT5_START
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT5_STARTDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_STARTDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_STARTClient<TTIMERECORDS_HEAT5_START>, Prisma__TTIMERECORDS_HEAT5_STARTClient<TTIMERECORDS_HEAT5_STARTGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT5_START.
     * @param {TTIMERECORDS_HEAT5_STARTUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT5_START.
     * @example
     * // Update one TTIMERECORDS_HEAT5_START
     * const tTIMERECORDS_HEAT5_START = await prisma.tTIMERECORDS_HEAT5_START.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT5_STARTUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_STARTUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_STARTClient<TTIMERECORDS_HEAT5_START>, Prisma__TTIMERECORDS_HEAT5_STARTClient<TTIMERECORDS_HEAT5_STARTGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT5_STARTS.
     * @param {TTIMERECORDS_HEAT5_STARTDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT5_STARTS to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT5_STARTS
     * const { count } = await prisma.tTIMERECORDS_HEAT5_START.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT5_STARTDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT5_STARTDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT5_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_STARTUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT5_STARTS
     * const tTIMERECORDS_HEAT5_START = await prisma.tTIMERECORDS_HEAT5_START.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT5_STARTUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_STARTUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT5_START.
     * @param {TTIMERECORDS_HEAT5_STARTUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT5_START.
     * @example
     * // Update or create a TTIMERECORDS_HEAT5_START
     * const tTIMERECORDS_HEAT5_START = await prisma.tTIMERECORDS_HEAT5_START.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT5_START
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT5_START we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT5_STARTUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT5_STARTUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT5_STARTClient<TTIMERECORDS_HEAT5_START>, Prisma__TTIMERECORDS_HEAT5_STARTClient<TTIMERECORDS_HEAT5_STARTGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT5_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_STARTCountArgs} args - Arguments to filter TTIMERECORDS_HEAT5_STARTS to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT5_STARTS
     * const count = await prisma.tTIMERECORDS_HEAT5_START.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT5_STARTS we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT5_STARTCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT5_STARTCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT5_STARTCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT5_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_STARTAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT5_STARTAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT5_STARTAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT5_STARTAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT5_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT5_STARTGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT5_STARTGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT5_STARTGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT5_STARTGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT5_STARTGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT5_STARTGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT5_START.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT5_STARTClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT5_START findUnique
   */
  export type TTIMERECORDS_HEAT5_STARTFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_START
     * 
    **/
    select?: TTIMERECORDS_HEAT5_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT5_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT5_START to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT5_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT5_START findFirst
   */
  export type TTIMERECORDS_HEAT5_STARTFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_START
     * 
    **/
    select?: TTIMERECORDS_HEAT5_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT5_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT5_START to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT5_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT5_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT5_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT5_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT5_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT5_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT5_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT5_STARTS.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT5_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT5_START findMany
   */
  export type TTIMERECORDS_HEAT5_STARTFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_START
     * 
    **/
    select?: TTIMERECORDS_HEAT5_STARTSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT5_STARTS to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT5_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT5_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT5_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT5_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT5_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT5_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT5_STARTS.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT5_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT5_START create
   */
  export type TTIMERECORDS_HEAT5_STARTCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_START
     * 
    **/
    select?: TTIMERECORDS_HEAT5_STARTSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT5_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT5_STARTCreateInput, TTIMERECORDS_HEAT5_STARTUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT5_START update
   */
  export type TTIMERECORDS_HEAT5_STARTUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_START
     * 
    **/
    select?: TTIMERECORDS_HEAT5_STARTSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT5_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT5_STARTUpdateInput, TTIMERECORDS_HEAT5_STARTUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT5_START to update.
     * 
    **/
    where: TTIMERECORDS_HEAT5_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT5_START updateMany
   */
  export type TTIMERECORDS_HEAT5_STARTUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT5_STARTS.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT5_STARTUpdateManyMutationInput, TTIMERECORDS_HEAT5_STARTUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT5_STARTS to update
     * 
    **/
    where?: TTIMERECORDS_HEAT5_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT5_START upsert
   */
  export type TTIMERECORDS_HEAT5_STARTUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_START
     * 
    **/
    select?: TTIMERECORDS_HEAT5_STARTSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT5_START to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT5_STARTWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT5_START found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT5_START with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT5_STARTCreateInput, TTIMERECORDS_HEAT5_STARTUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT5_START was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT5_STARTUpdateInput, TTIMERECORDS_HEAT5_STARTUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT5_START delete
   */
  export type TTIMERECORDS_HEAT5_STARTDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_START
     * 
    **/
    select?: TTIMERECORDS_HEAT5_STARTSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT5_START to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT5_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT5_START deleteMany
   */
  export type TTIMERECORDS_HEAT5_STARTDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT5_STARTS to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT5_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT5_START without action
   */
  export type TTIMERECORDS_HEAT5_STARTArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT5_START
     * 
    **/
    select?: TTIMERECORDS_HEAT5_STARTSelect | null
  }



  /**
   * Model TTIMERECORDS_HEAT6_FINISH
   */


  export type AggregateTTIMERECORDS_HEAT6_FINISH = {
    _count: TTIMERECORDS_HEAT6_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT6_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT6_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT6_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT6_FINISHMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT6_FINISHAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT6_FINISHSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT6_FINISHMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT6_FINISHMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT6_FINISHCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT6_FINISHAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT6_FINISHSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT6_FINISHMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT6_FINISHMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT6_FINISHCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT6_FINISHAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT6_FINISH to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT6_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT6_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT6_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT6_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT6_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT6_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT6_FINISHES
    **/
    _count?: true | TTIMERECORDS_HEAT6_FINISHCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT6_FINISHAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT6_FINISHSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT6_FINISHMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT6_FINISHMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT6_FINISHAggregateType<T extends TTIMERECORDS_HEAT6_FINISHAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT6_FINISH]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT6_FINISH[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT6_FINISH[P]>
  }




  export type TTIMERECORDS_HEAT6_FINISHGroupByArgs = {
    where?: TTIMERECORDS_HEAT6_FINISHWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT6_FINISHOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT6_FINISHScalarFieldEnum>
    having?: TTIMERECORDS_HEAT6_FINISHScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT6_FINISHCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT6_FINISHAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT6_FINISHSumAggregateInputType
    _min?: TTIMERECORDS_HEAT6_FINISHMinAggregateInputType
    _max?: TTIMERECORDS_HEAT6_FINISHMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT6_FINISHGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT6_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT6_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT6_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT6_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT6_FINISHMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT6_FINISHGroupByPayload<T extends TTIMERECORDS_HEAT6_FINISHGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT6_FINISHGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT6_FINISHGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT6_FINISHGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT6_FINISHGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT6_FINISHSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT6_FINISHGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT6_FINISHArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT6_FINISH
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT6_FINISHArgs | TTIMERECORDS_HEAT6_FINISHFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT6_FINISH 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT6_FINISH ? TTIMERECORDS_HEAT6_FINISH[P] : never
  } 
    : TTIMERECORDS_HEAT6_FINISH
  : TTIMERECORDS_HEAT6_FINISH


  type TTIMERECORDS_HEAT6_FINISHCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT6_FINISHFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT6_FINISHCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT6_FINISHDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT6_FINISH that matches the filter.
     * @param {TTIMERECORDS_HEAT6_FINISHFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT6_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT6_FINISH
     * const tTIMERECORDS_HEAT6_FINISH = await prisma.tTIMERECORDS_HEAT6_FINISH.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT6_FINISHFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_FINISHFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT6_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_FINISHClient<TTIMERECORDS_HEAT6_FINISH>, Prisma__TTIMERECORDS_HEAT6_FINISHClient<TTIMERECORDS_HEAT6_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_FINISHClient<TTIMERECORDS_HEAT6_FINISH | null >, Prisma__TTIMERECORDS_HEAT6_FINISHClient<TTIMERECORDS_HEAT6_FINISHGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT6_FINISH that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_FINISHFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT6_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT6_FINISH
     * const tTIMERECORDS_HEAT6_FINISH = await prisma.tTIMERECORDS_HEAT6_FINISH.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT6_FINISHFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT6_FINISHFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT6_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_FINISHClient<TTIMERECORDS_HEAT6_FINISH>, Prisma__TTIMERECORDS_HEAT6_FINISHClient<TTIMERECORDS_HEAT6_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_FINISHClient<TTIMERECORDS_HEAT6_FINISH | null >, Prisma__TTIMERECORDS_HEAT6_FINISHClient<TTIMERECORDS_HEAT6_FINISHGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT6_FINISHES that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_FINISHFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT6_FINISHES
     * const tTIMERECORDS_HEAT6_FINISHES = await prisma.tTIMERECORDS_HEAT6_FINISH.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT6_FINISHES
     * const tTIMERECORDS_HEAT6_FINISHES = await prisma.tTIMERECORDS_HEAT6_FINISH.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT6_FINISHWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT6_FINISH.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT6_FINISHFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT6_FINISHFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT6_FINISH>>, PrismaPromise<Array<TTIMERECORDS_HEAT6_FINISHGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT6_FINISH.
     * @param {TTIMERECORDS_HEAT6_FINISHCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT6_FINISH.
     * @example
     * // Create one TTIMERECORDS_HEAT6_FINISH
     * const TTIMERECORDS_HEAT6_FINISH = await prisma.tTIMERECORDS_HEAT6_FINISH.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT6_FINISH
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT6_FINISHCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_FINISHCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_FINISHClient<TTIMERECORDS_HEAT6_FINISH>, Prisma__TTIMERECORDS_HEAT6_FINISHClient<TTIMERECORDS_HEAT6_FINISHGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT6_FINISH.
     * @param {TTIMERECORDS_HEAT6_FINISHDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT6_FINISH.
     * @example
     * // Delete one TTIMERECORDS_HEAT6_FINISH
     * const TTIMERECORDS_HEAT6_FINISH = await prisma.tTIMERECORDS_HEAT6_FINISH.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT6_FINISH
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT6_FINISHDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_FINISHDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_FINISHClient<TTIMERECORDS_HEAT6_FINISH>, Prisma__TTIMERECORDS_HEAT6_FINISHClient<TTIMERECORDS_HEAT6_FINISHGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT6_FINISH.
     * @param {TTIMERECORDS_HEAT6_FINISHUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT6_FINISH.
     * @example
     * // Update one TTIMERECORDS_HEAT6_FINISH
     * const tTIMERECORDS_HEAT6_FINISH = await prisma.tTIMERECORDS_HEAT6_FINISH.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT6_FINISHUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_FINISHUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_FINISHClient<TTIMERECORDS_HEAT6_FINISH>, Prisma__TTIMERECORDS_HEAT6_FINISHClient<TTIMERECORDS_HEAT6_FINISHGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT6_FINISHES.
     * @param {TTIMERECORDS_HEAT6_FINISHDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT6_FINISHES to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT6_FINISHES
     * const { count } = await prisma.tTIMERECORDS_HEAT6_FINISH.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT6_FINISHDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT6_FINISHDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT6_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_FINISHUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT6_FINISHES
     * const tTIMERECORDS_HEAT6_FINISH = await prisma.tTIMERECORDS_HEAT6_FINISH.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT6_FINISHUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_FINISHUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT6_FINISH.
     * @param {TTIMERECORDS_HEAT6_FINISHUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT6_FINISH.
     * @example
     * // Update or create a TTIMERECORDS_HEAT6_FINISH
     * const tTIMERECORDS_HEAT6_FINISH = await prisma.tTIMERECORDS_HEAT6_FINISH.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT6_FINISH
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT6_FINISH we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT6_FINISHUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_FINISHUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_FINISHClient<TTIMERECORDS_HEAT6_FINISH>, Prisma__TTIMERECORDS_HEAT6_FINISHClient<TTIMERECORDS_HEAT6_FINISHGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT6_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_FINISHCountArgs} args - Arguments to filter TTIMERECORDS_HEAT6_FINISHES to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT6_FINISHES
     * const count = await prisma.tTIMERECORDS_HEAT6_FINISH.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT6_FINISHES we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT6_FINISHCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT6_FINISHCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT6_FINISHCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT6_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_FINISHAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT6_FINISHAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT6_FINISHAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT6_FINISHAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT6_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_FINISHGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT6_FINISHGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT6_FINISHGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT6_FINISHGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT6_FINISHGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT6_FINISHGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT6_FINISH.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT6_FINISHClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT6_FINISH findUnique
   */
  export type TTIMERECORDS_HEAT6_FINISHFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT6_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT6_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT6_FINISH to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT6_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT6_FINISH findFirst
   */
  export type TTIMERECORDS_HEAT6_FINISHFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT6_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT6_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT6_FINISH to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT6_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT6_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT6_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT6_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT6_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT6_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT6_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT6_FINISHES.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT6_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT6_FINISH findMany
   */
  export type TTIMERECORDS_HEAT6_FINISHFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT6_FINISHSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT6_FINISHES to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT6_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT6_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT6_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT6_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT6_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT6_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT6_FINISHES.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT6_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT6_FINISH create
   */
  export type TTIMERECORDS_HEAT6_FINISHCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT6_FINISHSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT6_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT6_FINISHCreateInput, TTIMERECORDS_HEAT6_FINISHUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT6_FINISH update
   */
  export type TTIMERECORDS_HEAT6_FINISHUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT6_FINISHSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT6_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT6_FINISHUpdateInput, TTIMERECORDS_HEAT6_FINISHUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT6_FINISH to update.
     * 
    **/
    where: TTIMERECORDS_HEAT6_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT6_FINISH updateMany
   */
  export type TTIMERECORDS_HEAT6_FINISHUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT6_FINISHES.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT6_FINISHUpdateManyMutationInput, TTIMERECORDS_HEAT6_FINISHUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT6_FINISHES to update
     * 
    **/
    where?: TTIMERECORDS_HEAT6_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT6_FINISH upsert
   */
  export type TTIMERECORDS_HEAT6_FINISHUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT6_FINISHSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT6_FINISH to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT6_FINISHWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT6_FINISH found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT6_FINISH with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT6_FINISHCreateInput, TTIMERECORDS_HEAT6_FINISHUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT6_FINISH was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT6_FINISHUpdateInput, TTIMERECORDS_HEAT6_FINISHUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT6_FINISH delete
   */
  export type TTIMERECORDS_HEAT6_FINISHDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT6_FINISHSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT6_FINISH to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT6_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT6_FINISH deleteMany
   */
  export type TTIMERECORDS_HEAT6_FINISHDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT6_FINISHES to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT6_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT6_FINISH without action
   */
  export type TTIMERECORDS_HEAT6_FINISHArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT6_FINISHSelect | null
  }



  /**
   * Model TTIMERECORDS_HEAT6_INTER1
   */


  export type AggregateTTIMERECORDS_HEAT6_INTER1 = {
    _count: TTIMERECORDS_HEAT6_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT6_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT6_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT6_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT6_INTER1MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT6_INTER1AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT6_INTER1SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT6_INTER1MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT6_INTER1MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT6_INTER1CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT6_INTER1AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT6_INTER1SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT6_INTER1MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT6_INTER1MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT6_INTER1CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT6_INTER1AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT6_INTER1 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT6_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT6_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT6_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT6_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT6_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT6_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT6_INTER1s
    **/
    _count?: true | TTIMERECORDS_HEAT6_INTER1CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT6_INTER1AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT6_INTER1SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT6_INTER1MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT6_INTER1MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT6_INTER1AggregateType<T extends TTIMERECORDS_HEAT6_INTER1AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT6_INTER1]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT6_INTER1[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT6_INTER1[P]>
  }




  export type TTIMERECORDS_HEAT6_INTER1GroupByArgs = {
    where?: TTIMERECORDS_HEAT6_INTER1WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT6_INTER1OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT6_INTER1ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT6_INTER1ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT6_INTER1CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT6_INTER1AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT6_INTER1SumAggregateInputType
    _min?: TTIMERECORDS_HEAT6_INTER1MinAggregateInputType
    _max?: TTIMERECORDS_HEAT6_INTER1MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT6_INTER1GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT6_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT6_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT6_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT6_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT6_INTER1MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT6_INTER1GroupByPayload<T extends TTIMERECORDS_HEAT6_INTER1GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT6_INTER1GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT6_INTER1GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT6_INTER1GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT6_INTER1GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT6_INTER1Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT6_INTER1GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT6_INTER1Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT6_INTER1
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT6_INTER1Args | TTIMERECORDS_HEAT6_INTER1FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT6_INTER1 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT6_INTER1 ? TTIMERECORDS_HEAT6_INTER1[P] : never
  } 
    : TTIMERECORDS_HEAT6_INTER1
  : TTIMERECORDS_HEAT6_INTER1


  type TTIMERECORDS_HEAT6_INTER1CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT6_INTER1FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT6_INTER1CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT6_INTER1Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT6_INTER1 that matches the filter.
     * @param {TTIMERECORDS_HEAT6_INTER1FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT6_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT6_INTER1
     * const tTIMERECORDS_HEAT6_INTER1 = await prisma.tTIMERECORDS_HEAT6_INTER1.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT6_INTER1FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_INTER1FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT6_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_INTER1Client<TTIMERECORDS_HEAT6_INTER1>, Prisma__TTIMERECORDS_HEAT6_INTER1Client<TTIMERECORDS_HEAT6_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_INTER1Client<TTIMERECORDS_HEAT6_INTER1 | null >, Prisma__TTIMERECORDS_HEAT6_INTER1Client<TTIMERECORDS_HEAT6_INTER1GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT6_INTER1 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_INTER1FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT6_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT6_INTER1
     * const tTIMERECORDS_HEAT6_INTER1 = await prisma.tTIMERECORDS_HEAT6_INTER1.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT6_INTER1FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT6_INTER1FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT6_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_INTER1Client<TTIMERECORDS_HEAT6_INTER1>, Prisma__TTIMERECORDS_HEAT6_INTER1Client<TTIMERECORDS_HEAT6_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_INTER1Client<TTIMERECORDS_HEAT6_INTER1 | null >, Prisma__TTIMERECORDS_HEAT6_INTER1Client<TTIMERECORDS_HEAT6_INTER1GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT6_INTER1s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_INTER1FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT6_INTER1s
     * const tTIMERECORDS_HEAT6_INTER1s = await prisma.tTIMERECORDS_HEAT6_INTER1.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT6_INTER1s
     * const tTIMERECORDS_HEAT6_INTER1s = await prisma.tTIMERECORDS_HEAT6_INTER1.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT6_INTER1WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT6_INTER1.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT6_INTER1FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT6_INTER1FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT6_INTER1>>, PrismaPromise<Array<TTIMERECORDS_HEAT6_INTER1GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT6_INTER1.
     * @param {TTIMERECORDS_HEAT6_INTER1CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT6_INTER1.
     * @example
     * // Create one TTIMERECORDS_HEAT6_INTER1
     * const TTIMERECORDS_HEAT6_INTER1 = await prisma.tTIMERECORDS_HEAT6_INTER1.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT6_INTER1
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT6_INTER1CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_INTER1CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_INTER1Client<TTIMERECORDS_HEAT6_INTER1>, Prisma__TTIMERECORDS_HEAT6_INTER1Client<TTIMERECORDS_HEAT6_INTER1GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT6_INTER1.
     * @param {TTIMERECORDS_HEAT6_INTER1DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT6_INTER1.
     * @example
     * // Delete one TTIMERECORDS_HEAT6_INTER1
     * const TTIMERECORDS_HEAT6_INTER1 = await prisma.tTIMERECORDS_HEAT6_INTER1.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT6_INTER1
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT6_INTER1DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_INTER1DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_INTER1Client<TTIMERECORDS_HEAT6_INTER1>, Prisma__TTIMERECORDS_HEAT6_INTER1Client<TTIMERECORDS_HEAT6_INTER1GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT6_INTER1.
     * @param {TTIMERECORDS_HEAT6_INTER1UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT6_INTER1.
     * @example
     * // Update one TTIMERECORDS_HEAT6_INTER1
     * const tTIMERECORDS_HEAT6_INTER1 = await prisma.tTIMERECORDS_HEAT6_INTER1.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT6_INTER1UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_INTER1UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_INTER1Client<TTIMERECORDS_HEAT6_INTER1>, Prisma__TTIMERECORDS_HEAT6_INTER1Client<TTIMERECORDS_HEAT6_INTER1GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT6_INTER1s.
     * @param {TTIMERECORDS_HEAT6_INTER1DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT6_INTER1s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT6_INTER1s
     * const { count } = await prisma.tTIMERECORDS_HEAT6_INTER1.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT6_INTER1DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT6_INTER1DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT6_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_INTER1UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT6_INTER1s
     * const tTIMERECORDS_HEAT6_INTER1 = await prisma.tTIMERECORDS_HEAT6_INTER1.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT6_INTER1UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_INTER1UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT6_INTER1.
     * @param {TTIMERECORDS_HEAT6_INTER1UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT6_INTER1.
     * @example
     * // Update or create a TTIMERECORDS_HEAT6_INTER1
     * const tTIMERECORDS_HEAT6_INTER1 = await prisma.tTIMERECORDS_HEAT6_INTER1.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT6_INTER1
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT6_INTER1 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT6_INTER1UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_INTER1UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_INTER1Client<TTIMERECORDS_HEAT6_INTER1>, Prisma__TTIMERECORDS_HEAT6_INTER1Client<TTIMERECORDS_HEAT6_INTER1GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT6_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_INTER1CountArgs} args - Arguments to filter TTIMERECORDS_HEAT6_INTER1s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT6_INTER1s
     * const count = await prisma.tTIMERECORDS_HEAT6_INTER1.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT6_INTER1s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT6_INTER1CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT6_INTER1CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT6_INTER1CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT6_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_INTER1AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT6_INTER1AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT6_INTER1AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT6_INTER1AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT6_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_INTER1GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT6_INTER1GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT6_INTER1GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT6_INTER1GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT6_INTER1GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT6_INTER1GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT6_INTER1.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT6_INTER1Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT6_INTER1 findUnique
   */
  export type TTIMERECORDS_HEAT6_INTER1FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT6_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT6_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT6_INTER1 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT6_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT6_INTER1 findFirst
   */
  export type TTIMERECORDS_HEAT6_INTER1FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT6_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT6_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT6_INTER1 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT6_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT6_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT6_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT6_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT6_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT6_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT6_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT6_INTER1s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT6_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT6_INTER1 findMany
   */
  export type TTIMERECORDS_HEAT6_INTER1FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT6_INTER1Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT6_INTER1s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT6_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT6_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT6_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT6_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT6_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT6_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT6_INTER1s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT6_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT6_INTER1 create
   */
  export type TTIMERECORDS_HEAT6_INTER1CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT6_INTER1Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT6_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT6_INTER1CreateInput, TTIMERECORDS_HEAT6_INTER1UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT6_INTER1 update
   */
  export type TTIMERECORDS_HEAT6_INTER1UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT6_INTER1Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT6_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT6_INTER1UpdateInput, TTIMERECORDS_HEAT6_INTER1UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT6_INTER1 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT6_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT6_INTER1 updateMany
   */
  export type TTIMERECORDS_HEAT6_INTER1UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT6_INTER1s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT6_INTER1UpdateManyMutationInput, TTIMERECORDS_HEAT6_INTER1UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT6_INTER1s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT6_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT6_INTER1 upsert
   */
  export type TTIMERECORDS_HEAT6_INTER1UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT6_INTER1Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT6_INTER1 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT6_INTER1WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT6_INTER1 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT6_INTER1 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT6_INTER1CreateInput, TTIMERECORDS_HEAT6_INTER1UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT6_INTER1 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT6_INTER1UpdateInput, TTIMERECORDS_HEAT6_INTER1UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT6_INTER1 delete
   */
  export type TTIMERECORDS_HEAT6_INTER1DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT6_INTER1Select | null
    /**
     * Filter which TTIMERECORDS_HEAT6_INTER1 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT6_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT6_INTER1 deleteMany
   */
  export type TTIMERECORDS_HEAT6_INTER1DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT6_INTER1s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT6_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT6_INTER1 without action
   */
  export type TTIMERECORDS_HEAT6_INTER1Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT6_INTER1Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT6_INTER2
   */


  export type AggregateTTIMERECORDS_HEAT6_INTER2 = {
    _count: TTIMERECORDS_HEAT6_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT6_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT6_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT6_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT6_INTER2MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT6_INTER2AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT6_INTER2SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT6_INTER2MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT6_INTER2MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT6_INTER2CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT6_INTER2AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT6_INTER2SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT6_INTER2MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT6_INTER2MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT6_INTER2CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT6_INTER2AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT6_INTER2 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT6_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT6_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT6_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT6_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT6_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT6_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT6_INTER2s
    **/
    _count?: true | TTIMERECORDS_HEAT6_INTER2CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT6_INTER2AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT6_INTER2SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT6_INTER2MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT6_INTER2MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT6_INTER2AggregateType<T extends TTIMERECORDS_HEAT6_INTER2AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT6_INTER2]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT6_INTER2[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT6_INTER2[P]>
  }




  export type TTIMERECORDS_HEAT6_INTER2GroupByArgs = {
    where?: TTIMERECORDS_HEAT6_INTER2WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT6_INTER2OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT6_INTER2ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT6_INTER2ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT6_INTER2CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT6_INTER2AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT6_INTER2SumAggregateInputType
    _min?: TTIMERECORDS_HEAT6_INTER2MinAggregateInputType
    _max?: TTIMERECORDS_HEAT6_INTER2MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT6_INTER2GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT6_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT6_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT6_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT6_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT6_INTER2MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT6_INTER2GroupByPayload<T extends TTIMERECORDS_HEAT6_INTER2GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT6_INTER2GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT6_INTER2GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT6_INTER2GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT6_INTER2GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT6_INTER2Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT6_INTER2GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT6_INTER2Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT6_INTER2
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT6_INTER2Args | TTIMERECORDS_HEAT6_INTER2FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT6_INTER2 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT6_INTER2 ? TTIMERECORDS_HEAT6_INTER2[P] : never
  } 
    : TTIMERECORDS_HEAT6_INTER2
  : TTIMERECORDS_HEAT6_INTER2


  type TTIMERECORDS_HEAT6_INTER2CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT6_INTER2FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT6_INTER2CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT6_INTER2Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT6_INTER2 that matches the filter.
     * @param {TTIMERECORDS_HEAT6_INTER2FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT6_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT6_INTER2
     * const tTIMERECORDS_HEAT6_INTER2 = await prisma.tTIMERECORDS_HEAT6_INTER2.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT6_INTER2FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_INTER2FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT6_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_INTER2Client<TTIMERECORDS_HEAT6_INTER2>, Prisma__TTIMERECORDS_HEAT6_INTER2Client<TTIMERECORDS_HEAT6_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_INTER2Client<TTIMERECORDS_HEAT6_INTER2 | null >, Prisma__TTIMERECORDS_HEAT6_INTER2Client<TTIMERECORDS_HEAT6_INTER2GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT6_INTER2 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_INTER2FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT6_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT6_INTER2
     * const tTIMERECORDS_HEAT6_INTER2 = await prisma.tTIMERECORDS_HEAT6_INTER2.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT6_INTER2FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT6_INTER2FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT6_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_INTER2Client<TTIMERECORDS_HEAT6_INTER2>, Prisma__TTIMERECORDS_HEAT6_INTER2Client<TTIMERECORDS_HEAT6_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_INTER2Client<TTIMERECORDS_HEAT6_INTER2 | null >, Prisma__TTIMERECORDS_HEAT6_INTER2Client<TTIMERECORDS_HEAT6_INTER2GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT6_INTER2s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_INTER2FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT6_INTER2s
     * const tTIMERECORDS_HEAT6_INTER2s = await prisma.tTIMERECORDS_HEAT6_INTER2.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT6_INTER2s
     * const tTIMERECORDS_HEAT6_INTER2s = await prisma.tTIMERECORDS_HEAT6_INTER2.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT6_INTER2WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT6_INTER2.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT6_INTER2FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT6_INTER2FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT6_INTER2>>, PrismaPromise<Array<TTIMERECORDS_HEAT6_INTER2GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT6_INTER2.
     * @param {TTIMERECORDS_HEAT6_INTER2CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT6_INTER2.
     * @example
     * // Create one TTIMERECORDS_HEAT6_INTER2
     * const TTIMERECORDS_HEAT6_INTER2 = await prisma.tTIMERECORDS_HEAT6_INTER2.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT6_INTER2
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT6_INTER2CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_INTER2CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_INTER2Client<TTIMERECORDS_HEAT6_INTER2>, Prisma__TTIMERECORDS_HEAT6_INTER2Client<TTIMERECORDS_HEAT6_INTER2GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT6_INTER2.
     * @param {TTIMERECORDS_HEAT6_INTER2DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT6_INTER2.
     * @example
     * // Delete one TTIMERECORDS_HEAT6_INTER2
     * const TTIMERECORDS_HEAT6_INTER2 = await prisma.tTIMERECORDS_HEAT6_INTER2.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT6_INTER2
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT6_INTER2DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_INTER2DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_INTER2Client<TTIMERECORDS_HEAT6_INTER2>, Prisma__TTIMERECORDS_HEAT6_INTER2Client<TTIMERECORDS_HEAT6_INTER2GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT6_INTER2.
     * @param {TTIMERECORDS_HEAT6_INTER2UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT6_INTER2.
     * @example
     * // Update one TTIMERECORDS_HEAT6_INTER2
     * const tTIMERECORDS_HEAT6_INTER2 = await prisma.tTIMERECORDS_HEAT6_INTER2.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT6_INTER2UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_INTER2UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_INTER2Client<TTIMERECORDS_HEAT6_INTER2>, Prisma__TTIMERECORDS_HEAT6_INTER2Client<TTIMERECORDS_HEAT6_INTER2GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT6_INTER2s.
     * @param {TTIMERECORDS_HEAT6_INTER2DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT6_INTER2s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT6_INTER2s
     * const { count } = await prisma.tTIMERECORDS_HEAT6_INTER2.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT6_INTER2DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT6_INTER2DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT6_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_INTER2UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT6_INTER2s
     * const tTIMERECORDS_HEAT6_INTER2 = await prisma.tTIMERECORDS_HEAT6_INTER2.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT6_INTER2UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_INTER2UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT6_INTER2.
     * @param {TTIMERECORDS_HEAT6_INTER2UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT6_INTER2.
     * @example
     * // Update or create a TTIMERECORDS_HEAT6_INTER2
     * const tTIMERECORDS_HEAT6_INTER2 = await prisma.tTIMERECORDS_HEAT6_INTER2.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT6_INTER2
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT6_INTER2 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT6_INTER2UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_INTER2UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_INTER2Client<TTIMERECORDS_HEAT6_INTER2>, Prisma__TTIMERECORDS_HEAT6_INTER2Client<TTIMERECORDS_HEAT6_INTER2GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT6_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_INTER2CountArgs} args - Arguments to filter TTIMERECORDS_HEAT6_INTER2s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT6_INTER2s
     * const count = await prisma.tTIMERECORDS_HEAT6_INTER2.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT6_INTER2s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT6_INTER2CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT6_INTER2CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT6_INTER2CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT6_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_INTER2AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT6_INTER2AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT6_INTER2AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT6_INTER2AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT6_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_INTER2GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT6_INTER2GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT6_INTER2GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT6_INTER2GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT6_INTER2GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT6_INTER2GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT6_INTER2.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT6_INTER2Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT6_INTER2 findUnique
   */
  export type TTIMERECORDS_HEAT6_INTER2FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT6_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT6_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT6_INTER2 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT6_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT6_INTER2 findFirst
   */
  export type TTIMERECORDS_HEAT6_INTER2FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT6_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT6_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT6_INTER2 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT6_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT6_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT6_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT6_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT6_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT6_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT6_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT6_INTER2s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT6_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT6_INTER2 findMany
   */
  export type TTIMERECORDS_HEAT6_INTER2FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT6_INTER2Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT6_INTER2s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT6_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT6_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT6_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT6_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT6_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT6_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT6_INTER2s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT6_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT6_INTER2 create
   */
  export type TTIMERECORDS_HEAT6_INTER2CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT6_INTER2Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT6_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT6_INTER2CreateInput, TTIMERECORDS_HEAT6_INTER2UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT6_INTER2 update
   */
  export type TTIMERECORDS_HEAT6_INTER2UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT6_INTER2Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT6_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT6_INTER2UpdateInput, TTIMERECORDS_HEAT6_INTER2UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT6_INTER2 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT6_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT6_INTER2 updateMany
   */
  export type TTIMERECORDS_HEAT6_INTER2UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT6_INTER2s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT6_INTER2UpdateManyMutationInput, TTIMERECORDS_HEAT6_INTER2UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT6_INTER2s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT6_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT6_INTER2 upsert
   */
  export type TTIMERECORDS_HEAT6_INTER2UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT6_INTER2Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT6_INTER2 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT6_INTER2WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT6_INTER2 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT6_INTER2 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT6_INTER2CreateInput, TTIMERECORDS_HEAT6_INTER2UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT6_INTER2 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT6_INTER2UpdateInput, TTIMERECORDS_HEAT6_INTER2UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT6_INTER2 delete
   */
  export type TTIMERECORDS_HEAT6_INTER2DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT6_INTER2Select | null
    /**
     * Filter which TTIMERECORDS_HEAT6_INTER2 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT6_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT6_INTER2 deleteMany
   */
  export type TTIMERECORDS_HEAT6_INTER2DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT6_INTER2s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT6_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT6_INTER2 without action
   */
  export type TTIMERECORDS_HEAT6_INTER2Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT6_INTER2Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT6_START
   */


  export type AggregateTTIMERECORDS_HEAT6_START = {
    _count: TTIMERECORDS_HEAT6_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT6_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT6_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT6_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT6_STARTMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT6_STARTAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT6_STARTSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT6_STARTMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT6_STARTMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT6_STARTCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT6_STARTAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT6_STARTSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT6_STARTMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT6_STARTMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT6_STARTCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT6_STARTAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT6_START to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT6_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT6_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT6_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT6_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT6_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT6_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT6_STARTS
    **/
    _count?: true | TTIMERECORDS_HEAT6_STARTCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT6_STARTAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT6_STARTSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT6_STARTMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT6_STARTMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT6_STARTAggregateType<T extends TTIMERECORDS_HEAT6_STARTAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT6_START]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT6_START[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT6_START[P]>
  }




  export type TTIMERECORDS_HEAT6_STARTGroupByArgs = {
    where?: TTIMERECORDS_HEAT6_STARTWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT6_STARTOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT6_STARTScalarFieldEnum>
    having?: TTIMERECORDS_HEAT6_STARTScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT6_STARTCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT6_STARTAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT6_STARTSumAggregateInputType
    _min?: TTIMERECORDS_HEAT6_STARTMinAggregateInputType
    _max?: TTIMERECORDS_HEAT6_STARTMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT6_STARTGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT6_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT6_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT6_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT6_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT6_STARTMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT6_STARTGroupByPayload<T extends TTIMERECORDS_HEAT6_STARTGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT6_STARTGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT6_STARTGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT6_STARTGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT6_STARTGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT6_STARTSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT6_STARTGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT6_STARTArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT6_START
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT6_STARTArgs | TTIMERECORDS_HEAT6_STARTFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT6_START 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT6_START ? TTIMERECORDS_HEAT6_START[P] : never
  } 
    : TTIMERECORDS_HEAT6_START
  : TTIMERECORDS_HEAT6_START


  type TTIMERECORDS_HEAT6_STARTCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT6_STARTFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT6_STARTCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT6_STARTDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT6_START that matches the filter.
     * @param {TTIMERECORDS_HEAT6_STARTFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT6_START
     * @example
     * // Get one TTIMERECORDS_HEAT6_START
     * const tTIMERECORDS_HEAT6_START = await prisma.tTIMERECORDS_HEAT6_START.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT6_STARTFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_STARTFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT6_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_STARTClient<TTIMERECORDS_HEAT6_START>, Prisma__TTIMERECORDS_HEAT6_STARTClient<TTIMERECORDS_HEAT6_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_STARTClient<TTIMERECORDS_HEAT6_START | null >, Prisma__TTIMERECORDS_HEAT6_STARTClient<TTIMERECORDS_HEAT6_STARTGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT6_START that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_STARTFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT6_START
     * @example
     * // Get one TTIMERECORDS_HEAT6_START
     * const tTIMERECORDS_HEAT6_START = await prisma.tTIMERECORDS_HEAT6_START.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT6_STARTFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT6_STARTFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT6_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_STARTClient<TTIMERECORDS_HEAT6_START>, Prisma__TTIMERECORDS_HEAT6_STARTClient<TTIMERECORDS_HEAT6_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_STARTClient<TTIMERECORDS_HEAT6_START | null >, Prisma__TTIMERECORDS_HEAT6_STARTClient<TTIMERECORDS_HEAT6_STARTGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT6_STARTS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_STARTFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT6_STARTS
     * const tTIMERECORDS_HEAT6_STARTS = await prisma.tTIMERECORDS_HEAT6_START.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT6_STARTS
     * const tTIMERECORDS_HEAT6_STARTS = await prisma.tTIMERECORDS_HEAT6_START.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT6_STARTWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT6_START.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT6_STARTFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT6_STARTFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT6_START>>, PrismaPromise<Array<TTIMERECORDS_HEAT6_STARTGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT6_START.
     * @param {TTIMERECORDS_HEAT6_STARTCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT6_START.
     * @example
     * // Create one TTIMERECORDS_HEAT6_START
     * const TTIMERECORDS_HEAT6_START = await prisma.tTIMERECORDS_HEAT6_START.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT6_START
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT6_STARTCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_STARTCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_STARTClient<TTIMERECORDS_HEAT6_START>, Prisma__TTIMERECORDS_HEAT6_STARTClient<TTIMERECORDS_HEAT6_STARTGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT6_START.
     * @param {TTIMERECORDS_HEAT6_STARTDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT6_START.
     * @example
     * // Delete one TTIMERECORDS_HEAT6_START
     * const TTIMERECORDS_HEAT6_START = await prisma.tTIMERECORDS_HEAT6_START.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT6_START
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT6_STARTDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_STARTDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_STARTClient<TTIMERECORDS_HEAT6_START>, Prisma__TTIMERECORDS_HEAT6_STARTClient<TTIMERECORDS_HEAT6_STARTGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT6_START.
     * @param {TTIMERECORDS_HEAT6_STARTUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT6_START.
     * @example
     * // Update one TTIMERECORDS_HEAT6_START
     * const tTIMERECORDS_HEAT6_START = await prisma.tTIMERECORDS_HEAT6_START.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT6_STARTUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_STARTUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_STARTClient<TTIMERECORDS_HEAT6_START>, Prisma__TTIMERECORDS_HEAT6_STARTClient<TTIMERECORDS_HEAT6_STARTGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT6_STARTS.
     * @param {TTIMERECORDS_HEAT6_STARTDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT6_STARTS to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT6_STARTS
     * const { count } = await prisma.tTIMERECORDS_HEAT6_START.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT6_STARTDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT6_STARTDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT6_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_STARTUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT6_STARTS
     * const tTIMERECORDS_HEAT6_START = await prisma.tTIMERECORDS_HEAT6_START.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT6_STARTUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_STARTUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT6_START.
     * @param {TTIMERECORDS_HEAT6_STARTUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT6_START.
     * @example
     * // Update or create a TTIMERECORDS_HEAT6_START
     * const tTIMERECORDS_HEAT6_START = await prisma.tTIMERECORDS_HEAT6_START.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT6_START
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT6_START we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT6_STARTUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT6_STARTUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT6_STARTClient<TTIMERECORDS_HEAT6_START>, Prisma__TTIMERECORDS_HEAT6_STARTClient<TTIMERECORDS_HEAT6_STARTGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT6_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_STARTCountArgs} args - Arguments to filter TTIMERECORDS_HEAT6_STARTS to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT6_STARTS
     * const count = await prisma.tTIMERECORDS_HEAT6_START.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT6_STARTS we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT6_STARTCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT6_STARTCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT6_STARTCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT6_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_STARTAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT6_STARTAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT6_STARTAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT6_STARTAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT6_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT6_STARTGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT6_STARTGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT6_STARTGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT6_STARTGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT6_STARTGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT6_STARTGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT6_START.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT6_STARTClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT6_START findUnique
   */
  export type TTIMERECORDS_HEAT6_STARTFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_START
     * 
    **/
    select?: TTIMERECORDS_HEAT6_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT6_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT6_START to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT6_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT6_START findFirst
   */
  export type TTIMERECORDS_HEAT6_STARTFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_START
     * 
    **/
    select?: TTIMERECORDS_HEAT6_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT6_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT6_START to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT6_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT6_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT6_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT6_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT6_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT6_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT6_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT6_STARTS.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT6_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT6_START findMany
   */
  export type TTIMERECORDS_HEAT6_STARTFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_START
     * 
    **/
    select?: TTIMERECORDS_HEAT6_STARTSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT6_STARTS to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT6_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT6_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT6_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT6_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT6_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT6_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT6_STARTS.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT6_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT6_START create
   */
  export type TTIMERECORDS_HEAT6_STARTCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_START
     * 
    **/
    select?: TTIMERECORDS_HEAT6_STARTSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT6_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT6_STARTCreateInput, TTIMERECORDS_HEAT6_STARTUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT6_START update
   */
  export type TTIMERECORDS_HEAT6_STARTUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_START
     * 
    **/
    select?: TTIMERECORDS_HEAT6_STARTSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT6_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT6_STARTUpdateInput, TTIMERECORDS_HEAT6_STARTUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT6_START to update.
     * 
    **/
    where: TTIMERECORDS_HEAT6_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT6_START updateMany
   */
  export type TTIMERECORDS_HEAT6_STARTUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT6_STARTS.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT6_STARTUpdateManyMutationInput, TTIMERECORDS_HEAT6_STARTUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT6_STARTS to update
     * 
    **/
    where?: TTIMERECORDS_HEAT6_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT6_START upsert
   */
  export type TTIMERECORDS_HEAT6_STARTUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_START
     * 
    **/
    select?: TTIMERECORDS_HEAT6_STARTSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT6_START to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT6_STARTWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT6_START found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT6_START with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT6_STARTCreateInput, TTIMERECORDS_HEAT6_STARTUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT6_START was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT6_STARTUpdateInput, TTIMERECORDS_HEAT6_STARTUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT6_START delete
   */
  export type TTIMERECORDS_HEAT6_STARTDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_START
     * 
    **/
    select?: TTIMERECORDS_HEAT6_STARTSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT6_START to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT6_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT6_START deleteMany
   */
  export type TTIMERECORDS_HEAT6_STARTDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT6_STARTS to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT6_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT6_START without action
   */
  export type TTIMERECORDS_HEAT6_STARTArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT6_START
     * 
    **/
    select?: TTIMERECORDS_HEAT6_STARTSelect | null
  }



  /**
   * Model TTIMERECORDS_HEAT7_FINISH
   */


  export type AggregateTTIMERECORDS_HEAT7_FINISH = {
    _count: TTIMERECORDS_HEAT7_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT7_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT7_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT7_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT7_FINISHMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT7_FINISHAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT7_FINISHSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT7_FINISHMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT7_FINISHMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT7_FINISHCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT7_FINISHAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT7_FINISHSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT7_FINISHMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT7_FINISHMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT7_FINISHCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT7_FINISHAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT7_FINISH to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT7_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT7_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT7_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT7_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT7_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT7_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT7_FINISHES
    **/
    _count?: true | TTIMERECORDS_HEAT7_FINISHCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT7_FINISHAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT7_FINISHSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT7_FINISHMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT7_FINISHMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT7_FINISHAggregateType<T extends TTIMERECORDS_HEAT7_FINISHAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT7_FINISH]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT7_FINISH[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT7_FINISH[P]>
  }




  export type TTIMERECORDS_HEAT7_FINISHGroupByArgs = {
    where?: TTIMERECORDS_HEAT7_FINISHWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT7_FINISHOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT7_FINISHScalarFieldEnum>
    having?: TTIMERECORDS_HEAT7_FINISHScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT7_FINISHCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT7_FINISHAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT7_FINISHSumAggregateInputType
    _min?: TTIMERECORDS_HEAT7_FINISHMinAggregateInputType
    _max?: TTIMERECORDS_HEAT7_FINISHMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT7_FINISHGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT7_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT7_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT7_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT7_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT7_FINISHMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT7_FINISHGroupByPayload<T extends TTIMERECORDS_HEAT7_FINISHGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT7_FINISHGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT7_FINISHGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT7_FINISHGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT7_FINISHGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT7_FINISHSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT7_FINISHGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT7_FINISHArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT7_FINISH
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT7_FINISHArgs | TTIMERECORDS_HEAT7_FINISHFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT7_FINISH 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT7_FINISH ? TTIMERECORDS_HEAT7_FINISH[P] : never
  } 
    : TTIMERECORDS_HEAT7_FINISH
  : TTIMERECORDS_HEAT7_FINISH


  type TTIMERECORDS_HEAT7_FINISHCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT7_FINISHFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT7_FINISHCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT7_FINISHDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT7_FINISH that matches the filter.
     * @param {TTIMERECORDS_HEAT7_FINISHFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT7_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT7_FINISH
     * const tTIMERECORDS_HEAT7_FINISH = await prisma.tTIMERECORDS_HEAT7_FINISH.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT7_FINISHFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_FINISHFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT7_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_FINISHClient<TTIMERECORDS_HEAT7_FINISH>, Prisma__TTIMERECORDS_HEAT7_FINISHClient<TTIMERECORDS_HEAT7_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_FINISHClient<TTIMERECORDS_HEAT7_FINISH | null >, Prisma__TTIMERECORDS_HEAT7_FINISHClient<TTIMERECORDS_HEAT7_FINISHGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT7_FINISH that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_FINISHFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT7_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT7_FINISH
     * const tTIMERECORDS_HEAT7_FINISH = await prisma.tTIMERECORDS_HEAT7_FINISH.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT7_FINISHFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT7_FINISHFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT7_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_FINISHClient<TTIMERECORDS_HEAT7_FINISH>, Prisma__TTIMERECORDS_HEAT7_FINISHClient<TTIMERECORDS_HEAT7_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_FINISHClient<TTIMERECORDS_HEAT7_FINISH | null >, Prisma__TTIMERECORDS_HEAT7_FINISHClient<TTIMERECORDS_HEAT7_FINISHGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT7_FINISHES that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_FINISHFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT7_FINISHES
     * const tTIMERECORDS_HEAT7_FINISHES = await prisma.tTIMERECORDS_HEAT7_FINISH.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT7_FINISHES
     * const tTIMERECORDS_HEAT7_FINISHES = await prisma.tTIMERECORDS_HEAT7_FINISH.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT7_FINISHWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT7_FINISH.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT7_FINISHFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT7_FINISHFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT7_FINISH>>, PrismaPromise<Array<TTIMERECORDS_HEAT7_FINISHGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT7_FINISH.
     * @param {TTIMERECORDS_HEAT7_FINISHCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT7_FINISH.
     * @example
     * // Create one TTIMERECORDS_HEAT7_FINISH
     * const TTIMERECORDS_HEAT7_FINISH = await prisma.tTIMERECORDS_HEAT7_FINISH.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT7_FINISH
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT7_FINISHCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_FINISHCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_FINISHClient<TTIMERECORDS_HEAT7_FINISH>, Prisma__TTIMERECORDS_HEAT7_FINISHClient<TTIMERECORDS_HEAT7_FINISHGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT7_FINISH.
     * @param {TTIMERECORDS_HEAT7_FINISHDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT7_FINISH.
     * @example
     * // Delete one TTIMERECORDS_HEAT7_FINISH
     * const TTIMERECORDS_HEAT7_FINISH = await prisma.tTIMERECORDS_HEAT7_FINISH.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT7_FINISH
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT7_FINISHDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_FINISHDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_FINISHClient<TTIMERECORDS_HEAT7_FINISH>, Prisma__TTIMERECORDS_HEAT7_FINISHClient<TTIMERECORDS_HEAT7_FINISHGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT7_FINISH.
     * @param {TTIMERECORDS_HEAT7_FINISHUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT7_FINISH.
     * @example
     * // Update one TTIMERECORDS_HEAT7_FINISH
     * const tTIMERECORDS_HEAT7_FINISH = await prisma.tTIMERECORDS_HEAT7_FINISH.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT7_FINISHUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_FINISHUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_FINISHClient<TTIMERECORDS_HEAT7_FINISH>, Prisma__TTIMERECORDS_HEAT7_FINISHClient<TTIMERECORDS_HEAT7_FINISHGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT7_FINISHES.
     * @param {TTIMERECORDS_HEAT7_FINISHDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT7_FINISHES to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT7_FINISHES
     * const { count } = await prisma.tTIMERECORDS_HEAT7_FINISH.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT7_FINISHDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT7_FINISHDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT7_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_FINISHUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT7_FINISHES
     * const tTIMERECORDS_HEAT7_FINISH = await prisma.tTIMERECORDS_HEAT7_FINISH.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT7_FINISHUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_FINISHUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT7_FINISH.
     * @param {TTIMERECORDS_HEAT7_FINISHUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT7_FINISH.
     * @example
     * // Update or create a TTIMERECORDS_HEAT7_FINISH
     * const tTIMERECORDS_HEAT7_FINISH = await prisma.tTIMERECORDS_HEAT7_FINISH.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT7_FINISH
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT7_FINISH we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT7_FINISHUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_FINISHUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_FINISHClient<TTIMERECORDS_HEAT7_FINISH>, Prisma__TTIMERECORDS_HEAT7_FINISHClient<TTIMERECORDS_HEAT7_FINISHGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT7_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_FINISHCountArgs} args - Arguments to filter TTIMERECORDS_HEAT7_FINISHES to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT7_FINISHES
     * const count = await prisma.tTIMERECORDS_HEAT7_FINISH.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT7_FINISHES we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT7_FINISHCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT7_FINISHCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT7_FINISHCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT7_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_FINISHAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT7_FINISHAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT7_FINISHAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT7_FINISHAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT7_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_FINISHGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT7_FINISHGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT7_FINISHGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT7_FINISHGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT7_FINISHGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT7_FINISHGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT7_FINISH.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT7_FINISHClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT7_FINISH findUnique
   */
  export type TTIMERECORDS_HEAT7_FINISHFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT7_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT7_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT7_FINISH to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT7_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT7_FINISH findFirst
   */
  export type TTIMERECORDS_HEAT7_FINISHFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT7_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT7_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT7_FINISH to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT7_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT7_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT7_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT7_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT7_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT7_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT7_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT7_FINISHES.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT7_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT7_FINISH findMany
   */
  export type TTIMERECORDS_HEAT7_FINISHFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT7_FINISHSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT7_FINISHES to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT7_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT7_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT7_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT7_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT7_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT7_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT7_FINISHES.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT7_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT7_FINISH create
   */
  export type TTIMERECORDS_HEAT7_FINISHCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT7_FINISHSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT7_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT7_FINISHCreateInput, TTIMERECORDS_HEAT7_FINISHUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT7_FINISH update
   */
  export type TTIMERECORDS_HEAT7_FINISHUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT7_FINISHSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT7_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT7_FINISHUpdateInput, TTIMERECORDS_HEAT7_FINISHUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT7_FINISH to update.
     * 
    **/
    where: TTIMERECORDS_HEAT7_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT7_FINISH updateMany
   */
  export type TTIMERECORDS_HEAT7_FINISHUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT7_FINISHES.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT7_FINISHUpdateManyMutationInput, TTIMERECORDS_HEAT7_FINISHUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT7_FINISHES to update
     * 
    **/
    where?: TTIMERECORDS_HEAT7_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT7_FINISH upsert
   */
  export type TTIMERECORDS_HEAT7_FINISHUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT7_FINISHSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT7_FINISH to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT7_FINISHWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT7_FINISH found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT7_FINISH with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT7_FINISHCreateInput, TTIMERECORDS_HEAT7_FINISHUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT7_FINISH was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT7_FINISHUpdateInput, TTIMERECORDS_HEAT7_FINISHUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT7_FINISH delete
   */
  export type TTIMERECORDS_HEAT7_FINISHDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT7_FINISHSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT7_FINISH to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT7_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT7_FINISH deleteMany
   */
  export type TTIMERECORDS_HEAT7_FINISHDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT7_FINISHES to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT7_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT7_FINISH without action
   */
  export type TTIMERECORDS_HEAT7_FINISHArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT7_FINISHSelect | null
  }



  /**
   * Model TTIMERECORDS_HEAT7_INTER1
   */


  export type AggregateTTIMERECORDS_HEAT7_INTER1 = {
    _count: TTIMERECORDS_HEAT7_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT7_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT7_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT7_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT7_INTER1MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT7_INTER1AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT7_INTER1SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT7_INTER1MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT7_INTER1MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT7_INTER1CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT7_INTER1AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT7_INTER1SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT7_INTER1MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT7_INTER1MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT7_INTER1CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT7_INTER1AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT7_INTER1 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT7_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT7_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT7_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT7_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT7_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT7_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT7_INTER1s
    **/
    _count?: true | TTIMERECORDS_HEAT7_INTER1CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT7_INTER1AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT7_INTER1SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT7_INTER1MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT7_INTER1MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT7_INTER1AggregateType<T extends TTIMERECORDS_HEAT7_INTER1AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT7_INTER1]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT7_INTER1[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT7_INTER1[P]>
  }




  export type TTIMERECORDS_HEAT7_INTER1GroupByArgs = {
    where?: TTIMERECORDS_HEAT7_INTER1WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT7_INTER1OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT7_INTER1ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT7_INTER1ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT7_INTER1CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT7_INTER1AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT7_INTER1SumAggregateInputType
    _min?: TTIMERECORDS_HEAT7_INTER1MinAggregateInputType
    _max?: TTIMERECORDS_HEAT7_INTER1MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT7_INTER1GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT7_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT7_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT7_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT7_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT7_INTER1MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT7_INTER1GroupByPayload<T extends TTIMERECORDS_HEAT7_INTER1GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT7_INTER1GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT7_INTER1GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT7_INTER1GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT7_INTER1GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT7_INTER1Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT7_INTER1GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT7_INTER1Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT7_INTER1
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT7_INTER1Args | TTIMERECORDS_HEAT7_INTER1FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT7_INTER1 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT7_INTER1 ? TTIMERECORDS_HEAT7_INTER1[P] : never
  } 
    : TTIMERECORDS_HEAT7_INTER1
  : TTIMERECORDS_HEAT7_INTER1


  type TTIMERECORDS_HEAT7_INTER1CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT7_INTER1FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT7_INTER1CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT7_INTER1Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT7_INTER1 that matches the filter.
     * @param {TTIMERECORDS_HEAT7_INTER1FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT7_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT7_INTER1
     * const tTIMERECORDS_HEAT7_INTER1 = await prisma.tTIMERECORDS_HEAT7_INTER1.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT7_INTER1FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_INTER1FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT7_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_INTER1Client<TTIMERECORDS_HEAT7_INTER1>, Prisma__TTIMERECORDS_HEAT7_INTER1Client<TTIMERECORDS_HEAT7_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_INTER1Client<TTIMERECORDS_HEAT7_INTER1 | null >, Prisma__TTIMERECORDS_HEAT7_INTER1Client<TTIMERECORDS_HEAT7_INTER1GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT7_INTER1 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_INTER1FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT7_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT7_INTER1
     * const tTIMERECORDS_HEAT7_INTER1 = await prisma.tTIMERECORDS_HEAT7_INTER1.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT7_INTER1FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT7_INTER1FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT7_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_INTER1Client<TTIMERECORDS_HEAT7_INTER1>, Prisma__TTIMERECORDS_HEAT7_INTER1Client<TTIMERECORDS_HEAT7_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_INTER1Client<TTIMERECORDS_HEAT7_INTER1 | null >, Prisma__TTIMERECORDS_HEAT7_INTER1Client<TTIMERECORDS_HEAT7_INTER1GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT7_INTER1s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_INTER1FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT7_INTER1s
     * const tTIMERECORDS_HEAT7_INTER1s = await prisma.tTIMERECORDS_HEAT7_INTER1.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT7_INTER1s
     * const tTIMERECORDS_HEAT7_INTER1s = await prisma.tTIMERECORDS_HEAT7_INTER1.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT7_INTER1WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT7_INTER1.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT7_INTER1FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT7_INTER1FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT7_INTER1>>, PrismaPromise<Array<TTIMERECORDS_HEAT7_INTER1GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT7_INTER1.
     * @param {TTIMERECORDS_HEAT7_INTER1CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT7_INTER1.
     * @example
     * // Create one TTIMERECORDS_HEAT7_INTER1
     * const TTIMERECORDS_HEAT7_INTER1 = await prisma.tTIMERECORDS_HEAT7_INTER1.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT7_INTER1
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT7_INTER1CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_INTER1CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_INTER1Client<TTIMERECORDS_HEAT7_INTER1>, Prisma__TTIMERECORDS_HEAT7_INTER1Client<TTIMERECORDS_HEAT7_INTER1GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT7_INTER1.
     * @param {TTIMERECORDS_HEAT7_INTER1DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT7_INTER1.
     * @example
     * // Delete one TTIMERECORDS_HEAT7_INTER1
     * const TTIMERECORDS_HEAT7_INTER1 = await prisma.tTIMERECORDS_HEAT7_INTER1.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT7_INTER1
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT7_INTER1DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_INTER1DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_INTER1Client<TTIMERECORDS_HEAT7_INTER1>, Prisma__TTIMERECORDS_HEAT7_INTER1Client<TTIMERECORDS_HEAT7_INTER1GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT7_INTER1.
     * @param {TTIMERECORDS_HEAT7_INTER1UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT7_INTER1.
     * @example
     * // Update one TTIMERECORDS_HEAT7_INTER1
     * const tTIMERECORDS_HEAT7_INTER1 = await prisma.tTIMERECORDS_HEAT7_INTER1.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT7_INTER1UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_INTER1UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_INTER1Client<TTIMERECORDS_HEAT7_INTER1>, Prisma__TTIMERECORDS_HEAT7_INTER1Client<TTIMERECORDS_HEAT7_INTER1GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT7_INTER1s.
     * @param {TTIMERECORDS_HEAT7_INTER1DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT7_INTER1s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT7_INTER1s
     * const { count } = await prisma.tTIMERECORDS_HEAT7_INTER1.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT7_INTER1DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT7_INTER1DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT7_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_INTER1UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT7_INTER1s
     * const tTIMERECORDS_HEAT7_INTER1 = await prisma.tTIMERECORDS_HEAT7_INTER1.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT7_INTER1UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_INTER1UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT7_INTER1.
     * @param {TTIMERECORDS_HEAT7_INTER1UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT7_INTER1.
     * @example
     * // Update or create a TTIMERECORDS_HEAT7_INTER1
     * const tTIMERECORDS_HEAT7_INTER1 = await prisma.tTIMERECORDS_HEAT7_INTER1.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT7_INTER1
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT7_INTER1 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT7_INTER1UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_INTER1UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_INTER1Client<TTIMERECORDS_HEAT7_INTER1>, Prisma__TTIMERECORDS_HEAT7_INTER1Client<TTIMERECORDS_HEAT7_INTER1GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT7_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_INTER1CountArgs} args - Arguments to filter TTIMERECORDS_HEAT7_INTER1s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT7_INTER1s
     * const count = await prisma.tTIMERECORDS_HEAT7_INTER1.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT7_INTER1s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT7_INTER1CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT7_INTER1CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT7_INTER1CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT7_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_INTER1AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT7_INTER1AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT7_INTER1AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT7_INTER1AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT7_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_INTER1GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT7_INTER1GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT7_INTER1GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT7_INTER1GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT7_INTER1GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT7_INTER1GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT7_INTER1.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT7_INTER1Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT7_INTER1 findUnique
   */
  export type TTIMERECORDS_HEAT7_INTER1FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT7_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT7_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT7_INTER1 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT7_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT7_INTER1 findFirst
   */
  export type TTIMERECORDS_HEAT7_INTER1FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT7_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT7_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT7_INTER1 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT7_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT7_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT7_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT7_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT7_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT7_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT7_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT7_INTER1s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT7_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT7_INTER1 findMany
   */
  export type TTIMERECORDS_HEAT7_INTER1FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT7_INTER1Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT7_INTER1s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT7_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT7_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT7_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT7_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT7_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT7_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT7_INTER1s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT7_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT7_INTER1 create
   */
  export type TTIMERECORDS_HEAT7_INTER1CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT7_INTER1Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT7_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT7_INTER1CreateInput, TTIMERECORDS_HEAT7_INTER1UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT7_INTER1 update
   */
  export type TTIMERECORDS_HEAT7_INTER1UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT7_INTER1Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT7_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT7_INTER1UpdateInput, TTIMERECORDS_HEAT7_INTER1UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT7_INTER1 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT7_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT7_INTER1 updateMany
   */
  export type TTIMERECORDS_HEAT7_INTER1UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT7_INTER1s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT7_INTER1UpdateManyMutationInput, TTIMERECORDS_HEAT7_INTER1UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT7_INTER1s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT7_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT7_INTER1 upsert
   */
  export type TTIMERECORDS_HEAT7_INTER1UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT7_INTER1Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT7_INTER1 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT7_INTER1WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT7_INTER1 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT7_INTER1 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT7_INTER1CreateInput, TTIMERECORDS_HEAT7_INTER1UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT7_INTER1 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT7_INTER1UpdateInput, TTIMERECORDS_HEAT7_INTER1UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT7_INTER1 delete
   */
  export type TTIMERECORDS_HEAT7_INTER1DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT7_INTER1Select | null
    /**
     * Filter which TTIMERECORDS_HEAT7_INTER1 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT7_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT7_INTER1 deleteMany
   */
  export type TTIMERECORDS_HEAT7_INTER1DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT7_INTER1s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT7_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT7_INTER1 without action
   */
  export type TTIMERECORDS_HEAT7_INTER1Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT7_INTER1Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT7_INTER2
   */


  export type AggregateTTIMERECORDS_HEAT7_INTER2 = {
    _count: TTIMERECORDS_HEAT7_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT7_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT7_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT7_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT7_INTER2MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT7_INTER2AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT7_INTER2SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT7_INTER2MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT7_INTER2MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT7_INTER2CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT7_INTER2AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT7_INTER2SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT7_INTER2MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT7_INTER2MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT7_INTER2CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT7_INTER2AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT7_INTER2 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT7_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT7_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT7_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT7_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT7_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT7_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT7_INTER2s
    **/
    _count?: true | TTIMERECORDS_HEAT7_INTER2CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT7_INTER2AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT7_INTER2SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT7_INTER2MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT7_INTER2MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT7_INTER2AggregateType<T extends TTIMERECORDS_HEAT7_INTER2AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT7_INTER2]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT7_INTER2[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT7_INTER2[P]>
  }




  export type TTIMERECORDS_HEAT7_INTER2GroupByArgs = {
    where?: TTIMERECORDS_HEAT7_INTER2WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT7_INTER2OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT7_INTER2ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT7_INTER2ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT7_INTER2CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT7_INTER2AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT7_INTER2SumAggregateInputType
    _min?: TTIMERECORDS_HEAT7_INTER2MinAggregateInputType
    _max?: TTIMERECORDS_HEAT7_INTER2MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT7_INTER2GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT7_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT7_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT7_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT7_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT7_INTER2MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT7_INTER2GroupByPayload<T extends TTIMERECORDS_HEAT7_INTER2GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT7_INTER2GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT7_INTER2GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT7_INTER2GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT7_INTER2GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT7_INTER2Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT7_INTER2GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT7_INTER2Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT7_INTER2
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT7_INTER2Args | TTIMERECORDS_HEAT7_INTER2FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT7_INTER2 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT7_INTER2 ? TTIMERECORDS_HEAT7_INTER2[P] : never
  } 
    : TTIMERECORDS_HEAT7_INTER2
  : TTIMERECORDS_HEAT7_INTER2


  type TTIMERECORDS_HEAT7_INTER2CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT7_INTER2FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT7_INTER2CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT7_INTER2Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT7_INTER2 that matches the filter.
     * @param {TTIMERECORDS_HEAT7_INTER2FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT7_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT7_INTER2
     * const tTIMERECORDS_HEAT7_INTER2 = await prisma.tTIMERECORDS_HEAT7_INTER2.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT7_INTER2FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_INTER2FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT7_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_INTER2Client<TTIMERECORDS_HEAT7_INTER2>, Prisma__TTIMERECORDS_HEAT7_INTER2Client<TTIMERECORDS_HEAT7_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_INTER2Client<TTIMERECORDS_HEAT7_INTER2 | null >, Prisma__TTIMERECORDS_HEAT7_INTER2Client<TTIMERECORDS_HEAT7_INTER2GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT7_INTER2 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_INTER2FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT7_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT7_INTER2
     * const tTIMERECORDS_HEAT7_INTER2 = await prisma.tTIMERECORDS_HEAT7_INTER2.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT7_INTER2FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT7_INTER2FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT7_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_INTER2Client<TTIMERECORDS_HEAT7_INTER2>, Prisma__TTIMERECORDS_HEAT7_INTER2Client<TTIMERECORDS_HEAT7_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_INTER2Client<TTIMERECORDS_HEAT7_INTER2 | null >, Prisma__TTIMERECORDS_HEAT7_INTER2Client<TTIMERECORDS_HEAT7_INTER2GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT7_INTER2s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_INTER2FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT7_INTER2s
     * const tTIMERECORDS_HEAT7_INTER2s = await prisma.tTIMERECORDS_HEAT7_INTER2.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT7_INTER2s
     * const tTIMERECORDS_HEAT7_INTER2s = await prisma.tTIMERECORDS_HEAT7_INTER2.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT7_INTER2WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT7_INTER2.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT7_INTER2FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT7_INTER2FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT7_INTER2>>, PrismaPromise<Array<TTIMERECORDS_HEAT7_INTER2GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT7_INTER2.
     * @param {TTIMERECORDS_HEAT7_INTER2CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT7_INTER2.
     * @example
     * // Create one TTIMERECORDS_HEAT7_INTER2
     * const TTIMERECORDS_HEAT7_INTER2 = await prisma.tTIMERECORDS_HEAT7_INTER2.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT7_INTER2
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT7_INTER2CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_INTER2CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_INTER2Client<TTIMERECORDS_HEAT7_INTER2>, Prisma__TTIMERECORDS_HEAT7_INTER2Client<TTIMERECORDS_HEAT7_INTER2GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT7_INTER2.
     * @param {TTIMERECORDS_HEAT7_INTER2DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT7_INTER2.
     * @example
     * // Delete one TTIMERECORDS_HEAT7_INTER2
     * const TTIMERECORDS_HEAT7_INTER2 = await prisma.tTIMERECORDS_HEAT7_INTER2.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT7_INTER2
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT7_INTER2DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_INTER2DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_INTER2Client<TTIMERECORDS_HEAT7_INTER2>, Prisma__TTIMERECORDS_HEAT7_INTER2Client<TTIMERECORDS_HEAT7_INTER2GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT7_INTER2.
     * @param {TTIMERECORDS_HEAT7_INTER2UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT7_INTER2.
     * @example
     * // Update one TTIMERECORDS_HEAT7_INTER2
     * const tTIMERECORDS_HEAT7_INTER2 = await prisma.tTIMERECORDS_HEAT7_INTER2.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT7_INTER2UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_INTER2UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_INTER2Client<TTIMERECORDS_HEAT7_INTER2>, Prisma__TTIMERECORDS_HEAT7_INTER2Client<TTIMERECORDS_HEAT7_INTER2GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT7_INTER2s.
     * @param {TTIMERECORDS_HEAT7_INTER2DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT7_INTER2s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT7_INTER2s
     * const { count } = await prisma.tTIMERECORDS_HEAT7_INTER2.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT7_INTER2DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT7_INTER2DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT7_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_INTER2UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT7_INTER2s
     * const tTIMERECORDS_HEAT7_INTER2 = await prisma.tTIMERECORDS_HEAT7_INTER2.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT7_INTER2UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_INTER2UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT7_INTER2.
     * @param {TTIMERECORDS_HEAT7_INTER2UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT7_INTER2.
     * @example
     * // Update or create a TTIMERECORDS_HEAT7_INTER2
     * const tTIMERECORDS_HEAT7_INTER2 = await prisma.tTIMERECORDS_HEAT7_INTER2.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT7_INTER2
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT7_INTER2 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT7_INTER2UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_INTER2UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_INTER2Client<TTIMERECORDS_HEAT7_INTER2>, Prisma__TTIMERECORDS_HEAT7_INTER2Client<TTIMERECORDS_HEAT7_INTER2GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT7_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_INTER2CountArgs} args - Arguments to filter TTIMERECORDS_HEAT7_INTER2s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT7_INTER2s
     * const count = await prisma.tTIMERECORDS_HEAT7_INTER2.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT7_INTER2s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT7_INTER2CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT7_INTER2CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT7_INTER2CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT7_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_INTER2AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT7_INTER2AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT7_INTER2AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT7_INTER2AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT7_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_INTER2GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT7_INTER2GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT7_INTER2GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT7_INTER2GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT7_INTER2GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT7_INTER2GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT7_INTER2.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT7_INTER2Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT7_INTER2 findUnique
   */
  export type TTIMERECORDS_HEAT7_INTER2FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT7_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT7_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT7_INTER2 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT7_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT7_INTER2 findFirst
   */
  export type TTIMERECORDS_HEAT7_INTER2FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT7_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT7_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT7_INTER2 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT7_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT7_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT7_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT7_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT7_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT7_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT7_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT7_INTER2s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT7_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT7_INTER2 findMany
   */
  export type TTIMERECORDS_HEAT7_INTER2FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT7_INTER2Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT7_INTER2s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT7_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT7_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT7_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT7_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT7_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT7_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT7_INTER2s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT7_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT7_INTER2 create
   */
  export type TTIMERECORDS_HEAT7_INTER2CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT7_INTER2Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT7_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT7_INTER2CreateInput, TTIMERECORDS_HEAT7_INTER2UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT7_INTER2 update
   */
  export type TTIMERECORDS_HEAT7_INTER2UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT7_INTER2Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT7_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT7_INTER2UpdateInput, TTIMERECORDS_HEAT7_INTER2UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT7_INTER2 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT7_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT7_INTER2 updateMany
   */
  export type TTIMERECORDS_HEAT7_INTER2UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT7_INTER2s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT7_INTER2UpdateManyMutationInput, TTIMERECORDS_HEAT7_INTER2UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT7_INTER2s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT7_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT7_INTER2 upsert
   */
  export type TTIMERECORDS_HEAT7_INTER2UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT7_INTER2Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT7_INTER2 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT7_INTER2WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT7_INTER2 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT7_INTER2 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT7_INTER2CreateInput, TTIMERECORDS_HEAT7_INTER2UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT7_INTER2 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT7_INTER2UpdateInput, TTIMERECORDS_HEAT7_INTER2UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT7_INTER2 delete
   */
  export type TTIMERECORDS_HEAT7_INTER2DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT7_INTER2Select | null
    /**
     * Filter which TTIMERECORDS_HEAT7_INTER2 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT7_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT7_INTER2 deleteMany
   */
  export type TTIMERECORDS_HEAT7_INTER2DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT7_INTER2s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT7_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT7_INTER2 without action
   */
  export type TTIMERECORDS_HEAT7_INTER2Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT7_INTER2Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT7_START
   */


  export type AggregateTTIMERECORDS_HEAT7_START = {
    _count: TTIMERECORDS_HEAT7_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT7_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT7_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT7_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT7_STARTMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT7_STARTAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT7_STARTSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT7_STARTMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT7_STARTMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT7_STARTCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT7_STARTAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT7_STARTSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT7_STARTMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT7_STARTMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT7_STARTCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT7_STARTAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT7_START to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT7_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT7_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT7_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT7_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT7_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT7_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT7_STARTS
    **/
    _count?: true | TTIMERECORDS_HEAT7_STARTCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT7_STARTAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT7_STARTSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT7_STARTMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT7_STARTMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT7_STARTAggregateType<T extends TTIMERECORDS_HEAT7_STARTAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT7_START]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT7_START[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT7_START[P]>
  }




  export type TTIMERECORDS_HEAT7_STARTGroupByArgs = {
    where?: TTIMERECORDS_HEAT7_STARTWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT7_STARTOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT7_STARTScalarFieldEnum>
    having?: TTIMERECORDS_HEAT7_STARTScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT7_STARTCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT7_STARTAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT7_STARTSumAggregateInputType
    _min?: TTIMERECORDS_HEAT7_STARTMinAggregateInputType
    _max?: TTIMERECORDS_HEAT7_STARTMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT7_STARTGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT7_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT7_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT7_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT7_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT7_STARTMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT7_STARTGroupByPayload<T extends TTIMERECORDS_HEAT7_STARTGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT7_STARTGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT7_STARTGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT7_STARTGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT7_STARTGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT7_STARTSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT7_STARTGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT7_STARTArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT7_START
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT7_STARTArgs | TTIMERECORDS_HEAT7_STARTFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT7_START 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT7_START ? TTIMERECORDS_HEAT7_START[P] : never
  } 
    : TTIMERECORDS_HEAT7_START
  : TTIMERECORDS_HEAT7_START


  type TTIMERECORDS_HEAT7_STARTCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT7_STARTFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT7_STARTCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT7_STARTDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT7_START that matches the filter.
     * @param {TTIMERECORDS_HEAT7_STARTFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT7_START
     * @example
     * // Get one TTIMERECORDS_HEAT7_START
     * const tTIMERECORDS_HEAT7_START = await prisma.tTIMERECORDS_HEAT7_START.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT7_STARTFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_STARTFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT7_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_STARTClient<TTIMERECORDS_HEAT7_START>, Prisma__TTIMERECORDS_HEAT7_STARTClient<TTIMERECORDS_HEAT7_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_STARTClient<TTIMERECORDS_HEAT7_START | null >, Prisma__TTIMERECORDS_HEAT7_STARTClient<TTIMERECORDS_HEAT7_STARTGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT7_START that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_STARTFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT7_START
     * @example
     * // Get one TTIMERECORDS_HEAT7_START
     * const tTIMERECORDS_HEAT7_START = await prisma.tTIMERECORDS_HEAT7_START.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT7_STARTFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT7_STARTFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT7_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_STARTClient<TTIMERECORDS_HEAT7_START>, Prisma__TTIMERECORDS_HEAT7_STARTClient<TTIMERECORDS_HEAT7_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_STARTClient<TTIMERECORDS_HEAT7_START | null >, Prisma__TTIMERECORDS_HEAT7_STARTClient<TTIMERECORDS_HEAT7_STARTGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT7_STARTS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_STARTFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT7_STARTS
     * const tTIMERECORDS_HEAT7_STARTS = await prisma.tTIMERECORDS_HEAT7_START.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT7_STARTS
     * const tTIMERECORDS_HEAT7_STARTS = await prisma.tTIMERECORDS_HEAT7_START.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT7_STARTWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT7_START.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT7_STARTFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT7_STARTFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT7_START>>, PrismaPromise<Array<TTIMERECORDS_HEAT7_STARTGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT7_START.
     * @param {TTIMERECORDS_HEAT7_STARTCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT7_START.
     * @example
     * // Create one TTIMERECORDS_HEAT7_START
     * const TTIMERECORDS_HEAT7_START = await prisma.tTIMERECORDS_HEAT7_START.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT7_START
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT7_STARTCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_STARTCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_STARTClient<TTIMERECORDS_HEAT7_START>, Prisma__TTIMERECORDS_HEAT7_STARTClient<TTIMERECORDS_HEAT7_STARTGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT7_START.
     * @param {TTIMERECORDS_HEAT7_STARTDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT7_START.
     * @example
     * // Delete one TTIMERECORDS_HEAT7_START
     * const TTIMERECORDS_HEAT7_START = await prisma.tTIMERECORDS_HEAT7_START.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT7_START
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT7_STARTDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_STARTDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_STARTClient<TTIMERECORDS_HEAT7_START>, Prisma__TTIMERECORDS_HEAT7_STARTClient<TTIMERECORDS_HEAT7_STARTGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT7_START.
     * @param {TTIMERECORDS_HEAT7_STARTUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT7_START.
     * @example
     * // Update one TTIMERECORDS_HEAT7_START
     * const tTIMERECORDS_HEAT7_START = await prisma.tTIMERECORDS_HEAT7_START.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT7_STARTUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_STARTUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_STARTClient<TTIMERECORDS_HEAT7_START>, Prisma__TTIMERECORDS_HEAT7_STARTClient<TTIMERECORDS_HEAT7_STARTGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT7_STARTS.
     * @param {TTIMERECORDS_HEAT7_STARTDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT7_STARTS to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT7_STARTS
     * const { count } = await prisma.tTIMERECORDS_HEAT7_START.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT7_STARTDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT7_STARTDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT7_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_STARTUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT7_STARTS
     * const tTIMERECORDS_HEAT7_START = await prisma.tTIMERECORDS_HEAT7_START.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT7_STARTUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_STARTUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT7_START.
     * @param {TTIMERECORDS_HEAT7_STARTUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT7_START.
     * @example
     * // Update or create a TTIMERECORDS_HEAT7_START
     * const tTIMERECORDS_HEAT7_START = await prisma.tTIMERECORDS_HEAT7_START.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT7_START
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT7_START we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT7_STARTUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT7_STARTUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT7_STARTClient<TTIMERECORDS_HEAT7_START>, Prisma__TTIMERECORDS_HEAT7_STARTClient<TTIMERECORDS_HEAT7_STARTGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT7_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_STARTCountArgs} args - Arguments to filter TTIMERECORDS_HEAT7_STARTS to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT7_STARTS
     * const count = await prisma.tTIMERECORDS_HEAT7_START.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT7_STARTS we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT7_STARTCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT7_STARTCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT7_STARTCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT7_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_STARTAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT7_STARTAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT7_STARTAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT7_STARTAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT7_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT7_STARTGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT7_STARTGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT7_STARTGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT7_STARTGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT7_STARTGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT7_STARTGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT7_START.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT7_STARTClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT7_START findUnique
   */
  export type TTIMERECORDS_HEAT7_STARTFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_START
     * 
    **/
    select?: TTIMERECORDS_HEAT7_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT7_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT7_START to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT7_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT7_START findFirst
   */
  export type TTIMERECORDS_HEAT7_STARTFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_START
     * 
    **/
    select?: TTIMERECORDS_HEAT7_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT7_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT7_START to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT7_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT7_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT7_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT7_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT7_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT7_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT7_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT7_STARTS.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT7_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT7_START findMany
   */
  export type TTIMERECORDS_HEAT7_STARTFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_START
     * 
    **/
    select?: TTIMERECORDS_HEAT7_STARTSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT7_STARTS to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT7_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT7_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT7_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT7_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT7_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT7_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT7_STARTS.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT7_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT7_START create
   */
  export type TTIMERECORDS_HEAT7_STARTCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_START
     * 
    **/
    select?: TTIMERECORDS_HEAT7_STARTSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT7_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT7_STARTCreateInput, TTIMERECORDS_HEAT7_STARTUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT7_START update
   */
  export type TTIMERECORDS_HEAT7_STARTUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_START
     * 
    **/
    select?: TTIMERECORDS_HEAT7_STARTSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT7_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT7_STARTUpdateInput, TTIMERECORDS_HEAT7_STARTUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT7_START to update.
     * 
    **/
    where: TTIMERECORDS_HEAT7_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT7_START updateMany
   */
  export type TTIMERECORDS_HEAT7_STARTUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT7_STARTS.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT7_STARTUpdateManyMutationInput, TTIMERECORDS_HEAT7_STARTUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT7_STARTS to update
     * 
    **/
    where?: TTIMERECORDS_HEAT7_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT7_START upsert
   */
  export type TTIMERECORDS_HEAT7_STARTUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_START
     * 
    **/
    select?: TTIMERECORDS_HEAT7_STARTSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT7_START to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT7_STARTWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT7_START found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT7_START with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT7_STARTCreateInput, TTIMERECORDS_HEAT7_STARTUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT7_START was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT7_STARTUpdateInput, TTIMERECORDS_HEAT7_STARTUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT7_START delete
   */
  export type TTIMERECORDS_HEAT7_STARTDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_START
     * 
    **/
    select?: TTIMERECORDS_HEAT7_STARTSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT7_START to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT7_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT7_START deleteMany
   */
  export type TTIMERECORDS_HEAT7_STARTDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT7_STARTS to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT7_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT7_START without action
   */
  export type TTIMERECORDS_HEAT7_STARTArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT7_START
     * 
    **/
    select?: TTIMERECORDS_HEAT7_STARTSelect | null
  }



  /**
   * Model TTIMERECORDS_HEAT8_FINISH
   */


  export type AggregateTTIMERECORDS_HEAT8_FINISH = {
    _count: TTIMERECORDS_HEAT8_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT8_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT8_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT8_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT8_FINISHMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT8_FINISHAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT8_FINISHSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT8_FINISHMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT8_FINISHMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT8_FINISHCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT8_FINISHAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT8_FINISHSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT8_FINISHMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT8_FINISHMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT8_FINISHCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT8_FINISHAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT8_FINISH to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT8_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT8_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT8_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT8_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT8_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT8_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT8_FINISHES
    **/
    _count?: true | TTIMERECORDS_HEAT8_FINISHCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT8_FINISHAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT8_FINISHSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT8_FINISHMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT8_FINISHMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT8_FINISHAggregateType<T extends TTIMERECORDS_HEAT8_FINISHAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT8_FINISH]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT8_FINISH[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT8_FINISH[P]>
  }




  export type TTIMERECORDS_HEAT8_FINISHGroupByArgs = {
    where?: TTIMERECORDS_HEAT8_FINISHWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT8_FINISHOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT8_FINISHScalarFieldEnum>
    having?: TTIMERECORDS_HEAT8_FINISHScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT8_FINISHCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT8_FINISHAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT8_FINISHSumAggregateInputType
    _min?: TTIMERECORDS_HEAT8_FINISHMinAggregateInputType
    _max?: TTIMERECORDS_HEAT8_FINISHMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT8_FINISHGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT8_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT8_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT8_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT8_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT8_FINISHMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT8_FINISHGroupByPayload<T extends TTIMERECORDS_HEAT8_FINISHGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT8_FINISHGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT8_FINISHGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT8_FINISHGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT8_FINISHGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT8_FINISHSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT8_FINISHGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT8_FINISHArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT8_FINISH
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT8_FINISHArgs | TTIMERECORDS_HEAT8_FINISHFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT8_FINISH 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT8_FINISH ? TTIMERECORDS_HEAT8_FINISH[P] : never
  } 
    : TTIMERECORDS_HEAT8_FINISH
  : TTIMERECORDS_HEAT8_FINISH


  type TTIMERECORDS_HEAT8_FINISHCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT8_FINISHFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT8_FINISHCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT8_FINISHDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT8_FINISH that matches the filter.
     * @param {TTIMERECORDS_HEAT8_FINISHFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT8_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT8_FINISH
     * const tTIMERECORDS_HEAT8_FINISH = await prisma.tTIMERECORDS_HEAT8_FINISH.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT8_FINISHFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_FINISHFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT8_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_FINISHClient<TTIMERECORDS_HEAT8_FINISH>, Prisma__TTIMERECORDS_HEAT8_FINISHClient<TTIMERECORDS_HEAT8_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_FINISHClient<TTIMERECORDS_HEAT8_FINISH | null >, Prisma__TTIMERECORDS_HEAT8_FINISHClient<TTIMERECORDS_HEAT8_FINISHGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT8_FINISH that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_FINISHFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT8_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT8_FINISH
     * const tTIMERECORDS_HEAT8_FINISH = await prisma.tTIMERECORDS_HEAT8_FINISH.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT8_FINISHFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT8_FINISHFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT8_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_FINISHClient<TTIMERECORDS_HEAT8_FINISH>, Prisma__TTIMERECORDS_HEAT8_FINISHClient<TTIMERECORDS_HEAT8_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_FINISHClient<TTIMERECORDS_HEAT8_FINISH | null >, Prisma__TTIMERECORDS_HEAT8_FINISHClient<TTIMERECORDS_HEAT8_FINISHGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT8_FINISHES that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_FINISHFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT8_FINISHES
     * const tTIMERECORDS_HEAT8_FINISHES = await prisma.tTIMERECORDS_HEAT8_FINISH.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT8_FINISHES
     * const tTIMERECORDS_HEAT8_FINISHES = await prisma.tTIMERECORDS_HEAT8_FINISH.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT8_FINISHWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT8_FINISH.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT8_FINISHFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT8_FINISHFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT8_FINISH>>, PrismaPromise<Array<TTIMERECORDS_HEAT8_FINISHGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT8_FINISH.
     * @param {TTIMERECORDS_HEAT8_FINISHCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT8_FINISH.
     * @example
     * // Create one TTIMERECORDS_HEAT8_FINISH
     * const TTIMERECORDS_HEAT8_FINISH = await prisma.tTIMERECORDS_HEAT8_FINISH.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT8_FINISH
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT8_FINISHCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_FINISHCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_FINISHClient<TTIMERECORDS_HEAT8_FINISH>, Prisma__TTIMERECORDS_HEAT8_FINISHClient<TTIMERECORDS_HEAT8_FINISHGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT8_FINISH.
     * @param {TTIMERECORDS_HEAT8_FINISHDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT8_FINISH.
     * @example
     * // Delete one TTIMERECORDS_HEAT8_FINISH
     * const TTIMERECORDS_HEAT8_FINISH = await prisma.tTIMERECORDS_HEAT8_FINISH.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT8_FINISH
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT8_FINISHDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_FINISHDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_FINISHClient<TTIMERECORDS_HEAT8_FINISH>, Prisma__TTIMERECORDS_HEAT8_FINISHClient<TTIMERECORDS_HEAT8_FINISHGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT8_FINISH.
     * @param {TTIMERECORDS_HEAT8_FINISHUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT8_FINISH.
     * @example
     * // Update one TTIMERECORDS_HEAT8_FINISH
     * const tTIMERECORDS_HEAT8_FINISH = await prisma.tTIMERECORDS_HEAT8_FINISH.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT8_FINISHUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_FINISHUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_FINISHClient<TTIMERECORDS_HEAT8_FINISH>, Prisma__TTIMERECORDS_HEAT8_FINISHClient<TTIMERECORDS_HEAT8_FINISHGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT8_FINISHES.
     * @param {TTIMERECORDS_HEAT8_FINISHDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT8_FINISHES to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT8_FINISHES
     * const { count } = await prisma.tTIMERECORDS_HEAT8_FINISH.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT8_FINISHDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT8_FINISHDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT8_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_FINISHUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT8_FINISHES
     * const tTIMERECORDS_HEAT8_FINISH = await prisma.tTIMERECORDS_HEAT8_FINISH.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT8_FINISHUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_FINISHUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT8_FINISH.
     * @param {TTIMERECORDS_HEAT8_FINISHUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT8_FINISH.
     * @example
     * // Update or create a TTIMERECORDS_HEAT8_FINISH
     * const tTIMERECORDS_HEAT8_FINISH = await prisma.tTIMERECORDS_HEAT8_FINISH.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT8_FINISH
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT8_FINISH we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT8_FINISHUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_FINISHUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_FINISHClient<TTIMERECORDS_HEAT8_FINISH>, Prisma__TTIMERECORDS_HEAT8_FINISHClient<TTIMERECORDS_HEAT8_FINISHGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT8_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_FINISHCountArgs} args - Arguments to filter TTIMERECORDS_HEAT8_FINISHES to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT8_FINISHES
     * const count = await prisma.tTIMERECORDS_HEAT8_FINISH.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT8_FINISHES we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT8_FINISHCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT8_FINISHCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT8_FINISHCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT8_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_FINISHAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT8_FINISHAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT8_FINISHAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT8_FINISHAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT8_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_FINISHGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT8_FINISHGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT8_FINISHGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT8_FINISHGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT8_FINISHGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT8_FINISHGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT8_FINISH.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT8_FINISHClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT8_FINISH findUnique
   */
  export type TTIMERECORDS_HEAT8_FINISHFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT8_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT8_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT8_FINISH to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT8_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT8_FINISH findFirst
   */
  export type TTIMERECORDS_HEAT8_FINISHFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT8_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT8_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT8_FINISH to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT8_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT8_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT8_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT8_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT8_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT8_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT8_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT8_FINISHES.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT8_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT8_FINISH findMany
   */
  export type TTIMERECORDS_HEAT8_FINISHFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT8_FINISHSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT8_FINISHES to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT8_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT8_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT8_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT8_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT8_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT8_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT8_FINISHES.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT8_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT8_FINISH create
   */
  export type TTIMERECORDS_HEAT8_FINISHCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT8_FINISHSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT8_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT8_FINISHCreateInput, TTIMERECORDS_HEAT8_FINISHUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT8_FINISH update
   */
  export type TTIMERECORDS_HEAT8_FINISHUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT8_FINISHSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT8_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT8_FINISHUpdateInput, TTIMERECORDS_HEAT8_FINISHUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT8_FINISH to update.
     * 
    **/
    where: TTIMERECORDS_HEAT8_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT8_FINISH updateMany
   */
  export type TTIMERECORDS_HEAT8_FINISHUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT8_FINISHES.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT8_FINISHUpdateManyMutationInput, TTIMERECORDS_HEAT8_FINISHUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT8_FINISHES to update
     * 
    **/
    where?: TTIMERECORDS_HEAT8_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT8_FINISH upsert
   */
  export type TTIMERECORDS_HEAT8_FINISHUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT8_FINISHSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT8_FINISH to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT8_FINISHWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT8_FINISH found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT8_FINISH with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT8_FINISHCreateInput, TTIMERECORDS_HEAT8_FINISHUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT8_FINISH was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT8_FINISHUpdateInput, TTIMERECORDS_HEAT8_FINISHUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT8_FINISH delete
   */
  export type TTIMERECORDS_HEAT8_FINISHDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT8_FINISHSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT8_FINISH to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT8_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT8_FINISH deleteMany
   */
  export type TTIMERECORDS_HEAT8_FINISHDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT8_FINISHES to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT8_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT8_FINISH without action
   */
  export type TTIMERECORDS_HEAT8_FINISHArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT8_FINISHSelect | null
  }



  /**
   * Model TTIMERECORDS_HEAT8_INTER1
   */


  export type AggregateTTIMERECORDS_HEAT8_INTER1 = {
    _count: TTIMERECORDS_HEAT8_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT8_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT8_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT8_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT8_INTER1MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT8_INTER1AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT8_INTER1SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT8_INTER1MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT8_INTER1MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT8_INTER1CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT8_INTER1AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT8_INTER1SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT8_INTER1MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT8_INTER1MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT8_INTER1CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT8_INTER1AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT8_INTER1 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT8_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT8_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT8_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT8_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT8_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT8_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT8_INTER1s
    **/
    _count?: true | TTIMERECORDS_HEAT8_INTER1CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT8_INTER1AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT8_INTER1SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT8_INTER1MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT8_INTER1MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT8_INTER1AggregateType<T extends TTIMERECORDS_HEAT8_INTER1AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT8_INTER1]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT8_INTER1[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT8_INTER1[P]>
  }




  export type TTIMERECORDS_HEAT8_INTER1GroupByArgs = {
    where?: TTIMERECORDS_HEAT8_INTER1WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT8_INTER1OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT8_INTER1ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT8_INTER1ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT8_INTER1CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT8_INTER1AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT8_INTER1SumAggregateInputType
    _min?: TTIMERECORDS_HEAT8_INTER1MinAggregateInputType
    _max?: TTIMERECORDS_HEAT8_INTER1MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT8_INTER1GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT8_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT8_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT8_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT8_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT8_INTER1MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT8_INTER1GroupByPayload<T extends TTIMERECORDS_HEAT8_INTER1GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT8_INTER1GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT8_INTER1GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT8_INTER1GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT8_INTER1GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT8_INTER1Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT8_INTER1GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT8_INTER1Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT8_INTER1
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT8_INTER1Args | TTIMERECORDS_HEAT8_INTER1FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT8_INTER1 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT8_INTER1 ? TTIMERECORDS_HEAT8_INTER1[P] : never
  } 
    : TTIMERECORDS_HEAT8_INTER1
  : TTIMERECORDS_HEAT8_INTER1


  type TTIMERECORDS_HEAT8_INTER1CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT8_INTER1FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT8_INTER1CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT8_INTER1Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT8_INTER1 that matches the filter.
     * @param {TTIMERECORDS_HEAT8_INTER1FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT8_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT8_INTER1
     * const tTIMERECORDS_HEAT8_INTER1 = await prisma.tTIMERECORDS_HEAT8_INTER1.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT8_INTER1FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_INTER1FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT8_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_INTER1Client<TTIMERECORDS_HEAT8_INTER1>, Prisma__TTIMERECORDS_HEAT8_INTER1Client<TTIMERECORDS_HEAT8_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_INTER1Client<TTIMERECORDS_HEAT8_INTER1 | null >, Prisma__TTIMERECORDS_HEAT8_INTER1Client<TTIMERECORDS_HEAT8_INTER1GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT8_INTER1 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_INTER1FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT8_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT8_INTER1
     * const tTIMERECORDS_HEAT8_INTER1 = await prisma.tTIMERECORDS_HEAT8_INTER1.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT8_INTER1FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT8_INTER1FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT8_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_INTER1Client<TTIMERECORDS_HEAT8_INTER1>, Prisma__TTIMERECORDS_HEAT8_INTER1Client<TTIMERECORDS_HEAT8_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_INTER1Client<TTIMERECORDS_HEAT8_INTER1 | null >, Prisma__TTIMERECORDS_HEAT8_INTER1Client<TTIMERECORDS_HEAT8_INTER1GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT8_INTER1s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_INTER1FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT8_INTER1s
     * const tTIMERECORDS_HEAT8_INTER1s = await prisma.tTIMERECORDS_HEAT8_INTER1.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT8_INTER1s
     * const tTIMERECORDS_HEAT8_INTER1s = await prisma.tTIMERECORDS_HEAT8_INTER1.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT8_INTER1WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT8_INTER1.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT8_INTER1FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT8_INTER1FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT8_INTER1>>, PrismaPromise<Array<TTIMERECORDS_HEAT8_INTER1GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT8_INTER1.
     * @param {TTIMERECORDS_HEAT8_INTER1CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT8_INTER1.
     * @example
     * // Create one TTIMERECORDS_HEAT8_INTER1
     * const TTIMERECORDS_HEAT8_INTER1 = await prisma.tTIMERECORDS_HEAT8_INTER1.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT8_INTER1
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT8_INTER1CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_INTER1CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_INTER1Client<TTIMERECORDS_HEAT8_INTER1>, Prisma__TTIMERECORDS_HEAT8_INTER1Client<TTIMERECORDS_HEAT8_INTER1GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT8_INTER1.
     * @param {TTIMERECORDS_HEAT8_INTER1DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT8_INTER1.
     * @example
     * // Delete one TTIMERECORDS_HEAT8_INTER1
     * const TTIMERECORDS_HEAT8_INTER1 = await prisma.tTIMERECORDS_HEAT8_INTER1.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT8_INTER1
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT8_INTER1DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_INTER1DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_INTER1Client<TTIMERECORDS_HEAT8_INTER1>, Prisma__TTIMERECORDS_HEAT8_INTER1Client<TTIMERECORDS_HEAT8_INTER1GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT8_INTER1.
     * @param {TTIMERECORDS_HEAT8_INTER1UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT8_INTER1.
     * @example
     * // Update one TTIMERECORDS_HEAT8_INTER1
     * const tTIMERECORDS_HEAT8_INTER1 = await prisma.tTIMERECORDS_HEAT8_INTER1.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT8_INTER1UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_INTER1UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_INTER1Client<TTIMERECORDS_HEAT8_INTER1>, Prisma__TTIMERECORDS_HEAT8_INTER1Client<TTIMERECORDS_HEAT8_INTER1GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT8_INTER1s.
     * @param {TTIMERECORDS_HEAT8_INTER1DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT8_INTER1s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT8_INTER1s
     * const { count } = await prisma.tTIMERECORDS_HEAT8_INTER1.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT8_INTER1DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT8_INTER1DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT8_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_INTER1UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT8_INTER1s
     * const tTIMERECORDS_HEAT8_INTER1 = await prisma.tTIMERECORDS_HEAT8_INTER1.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT8_INTER1UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_INTER1UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT8_INTER1.
     * @param {TTIMERECORDS_HEAT8_INTER1UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT8_INTER1.
     * @example
     * // Update or create a TTIMERECORDS_HEAT8_INTER1
     * const tTIMERECORDS_HEAT8_INTER1 = await prisma.tTIMERECORDS_HEAT8_INTER1.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT8_INTER1
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT8_INTER1 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT8_INTER1UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_INTER1UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_INTER1Client<TTIMERECORDS_HEAT8_INTER1>, Prisma__TTIMERECORDS_HEAT8_INTER1Client<TTIMERECORDS_HEAT8_INTER1GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT8_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_INTER1CountArgs} args - Arguments to filter TTIMERECORDS_HEAT8_INTER1s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT8_INTER1s
     * const count = await prisma.tTIMERECORDS_HEAT8_INTER1.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT8_INTER1s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT8_INTER1CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT8_INTER1CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT8_INTER1CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT8_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_INTER1AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT8_INTER1AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT8_INTER1AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT8_INTER1AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT8_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_INTER1GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT8_INTER1GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT8_INTER1GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT8_INTER1GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT8_INTER1GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT8_INTER1GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT8_INTER1.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT8_INTER1Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT8_INTER1 findUnique
   */
  export type TTIMERECORDS_HEAT8_INTER1FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT8_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT8_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT8_INTER1 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT8_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT8_INTER1 findFirst
   */
  export type TTIMERECORDS_HEAT8_INTER1FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT8_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT8_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT8_INTER1 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT8_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT8_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT8_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT8_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT8_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT8_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT8_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT8_INTER1s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT8_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT8_INTER1 findMany
   */
  export type TTIMERECORDS_HEAT8_INTER1FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT8_INTER1Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT8_INTER1s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT8_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT8_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT8_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT8_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT8_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT8_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT8_INTER1s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT8_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT8_INTER1 create
   */
  export type TTIMERECORDS_HEAT8_INTER1CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT8_INTER1Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT8_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT8_INTER1CreateInput, TTIMERECORDS_HEAT8_INTER1UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT8_INTER1 update
   */
  export type TTIMERECORDS_HEAT8_INTER1UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT8_INTER1Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT8_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT8_INTER1UpdateInput, TTIMERECORDS_HEAT8_INTER1UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT8_INTER1 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT8_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT8_INTER1 updateMany
   */
  export type TTIMERECORDS_HEAT8_INTER1UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT8_INTER1s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT8_INTER1UpdateManyMutationInput, TTIMERECORDS_HEAT8_INTER1UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT8_INTER1s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT8_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT8_INTER1 upsert
   */
  export type TTIMERECORDS_HEAT8_INTER1UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT8_INTER1Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT8_INTER1 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT8_INTER1WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT8_INTER1 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT8_INTER1 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT8_INTER1CreateInput, TTIMERECORDS_HEAT8_INTER1UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT8_INTER1 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT8_INTER1UpdateInput, TTIMERECORDS_HEAT8_INTER1UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT8_INTER1 delete
   */
  export type TTIMERECORDS_HEAT8_INTER1DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT8_INTER1Select | null
    /**
     * Filter which TTIMERECORDS_HEAT8_INTER1 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT8_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT8_INTER1 deleteMany
   */
  export type TTIMERECORDS_HEAT8_INTER1DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT8_INTER1s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT8_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT8_INTER1 without action
   */
  export type TTIMERECORDS_HEAT8_INTER1Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT8_INTER1Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT8_INTER2
   */


  export type AggregateTTIMERECORDS_HEAT8_INTER2 = {
    _count: TTIMERECORDS_HEAT8_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT8_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT8_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT8_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT8_INTER2MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT8_INTER2AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT8_INTER2SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT8_INTER2MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT8_INTER2MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT8_INTER2CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT8_INTER2AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT8_INTER2SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT8_INTER2MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT8_INTER2MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT8_INTER2CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT8_INTER2AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT8_INTER2 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT8_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT8_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT8_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT8_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT8_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT8_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT8_INTER2s
    **/
    _count?: true | TTIMERECORDS_HEAT8_INTER2CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT8_INTER2AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT8_INTER2SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT8_INTER2MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT8_INTER2MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT8_INTER2AggregateType<T extends TTIMERECORDS_HEAT8_INTER2AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT8_INTER2]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT8_INTER2[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT8_INTER2[P]>
  }




  export type TTIMERECORDS_HEAT8_INTER2GroupByArgs = {
    where?: TTIMERECORDS_HEAT8_INTER2WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT8_INTER2OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT8_INTER2ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT8_INTER2ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT8_INTER2CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT8_INTER2AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT8_INTER2SumAggregateInputType
    _min?: TTIMERECORDS_HEAT8_INTER2MinAggregateInputType
    _max?: TTIMERECORDS_HEAT8_INTER2MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT8_INTER2GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT8_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT8_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT8_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT8_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT8_INTER2MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT8_INTER2GroupByPayload<T extends TTIMERECORDS_HEAT8_INTER2GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT8_INTER2GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT8_INTER2GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT8_INTER2GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT8_INTER2GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT8_INTER2Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT8_INTER2GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT8_INTER2Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT8_INTER2
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT8_INTER2Args | TTIMERECORDS_HEAT8_INTER2FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT8_INTER2 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT8_INTER2 ? TTIMERECORDS_HEAT8_INTER2[P] : never
  } 
    : TTIMERECORDS_HEAT8_INTER2
  : TTIMERECORDS_HEAT8_INTER2


  type TTIMERECORDS_HEAT8_INTER2CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT8_INTER2FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT8_INTER2CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT8_INTER2Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT8_INTER2 that matches the filter.
     * @param {TTIMERECORDS_HEAT8_INTER2FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT8_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT8_INTER2
     * const tTIMERECORDS_HEAT8_INTER2 = await prisma.tTIMERECORDS_HEAT8_INTER2.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT8_INTER2FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_INTER2FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT8_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_INTER2Client<TTIMERECORDS_HEAT8_INTER2>, Prisma__TTIMERECORDS_HEAT8_INTER2Client<TTIMERECORDS_HEAT8_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_INTER2Client<TTIMERECORDS_HEAT8_INTER2 | null >, Prisma__TTIMERECORDS_HEAT8_INTER2Client<TTIMERECORDS_HEAT8_INTER2GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT8_INTER2 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_INTER2FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT8_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT8_INTER2
     * const tTIMERECORDS_HEAT8_INTER2 = await prisma.tTIMERECORDS_HEAT8_INTER2.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT8_INTER2FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT8_INTER2FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT8_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_INTER2Client<TTIMERECORDS_HEAT8_INTER2>, Prisma__TTIMERECORDS_HEAT8_INTER2Client<TTIMERECORDS_HEAT8_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_INTER2Client<TTIMERECORDS_HEAT8_INTER2 | null >, Prisma__TTIMERECORDS_HEAT8_INTER2Client<TTIMERECORDS_HEAT8_INTER2GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT8_INTER2s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_INTER2FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT8_INTER2s
     * const tTIMERECORDS_HEAT8_INTER2s = await prisma.tTIMERECORDS_HEAT8_INTER2.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT8_INTER2s
     * const tTIMERECORDS_HEAT8_INTER2s = await prisma.tTIMERECORDS_HEAT8_INTER2.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT8_INTER2WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT8_INTER2.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT8_INTER2FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT8_INTER2FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT8_INTER2>>, PrismaPromise<Array<TTIMERECORDS_HEAT8_INTER2GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT8_INTER2.
     * @param {TTIMERECORDS_HEAT8_INTER2CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT8_INTER2.
     * @example
     * // Create one TTIMERECORDS_HEAT8_INTER2
     * const TTIMERECORDS_HEAT8_INTER2 = await prisma.tTIMERECORDS_HEAT8_INTER2.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT8_INTER2
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT8_INTER2CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_INTER2CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_INTER2Client<TTIMERECORDS_HEAT8_INTER2>, Prisma__TTIMERECORDS_HEAT8_INTER2Client<TTIMERECORDS_HEAT8_INTER2GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT8_INTER2.
     * @param {TTIMERECORDS_HEAT8_INTER2DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT8_INTER2.
     * @example
     * // Delete one TTIMERECORDS_HEAT8_INTER2
     * const TTIMERECORDS_HEAT8_INTER2 = await prisma.tTIMERECORDS_HEAT8_INTER2.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT8_INTER2
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT8_INTER2DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_INTER2DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_INTER2Client<TTIMERECORDS_HEAT8_INTER2>, Prisma__TTIMERECORDS_HEAT8_INTER2Client<TTIMERECORDS_HEAT8_INTER2GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT8_INTER2.
     * @param {TTIMERECORDS_HEAT8_INTER2UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT8_INTER2.
     * @example
     * // Update one TTIMERECORDS_HEAT8_INTER2
     * const tTIMERECORDS_HEAT8_INTER2 = await prisma.tTIMERECORDS_HEAT8_INTER2.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT8_INTER2UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_INTER2UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_INTER2Client<TTIMERECORDS_HEAT8_INTER2>, Prisma__TTIMERECORDS_HEAT8_INTER2Client<TTIMERECORDS_HEAT8_INTER2GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT8_INTER2s.
     * @param {TTIMERECORDS_HEAT8_INTER2DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT8_INTER2s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT8_INTER2s
     * const { count } = await prisma.tTIMERECORDS_HEAT8_INTER2.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT8_INTER2DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT8_INTER2DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT8_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_INTER2UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT8_INTER2s
     * const tTIMERECORDS_HEAT8_INTER2 = await prisma.tTIMERECORDS_HEAT8_INTER2.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT8_INTER2UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_INTER2UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT8_INTER2.
     * @param {TTIMERECORDS_HEAT8_INTER2UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT8_INTER2.
     * @example
     * // Update or create a TTIMERECORDS_HEAT8_INTER2
     * const tTIMERECORDS_HEAT8_INTER2 = await prisma.tTIMERECORDS_HEAT8_INTER2.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT8_INTER2
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT8_INTER2 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT8_INTER2UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_INTER2UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_INTER2Client<TTIMERECORDS_HEAT8_INTER2>, Prisma__TTIMERECORDS_HEAT8_INTER2Client<TTIMERECORDS_HEAT8_INTER2GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT8_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_INTER2CountArgs} args - Arguments to filter TTIMERECORDS_HEAT8_INTER2s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT8_INTER2s
     * const count = await prisma.tTIMERECORDS_HEAT8_INTER2.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT8_INTER2s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT8_INTER2CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT8_INTER2CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT8_INTER2CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT8_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_INTER2AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT8_INTER2AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT8_INTER2AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT8_INTER2AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT8_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_INTER2GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT8_INTER2GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT8_INTER2GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT8_INTER2GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT8_INTER2GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT8_INTER2GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT8_INTER2.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT8_INTER2Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT8_INTER2 findUnique
   */
  export type TTIMERECORDS_HEAT8_INTER2FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT8_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT8_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT8_INTER2 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT8_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT8_INTER2 findFirst
   */
  export type TTIMERECORDS_HEAT8_INTER2FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT8_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT8_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT8_INTER2 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT8_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT8_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT8_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT8_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT8_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT8_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT8_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT8_INTER2s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT8_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT8_INTER2 findMany
   */
  export type TTIMERECORDS_HEAT8_INTER2FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT8_INTER2Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT8_INTER2s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT8_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT8_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT8_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT8_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT8_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT8_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT8_INTER2s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT8_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT8_INTER2 create
   */
  export type TTIMERECORDS_HEAT8_INTER2CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT8_INTER2Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT8_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT8_INTER2CreateInput, TTIMERECORDS_HEAT8_INTER2UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT8_INTER2 update
   */
  export type TTIMERECORDS_HEAT8_INTER2UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT8_INTER2Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT8_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT8_INTER2UpdateInput, TTIMERECORDS_HEAT8_INTER2UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT8_INTER2 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT8_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT8_INTER2 updateMany
   */
  export type TTIMERECORDS_HEAT8_INTER2UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT8_INTER2s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT8_INTER2UpdateManyMutationInput, TTIMERECORDS_HEAT8_INTER2UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT8_INTER2s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT8_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT8_INTER2 upsert
   */
  export type TTIMERECORDS_HEAT8_INTER2UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT8_INTER2Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT8_INTER2 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT8_INTER2WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT8_INTER2 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT8_INTER2 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT8_INTER2CreateInput, TTIMERECORDS_HEAT8_INTER2UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT8_INTER2 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT8_INTER2UpdateInput, TTIMERECORDS_HEAT8_INTER2UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT8_INTER2 delete
   */
  export type TTIMERECORDS_HEAT8_INTER2DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT8_INTER2Select | null
    /**
     * Filter which TTIMERECORDS_HEAT8_INTER2 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT8_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT8_INTER2 deleteMany
   */
  export type TTIMERECORDS_HEAT8_INTER2DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT8_INTER2s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT8_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT8_INTER2 without action
   */
  export type TTIMERECORDS_HEAT8_INTER2Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT8_INTER2Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT8_START
   */


  export type AggregateTTIMERECORDS_HEAT8_START = {
    _count: TTIMERECORDS_HEAT8_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT8_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT8_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT8_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT8_STARTMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT8_STARTAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT8_STARTSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT8_STARTMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT8_STARTMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT8_STARTCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT8_STARTAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT8_STARTSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT8_STARTMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT8_STARTMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT8_STARTCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT8_STARTAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT8_START to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT8_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT8_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT8_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT8_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT8_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT8_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT8_STARTS
    **/
    _count?: true | TTIMERECORDS_HEAT8_STARTCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT8_STARTAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT8_STARTSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT8_STARTMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT8_STARTMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT8_STARTAggregateType<T extends TTIMERECORDS_HEAT8_STARTAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT8_START]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT8_START[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT8_START[P]>
  }




  export type TTIMERECORDS_HEAT8_STARTGroupByArgs = {
    where?: TTIMERECORDS_HEAT8_STARTWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT8_STARTOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT8_STARTScalarFieldEnum>
    having?: TTIMERECORDS_HEAT8_STARTScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT8_STARTCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT8_STARTAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT8_STARTSumAggregateInputType
    _min?: TTIMERECORDS_HEAT8_STARTMinAggregateInputType
    _max?: TTIMERECORDS_HEAT8_STARTMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT8_STARTGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT8_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT8_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT8_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT8_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT8_STARTMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT8_STARTGroupByPayload<T extends TTIMERECORDS_HEAT8_STARTGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT8_STARTGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT8_STARTGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT8_STARTGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT8_STARTGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT8_STARTSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT8_STARTGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT8_STARTArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT8_START
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT8_STARTArgs | TTIMERECORDS_HEAT8_STARTFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT8_START 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT8_START ? TTIMERECORDS_HEAT8_START[P] : never
  } 
    : TTIMERECORDS_HEAT8_START
  : TTIMERECORDS_HEAT8_START


  type TTIMERECORDS_HEAT8_STARTCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT8_STARTFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT8_STARTCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT8_STARTDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT8_START that matches the filter.
     * @param {TTIMERECORDS_HEAT8_STARTFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT8_START
     * @example
     * // Get one TTIMERECORDS_HEAT8_START
     * const tTIMERECORDS_HEAT8_START = await prisma.tTIMERECORDS_HEAT8_START.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT8_STARTFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_STARTFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT8_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_STARTClient<TTIMERECORDS_HEAT8_START>, Prisma__TTIMERECORDS_HEAT8_STARTClient<TTIMERECORDS_HEAT8_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_STARTClient<TTIMERECORDS_HEAT8_START | null >, Prisma__TTIMERECORDS_HEAT8_STARTClient<TTIMERECORDS_HEAT8_STARTGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT8_START that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_STARTFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT8_START
     * @example
     * // Get one TTIMERECORDS_HEAT8_START
     * const tTIMERECORDS_HEAT8_START = await prisma.tTIMERECORDS_HEAT8_START.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT8_STARTFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT8_STARTFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT8_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_STARTClient<TTIMERECORDS_HEAT8_START>, Prisma__TTIMERECORDS_HEAT8_STARTClient<TTIMERECORDS_HEAT8_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_STARTClient<TTIMERECORDS_HEAT8_START | null >, Prisma__TTIMERECORDS_HEAT8_STARTClient<TTIMERECORDS_HEAT8_STARTGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT8_STARTS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_STARTFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT8_STARTS
     * const tTIMERECORDS_HEAT8_STARTS = await prisma.tTIMERECORDS_HEAT8_START.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT8_STARTS
     * const tTIMERECORDS_HEAT8_STARTS = await prisma.tTIMERECORDS_HEAT8_START.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT8_STARTWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT8_START.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT8_STARTFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT8_STARTFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT8_START>>, PrismaPromise<Array<TTIMERECORDS_HEAT8_STARTGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT8_START.
     * @param {TTIMERECORDS_HEAT8_STARTCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT8_START.
     * @example
     * // Create one TTIMERECORDS_HEAT8_START
     * const TTIMERECORDS_HEAT8_START = await prisma.tTIMERECORDS_HEAT8_START.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT8_START
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT8_STARTCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_STARTCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_STARTClient<TTIMERECORDS_HEAT8_START>, Prisma__TTIMERECORDS_HEAT8_STARTClient<TTIMERECORDS_HEAT8_STARTGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT8_START.
     * @param {TTIMERECORDS_HEAT8_STARTDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT8_START.
     * @example
     * // Delete one TTIMERECORDS_HEAT8_START
     * const TTIMERECORDS_HEAT8_START = await prisma.tTIMERECORDS_HEAT8_START.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT8_START
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT8_STARTDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_STARTDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_STARTClient<TTIMERECORDS_HEAT8_START>, Prisma__TTIMERECORDS_HEAT8_STARTClient<TTIMERECORDS_HEAT8_STARTGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT8_START.
     * @param {TTIMERECORDS_HEAT8_STARTUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT8_START.
     * @example
     * // Update one TTIMERECORDS_HEAT8_START
     * const tTIMERECORDS_HEAT8_START = await prisma.tTIMERECORDS_HEAT8_START.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT8_STARTUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_STARTUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_STARTClient<TTIMERECORDS_HEAT8_START>, Prisma__TTIMERECORDS_HEAT8_STARTClient<TTIMERECORDS_HEAT8_STARTGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT8_STARTS.
     * @param {TTIMERECORDS_HEAT8_STARTDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT8_STARTS to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT8_STARTS
     * const { count } = await prisma.tTIMERECORDS_HEAT8_START.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT8_STARTDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT8_STARTDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT8_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_STARTUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT8_STARTS
     * const tTIMERECORDS_HEAT8_START = await prisma.tTIMERECORDS_HEAT8_START.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT8_STARTUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_STARTUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT8_START.
     * @param {TTIMERECORDS_HEAT8_STARTUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT8_START.
     * @example
     * // Update or create a TTIMERECORDS_HEAT8_START
     * const tTIMERECORDS_HEAT8_START = await prisma.tTIMERECORDS_HEAT8_START.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT8_START
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT8_START we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT8_STARTUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT8_STARTUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT8_STARTClient<TTIMERECORDS_HEAT8_START>, Prisma__TTIMERECORDS_HEAT8_STARTClient<TTIMERECORDS_HEAT8_STARTGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT8_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_STARTCountArgs} args - Arguments to filter TTIMERECORDS_HEAT8_STARTS to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT8_STARTS
     * const count = await prisma.tTIMERECORDS_HEAT8_START.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT8_STARTS we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT8_STARTCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT8_STARTCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT8_STARTCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT8_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_STARTAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT8_STARTAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT8_STARTAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT8_STARTAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT8_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT8_STARTGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT8_STARTGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT8_STARTGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT8_STARTGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT8_STARTGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT8_STARTGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT8_START.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT8_STARTClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT8_START findUnique
   */
  export type TTIMERECORDS_HEAT8_STARTFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_START
     * 
    **/
    select?: TTIMERECORDS_HEAT8_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT8_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT8_START to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT8_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT8_START findFirst
   */
  export type TTIMERECORDS_HEAT8_STARTFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_START
     * 
    **/
    select?: TTIMERECORDS_HEAT8_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT8_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT8_START to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT8_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT8_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT8_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT8_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT8_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT8_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT8_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT8_STARTS.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT8_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT8_START findMany
   */
  export type TTIMERECORDS_HEAT8_STARTFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_START
     * 
    **/
    select?: TTIMERECORDS_HEAT8_STARTSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT8_STARTS to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT8_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT8_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT8_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT8_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT8_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT8_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT8_STARTS.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT8_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT8_START create
   */
  export type TTIMERECORDS_HEAT8_STARTCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_START
     * 
    **/
    select?: TTIMERECORDS_HEAT8_STARTSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT8_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT8_STARTCreateInput, TTIMERECORDS_HEAT8_STARTUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT8_START update
   */
  export type TTIMERECORDS_HEAT8_STARTUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_START
     * 
    **/
    select?: TTIMERECORDS_HEAT8_STARTSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT8_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT8_STARTUpdateInput, TTIMERECORDS_HEAT8_STARTUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT8_START to update.
     * 
    **/
    where: TTIMERECORDS_HEAT8_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT8_START updateMany
   */
  export type TTIMERECORDS_HEAT8_STARTUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT8_STARTS.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT8_STARTUpdateManyMutationInput, TTIMERECORDS_HEAT8_STARTUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT8_STARTS to update
     * 
    **/
    where?: TTIMERECORDS_HEAT8_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT8_START upsert
   */
  export type TTIMERECORDS_HEAT8_STARTUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_START
     * 
    **/
    select?: TTIMERECORDS_HEAT8_STARTSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT8_START to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT8_STARTWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT8_START found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT8_START with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT8_STARTCreateInput, TTIMERECORDS_HEAT8_STARTUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT8_START was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT8_STARTUpdateInput, TTIMERECORDS_HEAT8_STARTUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT8_START delete
   */
  export type TTIMERECORDS_HEAT8_STARTDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_START
     * 
    **/
    select?: TTIMERECORDS_HEAT8_STARTSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT8_START to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT8_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT8_START deleteMany
   */
  export type TTIMERECORDS_HEAT8_STARTDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT8_STARTS to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT8_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT8_START without action
   */
  export type TTIMERECORDS_HEAT8_STARTArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT8_START
     * 
    **/
    select?: TTIMERECORDS_HEAT8_STARTSelect | null
  }



  /**
   * Model TTIMERECORDS_HEAT9_FINISH
   */


  export type AggregateTTIMERECORDS_HEAT9_FINISH = {
    _count: TTIMERECORDS_HEAT9_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT9_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT9_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT9_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT9_FINISHMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT9_FINISHAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT9_FINISHSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT9_FINISHMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT9_FINISHMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT9_FINISHCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT9_FINISHAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT9_FINISHSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT9_FINISHMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT9_FINISHMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT9_FINISHCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT9_FINISHAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT9_FINISH to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT9_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT9_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT9_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT9_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT9_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT9_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT9_FINISHES
    **/
    _count?: true | TTIMERECORDS_HEAT9_FINISHCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT9_FINISHAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT9_FINISHSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT9_FINISHMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT9_FINISHMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT9_FINISHAggregateType<T extends TTIMERECORDS_HEAT9_FINISHAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT9_FINISH]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT9_FINISH[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT9_FINISH[P]>
  }




  export type TTIMERECORDS_HEAT9_FINISHGroupByArgs = {
    where?: TTIMERECORDS_HEAT9_FINISHWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT9_FINISHOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT9_FINISHScalarFieldEnum>
    having?: TTIMERECORDS_HEAT9_FINISHScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT9_FINISHCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT9_FINISHAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT9_FINISHSumAggregateInputType
    _min?: TTIMERECORDS_HEAT9_FINISHMinAggregateInputType
    _max?: TTIMERECORDS_HEAT9_FINISHMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT9_FINISHGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT9_FINISHCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT9_FINISHAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT9_FINISHSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT9_FINISHMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT9_FINISHMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT9_FINISHGroupByPayload<T extends TTIMERECORDS_HEAT9_FINISHGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT9_FINISHGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT9_FINISHGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT9_FINISHGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT9_FINISHGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT9_FINISHSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT9_FINISHGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT9_FINISHArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT9_FINISH
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT9_FINISHArgs | TTIMERECORDS_HEAT9_FINISHFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT9_FINISH 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT9_FINISH ? TTIMERECORDS_HEAT9_FINISH[P] : never
  } 
    : TTIMERECORDS_HEAT9_FINISH
  : TTIMERECORDS_HEAT9_FINISH


  type TTIMERECORDS_HEAT9_FINISHCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT9_FINISHFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT9_FINISHCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT9_FINISHDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT9_FINISH that matches the filter.
     * @param {TTIMERECORDS_HEAT9_FINISHFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT9_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT9_FINISH
     * const tTIMERECORDS_HEAT9_FINISH = await prisma.tTIMERECORDS_HEAT9_FINISH.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT9_FINISHFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_FINISHFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT9_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_FINISHClient<TTIMERECORDS_HEAT9_FINISH>, Prisma__TTIMERECORDS_HEAT9_FINISHClient<TTIMERECORDS_HEAT9_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_FINISHClient<TTIMERECORDS_HEAT9_FINISH | null >, Prisma__TTIMERECORDS_HEAT9_FINISHClient<TTIMERECORDS_HEAT9_FINISHGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT9_FINISH that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_FINISHFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT9_FINISH
     * @example
     * // Get one TTIMERECORDS_HEAT9_FINISH
     * const tTIMERECORDS_HEAT9_FINISH = await prisma.tTIMERECORDS_HEAT9_FINISH.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT9_FINISHFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT9_FINISHFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT9_FINISH'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_FINISHClient<TTIMERECORDS_HEAT9_FINISH>, Prisma__TTIMERECORDS_HEAT9_FINISHClient<TTIMERECORDS_HEAT9_FINISHGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_FINISHClient<TTIMERECORDS_HEAT9_FINISH | null >, Prisma__TTIMERECORDS_HEAT9_FINISHClient<TTIMERECORDS_HEAT9_FINISHGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT9_FINISHES that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_FINISHFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT9_FINISHES
     * const tTIMERECORDS_HEAT9_FINISHES = await prisma.tTIMERECORDS_HEAT9_FINISH.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT9_FINISHES
     * const tTIMERECORDS_HEAT9_FINISHES = await prisma.tTIMERECORDS_HEAT9_FINISH.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT9_FINISHWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT9_FINISH.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT9_FINISHFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT9_FINISHFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT9_FINISH>>, PrismaPromise<Array<TTIMERECORDS_HEAT9_FINISHGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT9_FINISH.
     * @param {TTIMERECORDS_HEAT9_FINISHCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT9_FINISH.
     * @example
     * // Create one TTIMERECORDS_HEAT9_FINISH
     * const TTIMERECORDS_HEAT9_FINISH = await prisma.tTIMERECORDS_HEAT9_FINISH.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT9_FINISH
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT9_FINISHCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_FINISHCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_FINISHClient<TTIMERECORDS_HEAT9_FINISH>, Prisma__TTIMERECORDS_HEAT9_FINISHClient<TTIMERECORDS_HEAT9_FINISHGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT9_FINISH.
     * @param {TTIMERECORDS_HEAT9_FINISHDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT9_FINISH.
     * @example
     * // Delete one TTIMERECORDS_HEAT9_FINISH
     * const TTIMERECORDS_HEAT9_FINISH = await prisma.tTIMERECORDS_HEAT9_FINISH.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT9_FINISH
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT9_FINISHDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_FINISHDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_FINISHClient<TTIMERECORDS_HEAT9_FINISH>, Prisma__TTIMERECORDS_HEAT9_FINISHClient<TTIMERECORDS_HEAT9_FINISHGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT9_FINISH.
     * @param {TTIMERECORDS_HEAT9_FINISHUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT9_FINISH.
     * @example
     * // Update one TTIMERECORDS_HEAT9_FINISH
     * const tTIMERECORDS_HEAT9_FINISH = await prisma.tTIMERECORDS_HEAT9_FINISH.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT9_FINISHUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_FINISHUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_FINISHClient<TTIMERECORDS_HEAT9_FINISH>, Prisma__TTIMERECORDS_HEAT9_FINISHClient<TTIMERECORDS_HEAT9_FINISHGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT9_FINISHES.
     * @param {TTIMERECORDS_HEAT9_FINISHDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT9_FINISHES to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT9_FINISHES
     * const { count } = await prisma.tTIMERECORDS_HEAT9_FINISH.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT9_FINISHDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT9_FINISHDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT9_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_FINISHUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT9_FINISHES
     * const tTIMERECORDS_HEAT9_FINISH = await prisma.tTIMERECORDS_HEAT9_FINISH.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT9_FINISHUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_FINISHUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT9_FINISH.
     * @param {TTIMERECORDS_HEAT9_FINISHUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT9_FINISH.
     * @example
     * // Update or create a TTIMERECORDS_HEAT9_FINISH
     * const tTIMERECORDS_HEAT9_FINISH = await prisma.tTIMERECORDS_HEAT9_FINISH.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT9_FINISH
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT9_FINISH we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT9_FINISHUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_FINISHUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_FINISHClient<TTIMERECORDS_HEAT9_FINISH>, Prisma__TTIMERECORDS_HEAT9_FINISHClient<TTIMERECORDS_HEAT9_FINISHGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT9_FINISHES.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_FINISHCountArgs} args - Arguments to filter TTIMERECORDS_HEAT9_FINISHES to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT9_FINISHES
     * const count = await prisma.tTIMERECORDS_HEAT9_FINISH.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT9_FINISHES we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT9_FINISHCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT9_FINISHCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT9_FINISHCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT9_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_FINISHAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT9_FINISHAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT9_FINISHAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT9_FINISHAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT9_FINISH.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_FINISHGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT9_FINISHGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT9_FINISHGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT9_FINISHGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT9_FINISHGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT9_FINISHGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT9_FINISH.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT9_FINISHClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT9_FINISH findUnique
   */
  export type TTIMERECORDS_HEAT9_FINISHFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT9_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT9_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT9_FINISH to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT9_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT9_FINISH findFirst
   */
  export type TTIMERECORDS_HEAT9_FINISHFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT9_FINISHSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT9_FINISH can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT9_FINISH to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT9_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT9_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT9_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT9_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT9_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT9_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT9_FINISHES.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT9_FINISHES.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT9_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT9_FINISH findMany
   */
  export type TTIMERECORDS_HEAT9_FINISHFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT9_FINISHSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT9_FINISHES to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT9_FINISHWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT9_FINISHES to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT9_FINISHOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT9_FINISHES.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT9_FINISHWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT9_FINISHES from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT9_FINISHES.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT9_FINISHScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT9_FINISH create
   */
  export type TTIMERECORDS_HEAT9_FINISHCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT9_FINISHSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT9_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT9_FINISHCreateInput, TTIMERECORDS_HEAT9_FINISHUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT9_FINISH update
   */
  export type TTIMERECORDS_HEAT9_FINISHUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT9_FINISHSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT9_FINISH.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT9_FINISHUpdateInput, TTIMERECORDS_HEAT9_FINISHUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT9_FINISH to update.
     * 
    **/
    where: TTIMERECORDS_HEAT9_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT9_FINISH updateMany
   */
  export type TTIMERECORDS_HEAT9_FINISHUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT9_FINISHES.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT9_FINISHUpdateManyMutationInput, TTIMERECORDS_HEAT9_FINISHUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT9_FINISHES to update
     * 
    **/
    where?: TTIMERECORDS_HEAT9_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT9_FINISH upsert
   */
  export type TTIMERECORDS_HEAT9_FINISHUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT9_FINISHSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT9_FINISH to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT9_FINISHWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT9_FINISH found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT9_FINISH with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT9_FINISHCreateInput, TTIMERECORDS_HEAT9_FINISHUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT9_FINISH was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT9_FINISHUpdateInput, TTIMERECORDS_HEAT9_FINISHUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT9_FINISH delete
   */
  export type TTIMERECORDS_HEAT9_FINISHDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT9_FINISHSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT9_FINISH to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT9_FINISHWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT9_FINISH deleteMany
   */
  export type TTIMERECORDS_HEAT9_FINISHDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT9_FINISHES to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT9_FINISHWhereInput
  }


  /**
   * TTIMERECORDS_HEAT9_FINISH without action
   */
  export type TTIMERECORDS_HEAT9_FINISHArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_FINISH
     * 
    **/
    select?: TTIMERECORDS_HEAT9_FINISHSelect | null
  }



  /**
   * Model TTIMERECORDS_HEAT9_INTER1
   */


  export type AggregateTTIMERECORDS_HEAT9_INTER1 = {
    _count: TTIMERECORDS_HEAT9_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT9_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT9_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT9_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT9_INTER1MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT9_INTER1AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT9_INTER1SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT9_INTER1MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT9_INTER1MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT9_INTER1CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT9_INTER1AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT9_INTER1SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT9_INTER1MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT9_INTER1MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT9_INTER1CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT9_INTER1AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT9_INTER1 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT9_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT9_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT9_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT9_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT9_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT9_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT9_INTER1s
    **/
    _count?: true | TTIMERECORDS_HEAT9_INTER1CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT9_INTER1AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT9_INTER1SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT9_INTER1MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT9_INTER1MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT9_INTER1AggregateType<T extends TTIMERECORDS_HEAT9_INTER1AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT9_INTER1]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT9_INTER1[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT9_INTER1[P]>
  }




  export type TTIMERECORDS_HEAT9_INTER1GroupByArgs = {
    where?: TTIMERECORDS_HEAT9_INTER1WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT9_INTER1OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT9_INTER1ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT9_INTER1ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT9_INTER1CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT9_INTER1AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT9_INTER1SumAggregateInputType
    _min?: TTIMERECORDS_HEAT9_INTER1MinAggregateInputType
    _max?: TTIMERECORDS_HEAT9_INTER1MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT9_INTER1GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT9_INTER1CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT9_INTER1AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT9_INTER1SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT9_INTER1MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT9_INTER1MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT9_INTER1GroupByPayload<T extends TTIMERECORDS_HEAT9_INTER1GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT9_INTER1GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT9_INTER1GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT9_INTER1GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT9_INTER1GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT9_INTER1Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT9_INTER1GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT9_INTER1Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT9_INTER1
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT9_INTER1Args | TTIMERECORDS_HEAT9_INTER1FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT9_INTER1 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT9_INTER1 ? TTIMERECORDS_HEAT9_INTER1[P] : never
  } 
    : TTIMERECORDS_HEAT9_INTER1
  : TTIMERECORDS_HEAT9_INTER1


  type TTIMERECORDS_HEAT9_INTER1CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT9_INTER1FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT9_INTER1CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT9_INTER1Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT9_INTER1 that matches the filter.
     * @param {TTIMERECORDS_HEAT9_INTER1FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT9_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT9_INTER1
     * const tTIMERECORDS_HEAT9_INTER1 = await prisma.tTIMERECORDS_HEAT9_INTER1.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT9_INTER1FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_INTER1FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT9_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_INTER1Client<TTIMERECORDS_HEAT9_INTER1>, Prisma__TTIMERECORDS_HEAT9_INTER1Client<TTIMERECORDS_HEAT9_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_INTER1Client<TTIMERECORDS_HEAT9_INTER1 | null >, Prisma__TTIMERECORDS_HEAT9_INTER1Client<TTIMERECORDS_HEAT9_INTER1GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT9_INTER1 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_INTER1FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT9_INTER1
     * @example
     * // Get one TTIMERECORDS_HEAT9_INTER1
     * const tTIMERECORDS_HEAT9_INTER1 = await prisma.tTIMERECORDS_HEAT9_INTER1.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT9_INTER1FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT9_INTER1FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT9_INTER1'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_INTER1Client<TTIMERECORDS_HEAT9_INTER1>, Prisma__TTIMERECORDS_HEAT9_INTER1Client<TTIMERECORDS_HEAT9_INTER1GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_INTER1Client<TTIMERECORDS_HEAT9_INTER1 | null >, Prisma__TTIMERECORDS_HEAT9_INTER1Client<TTIMERECORDS_HEAT9_INTER1GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT9_INTER1s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_INTER1FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT9_INTER1s
     * const tTIMERECORDS_HEAT9_INTER1s = await prisma.tTIMERECORDS_HEAT9_INTER1.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT9_INTER1s
     * const tTIMERECORDS_HEAT9_INTER1s = await prisma.tTIMERECORDS_HEAT9_INTER1.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT9_INTER1WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT9_INTER1.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT9_INTER1FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT9_INTER1FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT9_INTER1>>, PrismaPromise<Array<TTIMERECORDS_HEAT9_INTER1GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT9_INTER1.
     * @param {TTIMERECORDS_HEAT9_INTER1CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT9_INTER1.
     * @example
     * // Create one TTIMERECORDS_HEAT9_INTER1
     * const TTIMERECORDS_HEAT9_INTER1 = await prisma.tTIMERECORDS_HEAT9_INTER1.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT9_INTER1
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT9_INTER1CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_INTER1CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_INTER1Client<TTIMERECORDS_HEAT9_INTER1>, Prisma__TTIMERECORDS_HEAT9_INTER1Client<TTIMERECORDS_HEAT9_INTER1GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT9_INTER1.
     * @param {TTIMERECORDS_HEAT9_INTER1DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT9_INTER1.
     * @example
     * // Delete one TTIMERECORDS_HEAT9_INTER1
     * const TTIMERECORDS_HEAT9_INTER1 = await prisma.tTIMERECORDS_HEAT9_INTER1.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT9_INTER1
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT9_INTER1DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_INTER1DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_INTER1Client<TTIMERECORDS_HEAT9_INTER1>, Prisma__TTIMERECORDS_HEAT9_INTER1Client<TTIMERECORDS_HEAT9_INTER1GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT9_INTER1.
     * @param {TTIMERECORDS_HEAT9_INTER1UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT9_INTER1.
     * @example
     * // Update one TTIMERECORDS_HEAT9_INTER1
     * const tTIMERECORDS_HEAT9_INTER1 = await prisma.tTIMERECORDS_HEAT9_INTER1.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT9_INTER1UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_INTER1UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_INTER1Client<TTIMERECORDS_HEAT9_INTER1>, Prisma__TTIMERECORDS_HEAT9_INTER1Client<TTIMERECORDS_HEAT9_INTER1GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT9_INTER1s.
     * @param {TTIMERECORDS_HEAT9_INTER1DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT9_INTER1s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT9_INTER1s
     * const { count } = await prisma.tTIMERECORDS_HEAT9_INTER1.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT9_INTER1DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT9_INTER1DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT9_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_INTER1UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT9_INTER1s
     * const tTIMERECORDS_HEAT9_INTER1 = await prisma.tTIMERECORDS_HEAT9_INTER1.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT9_INTER1UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_INTER1UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT9_INTER1.
     * @param {TTIMERECORDS_HEAT9_INTER1UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT9_INTER1.
     * @example
     * // Update or create a TTIMERECORDS_HEAT9_INTER1
     * const tTIMERECORDS_HEAT9_INTER1 = await prisma.tTIMERECORDS_HEAT9_INTER1.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT9_INTER1
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT9_INTER1 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT9_INTER1UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_INTER1UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_INTER1Client<TTIMERECORDS_HEAT9_INTER1>, Prisma__TTIMERECORDS_HEAT9_INTER1Client<TTIMERECORDS_HEAT9_INTER1GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT9_INTER1s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_INTER1CountArgs} args - Arguments to filter TTIMERECORDS_HEAT9_INTER1s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT9_INTER1s
     * const count = await prisma.tTIMERECORDS_HEAT9_INTER1.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT9_INTER1s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT9_INTER1CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT9_INTER1CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT9_INTER1CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT9_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_INTER1AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT9_INTER1AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT9_INTER1AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT9_INTER1AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT9_INTER1.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_INTER1GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT9_INTER1GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT9_INTER1GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT9_INTER1GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT9_INTER1GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT9_INTER1GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT9_INTER1.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT9_INTER1Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT9_INTER1 findUnique
   */
  export type TTIMERECORDS_HEAT9_INTER1FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT9_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT9_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT9_INTER1 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT9_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT9_INTER1 findFirst
   */
  export type TTIMERECORDS_HEAT9_INTER1FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT9_INTER1Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT9_INTER1 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT9_INTER1 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT9_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT9_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT9_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT9_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT9_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT9_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT9_INTER1s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT9_INTER1s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT9_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT9_INTER1 findMany
   */
  export type TTIMERECORDS_HEAT9_INTER1FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT9_INTER1Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT9_INTER1s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT9_INTER1WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT9_INTER1s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT9_INTER1OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT9_INTER1s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT9_INTER1WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT9_INTER1s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT9_INTER1s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT9_INTER1ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT9_INTER1 create
   */
  export type TTIMERECORDS_HEAT9_INTER1CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT9_INTER1Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT9_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT9_INTER1CreateInput, TTIMERECORDS_HEAT9_INTER1UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT9_INTER1 update
   */
  export type TTIMERECORDS_HEAT9_INTER1UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT9_INTER1Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT9_INTER1.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT9_INTER1UpdateInput, TTIMERECORDS_HEAT9_INTER1UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT9_INTER1 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT9_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT9_INTER1 updateMany
   */
  export type TTIMERECORDS_HEAT9_INTER1UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT9_INTER1s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT9_INTER1UpdateManyMutationInput, TTIMERECORDS_HEAT9_INTER1UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT9_INTER1s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT9_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT9_INTER1 upsert
   */
  export type TTIMERECORDS_HEAT9_INTER1UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT9_INTER1Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT9_INTER1 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT9_INTER1WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT9_INTER1 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT9_INTER1 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT9_INTER1CreateInput, TTIMERECORDS_HEAT9_INTER1UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT9_INTER1 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT9_INTER1UpdateInput, TTIMERECORDS_HEAT9_INTER1UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT9_INTER1 delete
   */
  export type TTIMERECORDS_HEAT9_INTER1DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT9_INTER1Select | null
    /**
     * Filter which TTIMERECORDS_HEAT9_INTER1 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT9_INTER1WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT9_INTER1 deleteMany
   */
  export type TTIMERECORDS_HEAT9_INTER1DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT9_INTER1s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT9_INTER1WhereInput
  }


  /**
   * TTIMERECORDS_HEAT9_INTER1 without action
   */
  export type TTIMERECORDS_HEAT9_INTER1Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_INTER1
     * 
    **/
    select?: TTIMERECORDS_HEAT9_INTER1Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT9_INTER2
   */


  export type AggregateTTIMERECORDS_HEAT9_INTER2 = {
    _count: TTIMERECORDS_HEAT9_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT9_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT9_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT9_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT9_INTER2MaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT9_INTER2AvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT9_INTER2SumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT9_INTER2MinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT9_INTER2MaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT9_INTER2CountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT9_INTER2AvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT9_INTER2SumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT9_INTER2MinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT9_INTER2MaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT9_INTER2CountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT9_INTER2AggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT9_INTER2 to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT9_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT9_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT9_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT9_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT9_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT9_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT9_INTER2s
    **/
    _count?: true | TTIMERECORDS_HEAT9_INTER2CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT9_INTER2AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT9_INTER2SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT9_INTER2MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT9_INTER2MaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT9_INTER2AggregateType<T extends TTIMERECORDS_HEAT9_INTER2AggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT9_INTER2]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT9_INTER2[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT9_INTER2[P]>
  }




  export type TTIMERECORDS_HEAT9_INTER2GroupByArgs = {
    where?: TTIMERECORDS_HEAT9_INTER2WhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT9_INTER2OrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT9_INTER2ScalarFieldEnum>
    having?: TTIMERECORDS_HEAT9_INTER2ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT9_INTER2CountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT9_INTER2AvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT9_INTER2SumAggregateInputType
    _min?: TTIMERECORDS_HEAT9_INTER2MinAggregateInputType
    _max?: TTIMERECORDS_HEAT9_INTER2MaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT9_INTER2GroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT9_INTER2CountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT9_INTER2AvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT9_INTER2SumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT9_INTER2MinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT9_INTER2MaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT9_INTER2GroupByPayload<T extends TTIMERECORDS_HEAT9_INTER2GroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT9_INTER2GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT9_INTER2GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT9_INTER2GroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT9_INTER2GroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT9_INTER2Select = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT9_INTER2GetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT9_INTER2Args,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT9_INTER2
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT9_INTER2Args | TTIMERECORDS_HEAT9_INTER2FindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT9_INTER2 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT9_INTER2 ? TTIMERECORDS_HEAT9_INTER2[P] : never
  } 
    : TTIMERECORDS_HEAT9_INTER2
  : TTIMERECORDS_HEAT9_INTER2


  type TTIMERECORDS_HEAT9_INTER2CountArgs = Merge<
    Omit<TTIMERECORDS_HEAT9_INTER2FindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT9_INTER2CountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT9_INTER2Delegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT9_INTER2 that matches the filter.
     * @param {TTIMERECORDS_HEAT9_INTER2FindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT9_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT9_INTER2
     * const tTIMERECORDS_HEAT9_INTER2 = await prisma.tTIMERECORDS_HEAT9_INTER2.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT9_INTER2FindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_INTER2FindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT9_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_INTER2Client<TTIMERECORDS_HEAT9_INTER2>, Prisma__TTIMERECORDS_HEAT9_INTER2Client<TTIMERECORDS_HEAT9_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_INTER2Client<TTIMERECORDS_HEAT9_INTER2 | null >, Prisma__TTIMERECORDS_HEAT9_INTER2Client<TTIMERECORDS_HEAT9_INTER2GetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT9_INTER2 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_INTER2FindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT9_INTER2
     * @example
     * // Get one TTIMERECORDS_HEAT9_INTER2
     * const tTIMERECORDS_HEAT9_INTER2 = await prisma.tTIMERECORDS_HEAT9_INTER2.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT9_INTER2FindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT9_INTER2FindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT9_INTER2'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_INTER2Client<TTIMERECORDS_HEAT9_INTER2>, Prisma__TTIMERECORDS_HEAT9_INTER2Client<TTIMERECORDS_HEAT9_INTER2GetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_INTER2Client<TTIMERECORDS_HEAT9_INTER2 | null >, Prisma__TTIMERECORDS_HEAT9_INTER2Client<TTIMERECORDS_HEAT9_INTER2GetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT9_INTER2s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_INTER2FindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT9_INTER2s
     * const tTIMERECORDS_HEAT9_INTER2s = await prisma.tTIMERECORDS_HEAT9_INTER2.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT9_INTER2s
     * const tTIMERECORDS_HEAT9_INTER2s = await prisma.tTIMERECORDS_HEAT9_INTER2.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT9_INTER2WithC_LINEOnly = await prisma.tTIMERECORDS_HEAT9_INTER2.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT9_INTER2FindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT9_INTER2FindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT9_INTER2>>, PrismaPromise<Array<TTIMERECORDS_HEAT9_INTER2GetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT9_INTER2.
     * @param {TTIMERECORDS_HEAT9_INTER2CreateArgs} args - Arguments to create a TTIMERECORDS_HEAT9_INTER2.
     * @example
     * // Create one TTIMERECORDS_HEAT9_INTER2
     * const TTIMERECORDS_HEAT9_INTER2 = await prisma.tTIMERECORDS_HEAT9_INTER2.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT9_INTER2
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT9_INTER2CreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_INTER2CreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_INTER2Client<TTIMERECORDS_HEAT9_INTER2>, Prisma__TTIMERECORDS_HEAT9_INTER2Client<TTIMERECORDS_HEAT9_INTER2GetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT9_INTER2.
     * @param {TTIMERECORDS_HEAT9_INTER2DeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT9_INTER2.
     * @example
     * // Delete one TTIMERECORDS_HEAT9_INTER2
     * const TTIMERECORDS_HEAT9_INTER2 = await prisma.tTIMERECORDS_HEAT9_INTER2.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT9_INTER2
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT9_INTER2DeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_INTER2DeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_INTER2Client<TTIMERECORDS_HEAT9_INTER2>, Prisma__TTIMERECORDS_HEAT9_INTER2Client<TTIMERECORDS_HEAT9_INTER2GetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT9_INTER2.
     * @param {TTIMERECORDS_HEAT9_INTER2UpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT9_INTER2.
     * @example
     * // Update one TTIMERECORDS_HEAT9_INTER2
     * const tTIMERECORDS_HEAT9_INTER2 = await prisma.tTIMERECORDS_HEAT9_INTER2.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT9_INTER2UpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_INTER2UpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_INTER2Client<TTIMERECORDS_HEAT9_INTER2>, Prisma__TTIMERECORDS_HEAT9_INTER2Client<TTIMERECORDS_HEAT9_INTER2GetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT9_INTER2s.
     * @param {TTIMERECORDS_HEAT9_INTER2DeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT9_INTER2s to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT9_INTER2s
     * const { count } = await prisma.tTIMERECORDS_HEAT9_INTER2.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT9_INTER2DeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT9_INTER2DeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT9_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_INTER2UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT9_INTER2s
     * const tTIMERECORDS_HEAT9_INTER2 = await prisma.tTIMERECORDS_HEAT9_INTER2.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT9_INTER2UpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_INTER2UpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT9_INTER2.
     * @param {TTIMERECORDS_HEAT9_INTER2UpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT9_INTER2.
     * @example
     * // Update or create a TTIMERECORDS_HEAT9_INTER2
     * const tTIMERECORDS_HEAT9_INTER2 = await prisma.tTIMERECORDS_HEAT9_INTER2.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT9_INTER2
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT9_INTER2 we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT9_INTER2UpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_INTER2UpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_INTER2Client<TTIMERECORDS_HEAT9_INTER2>, Prisma__TTIMERECORDS_HEAT9_INTER2Client<TTIMERECORDS_HEAT9_INTER2GetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT9_INTER2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_INTER2CountArgs} args - Arguments to filter TTIMERECORDS_HEAT9_INTER2s to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT9_INTER2s
     * const count = await prisma.tTIMERECORDS_HEAT9_INTER2.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT9_INTER2s we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT9_INTER2CountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT9_INTER2CountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT9_INTER2CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT9_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_INTER2AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT9_INTER2AggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT9_INTER2AggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT9_INTER2AggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT9_INTER2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_INTER2GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT9_INTER2GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT9_INTER2GroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT9_INTER2GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT9_INTER2GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT9_INTER2GroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT9_INTER2.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT9_INTER2Client<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT9_INTER2 findUnique
   */
  export type TTIMERECORDS_HEAT9_INTER2FindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT9_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT9_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT9_INTER2 to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT9_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT9_INTER2 findFirst
   */
  export type TTIMERECORDS_HEAT9_INTER2FindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT9_INTER2Select | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT9_INTER2 can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT9_INTER2 to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT9_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT9_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT9_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT9_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT9_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT9_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT9_INTER2s.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT9_INTER2s.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT9_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT9_INTER2 findMany
   */
  export type TTIMERECORDS_HEAT9_INTER2FindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT9_INTER2Select | null
    /**
     * Filter, which TTIMERECORDS_HEAT9_INTER2s to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT9_INTER2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT9_INTER2s to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT9_INTER2OrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT9_INTER2s.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT9_INTER2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT9_INTER2s from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT9_INTER2s.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT9_INTER2ScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT9_INTER2 create
   */
  export type TTIMERECORDS_HEAT9_INTER2CreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT9_INTER2Select | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT9_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT9_INTER2CreateInput, TTIMERECORDS_HEAT9_INTER2UncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT9_INTER2 update
   */
  export type TTIMERECORDS_HEAT9_INTER2UpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT9_INTER2Select | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT9_INTER2.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT9_INTER2UpdateInput, TTIMERECORDS_HEAT9_INTER2UncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT9_INTER2 to update.
     * 
    **/
    where: TTIMERECORDS_HEAT9_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT9_INTER2 updateMany
   */
  export type TTIMERECORDS_HEAT9_INTER2UpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT9_INTER2s.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT9_INTER2UpdateManyMutationInput, TTIMERECORDS_HEAT9_INTER2UncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT9_INTER2s to update
     * 
    **/
    where?: TTIMERECORDS_HEAT9_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT9_INTER2 upsert
   */
  export type TTIMERECORDS_HEAT9_INTER2UpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT9_INTER2Select | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT9_INTER2 to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT9_INTER2WhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT9_INTER2 found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT9_INTER2 with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT9_INTER2CreateInput, TTIMERECORDS_HEAT9_INTER2UncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT9_INTER2 was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT9_INTER2UpdateInput, TTIMERECORDS_HEAT9_INTER2UncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT9_INTER2 delete
   */
  export type TTIMERECORDS_HEAT9_INTER2DeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT9_INTER2Select | null
    /**
     * Filter which TTIMERECORDS_HEAT9_INTER2 to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT9_INTER2WhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT9_INTER2 deleteMany
   */
  export type TTIMERECORDS_HEAT9_INTER2DeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT9_INTER2s to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT9_INTER2WhereInput
  }


  /**
   * TTIMERECORDS_HEAT9_INTER2 without action
   */
  export type TTIMERECORDS_HEAT9_INTER2Args = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_INTER2
     * 
    **/
    select?: TTIMERECORDS_HEAT9_INTER2Select | null
  }



  /**
   * Model TTIMERECORDS_HEAT9_START
   */


  export type AggregateTTIMERECORDS_HEAT9_START = {
    _count: TTIMERECORDS_HEAT9_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT9_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT9_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT9_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT9_STARTMaxAggregateOutputType | null
  }

  export type TTIMERECORDS_HEAT9_STARTAvgAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT9_STARTSumAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT9_STARTMinAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT9_STARTMaxAggregateOutputType = {
    C_LINE: number | null
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
  }

  export type TTIMERECORDS_HEAT9_STARTCountAggregateOutputType = {
    C_LINE: number
    C_NUM: number
    C_STATUS: number
    C_HOUR1: number
    C_HOUR2: number
    C_SPEED: number
    C_LAP: number
    C_TRANSPONDER_NUM: number
    C_TRANSPONDER_INFOS: number
    C_INFO1: number
    C_INFO2: number
    _all: number
  }


  export type TTIMERECORDS_HEAT9_STARTAvgAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT9_STARTSumAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT9_STARTMinAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT9_STARTMaxAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
  }

  export type TTIMERECORDS_HEAT9_STARTCountAggregateInputType = {
    C_LINE?: true
    C_NUM?: true
    C_STATUS?: true
    C_HOUR1?: true
    C_HOUR2?: true
    C_SPEED?: true
    C_LAP?: true
    C_TRANSPONDER_NUM?: true
    C_TRANSPONDER_INFOS?: true
    C_INFO1?: true
    C_INFO2?: true
    _all?: true
  }

  export type TTIMERECORDS_HEAT9_STARTAggregateArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT9_START to aggregate.
     * 
    **/
    where?: TTIMERECORDS_HEAT9_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT9_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT9_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TTIMERECORDS_HEAT9_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT9_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT9_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TTIMERECORDS_HEAT9_STARTS
    **/
    _count?: true | TTIMERECORDS_HEAT9_STARTCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TTIMERECORDS_HEAT9_STARTAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TTIMERECORDS_HEAT9_STARTSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TTIMERECORDS_HEAT9_STARTMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TTIMERECORDS_HEAT9_STARTMaxAggregateInputType
  }

  export type GetTTIMERECORDS_HEAT9_STARTAggregateType<T extends TTIMERECORDS_HEAT9_STARTAggregateArgs> = {
        [P in keyof T & keyof AggregateTTIMERECORDS_HEAT9_START]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT9_START[P]>
      : GetScalarType<T[P], AggregateTTIMERECORDS_HEAT9_START[P]>
  }




  export type TTIMERECORDS_HEAT9_STARTGroupByArgs = {
    where?: TTIMERECORDS_HEAT9_STARTWhereInput
    orderBy?: Enumerable<TTIMERECORDS_HEAT9_STARTOrderByWithAggregationInput>
    by: Array<TTIMERECORDS_HEAT9_STARTScalarFieldEnum>
    having?: TTIMERECORDS_HEAT9_STARTScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TTIMERECORDS_HEAT9_STARTCountAggregateInputType | true
    _avg?: TTIMERECORDS_HEAT9_STARTAvgAggregateInputType
    _sum?: TTIMERECORDS_HEAT9_STARTSumAggregateInputType
    _min?: TTIMERECORDS_HEAT9_STARTMinAggregateInputType
    _max?: TTIMERECORDS_HEAT9_STARTMaxAggregateInputType
  }


  export type TTIMERECORDS_HEAT9_STARTGroupByOutputType = {
    C_LINE: number
    C_NUM: number | null
    C_STATUS: number | null
    C_HOUR1: string | null
    C_HOUR2: string | null
    C_SPEED: number | null
    C_LAP: number | null
    C_TRANSPONDER_NUM: string | null
    C_TRANSPONDER_INFOS: number | null
    C_INFO1: number | null
    C_INFO2: number | null
    _count: TTIMERECORDS_HEAT9_STARTCountAggregateOutputType | null
    _avg: TTIMERECORDS_HEAT9_STARTAvgAggregateOutputType | null
    _sum: TTIMERECORDS_HEAT9_STARTSumAggregateOutputType | null
    _min: TTIMERECORDS_HEAT9_STARTMinAggregateOutputType | null
    _max: TTIMERECORDS_HEAT9_STARTMaxAggregateOutputType | null
  }

  type GetTTIMERECORDS_HEAT9_STARTGroupByPayload<T extends TTIMERECORDS_HEAT9_STARTGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TTIMERECORDS_HEAT9_STARTGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TTIMERECORDS_HEAT9_STARTGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TTIMERECORDS_HEAT9_STARTGroupByOutputType[P]>
            : GetScalarType<T[P], TTIMERECORDS_HEAT9_STARTGroupByOutputType[P]>
        }
      >
    >


  export type TTIMERECORDS_HEAT9_STARTSelect = {
    C_LINE?: boolean
    C_NUM?: boolean
    C_STATUS?: boolean
    C_HOUR1?: boolean
    C_HOUR2?: boolean
    C_SPEED?: boolean
    C_LAP?: boolean
    C_TRANSPONDER_NUM?: boolean
    C_TRANSPONDER_INFOS?: boolean
    C_INFO1?: boolean
    C_INFO2?: boolean
  }

  export type TTIMERECORDS_HEAT9_STARTGetPayload<
    S extends boolean | null | undefined | TTIMERECORDS_HEAT9_STARTArgs,
    U = keyof S
      > = S extends true
        ? TTIMERECORDS_HEAT9_START
    : S extends undefined
    ? never
    : S extends TTIMERECORDS_HEAT9_STARTArgs | TTIMERECORDS_HEAT9_STARTFindManyArgs
    ?'include' extends U
    ? TTIMERECORDS_HEAT9_START 
    : 'select' extends U
    ? {
    [P in TrueKeys<S['select']>]:
    P extends keyof TTIMERECORDS_HEAT9_START ? TTIMERECORDS_HEAT9_START[P] : never
  } 
    : TTIMERECORDS_HEAT9_START
  : TTIMERECORDS_HEAT9_START


  type TTIMERECORDS_HEAT9_STARTCountArgs = Merge<
    Omit<TTIMERECORDS_HEAT9_STARTFindManyArgs, 'select' | 'include'> & {
      select?: TTIMERECORDS_HEAT9_STARTCountAggregateInputType | true
    }
  >

  export interface TTIMERECORDS_HEAT9_STARTDelegate<GlobalRejectSettings> {
    /**
     * Find zero or one TTIMERECORDS_HEAT9_START that matches the filter.
     * @param {TTIMERECORDS_HEAT9_STARTFindUniqueArgs} args - Arguments to find a TTIMERECORDS_HEAT9_START
     * @example
     * // Get one TTIMERECORDS_HEAT9_START
     * const tTIMERECORDS_HEAT9_START = await prisma.tTIMERECORDS_HEAT9_START.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TTIMERECORDS_HEAT9_STARTFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_STARTFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TTIMERECORDS_HEAT9_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_STARTClient<TTIMERECORDS_HEAT9_START>, Prisma__TTIMERECORDS_HEAT9_STARTClient<TTIMERECORDS_HEAT9_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_STARTClient<TTIMERECORDS_HEAT9_START | null >, Prisma__TTIMERECORDS_HEAT9_STARTClient<TTIMERECORDS_HEAT9_STARTGetPayload<T> | null >>

    /**
     * Find the first TTIMERECORDS_HEAT9_START that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_STARTFindFirstArgs} args - Arguments to find a TTIMERECORDS_HEAT9_START
     * @example
     * // Get one TTIMERECORDS_HEAT9_START
     * const tTIMERECORDS_HEAT9_START = await prisma.tTIMERECORDS_HEAT9_START.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TTIMERECORDS_HEAT9_STARTFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT9_STARTFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TTIMERECORDS_HEAT9_START'> extends True ? CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_STARTClient<TTIMERECORDS_HEAT9_START>, Prisma__TTIMERECORDS_HEAT9_STARTClient<TTIMERECORDS_HEAT9_STARTGetPayload<T>>> : CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_STARTClient<TTIMERECORDS_HEAT9_START | null >, Prisma__TTIMERECORDS_HEAT9_STARTClient<TTIMERECORDS_HEAT9_STARTGetPayload<T> | null >>

    /**
     * Find zero or more TTIMERECORDS_HEAT9_STARTS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_STARTFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TTIMERECORDS_HEAT9_STARTS
     * const tTIMERECORDS_HEAT9_STARTS = await prisma.tTIMERECORDS_HEAT9_START.findMany()
     * 
     * // Get first 10 TTIMERECORDS_HEAT9_STARTS
     * const tTIMERECORDS_HEAT9_STARTS = await prisma.tTIMERECORDS_HEAT9_START.findMany({ take: 10 })
     * 
     * // Only select the `C_LINE`
     * const tTIMERECORDS_HEAT9_STARTWithC_LINEOnly = await prisma.tTIMERECORDS_HEAT9_START.findMany({ select: { C_LINE: true } })
     * 
    **/
    findMany<T extends TTIMERECORDS_HEAT9_STARTFindManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT9_STARTFindManyArgs>
    ): CheckSelect<T, PrismaPromise<Array<TTIMERECORDS_HEAT9_START>>, PrismaPromise<Array<TTIMERECORDS_HEAT9_STARTGetPayload<T>>>>

    /**
     * Create a TTIMERECORDS_HEAT9_START.
     * @param {TTIMERECORDS_HEAT9_STARTCreateArgs} args - Arguments to create a TTIMERECORDS_HEAT9_START.
     * @example
     * // Create one TTIMERECORDS_HEAT9_START
     * const TTIMERECORDS_HEAT9_START = await prisma.tTIMERECORDS_HEAT9_START.create({
     *   data: {
     *     // ... data to create a TTIMERECORDS_HEAT9_START
     *   }
     * })
     * 
    **/
    create<T extends TTIMERECORDS_HEAT9_STARTCreateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_STARTCreateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_STARTClient<TTIMERECORDS_HEAT9_START>, Prisma__TTIMERECORDS_HEAT9_STARTClient<TTIMERECORDS_HEAT9_STARTGetPayload<T>>>

    /**
     * Delete a TTIMERECORDS_HEAT9_START.
     * @param {TTIMERECORDS_HEAT9_STARTDeleteArgs} args - Arguments to delete one TTIMERECORDS_HEAT9_START.
     * @example
     * // Delete one TTIMERECORDS_HEAT9_START
     * const TTIMERECORDS_HEAT9_START = await prisma.tTIMERECORDS_HEAT9_START.delete({
     *   where: {
     *     // ... filter to delete one TTIMERECORDS_HEAT9_START
     *   }
     * })
     * 
    **/
    delete<T extends TTIMERECORDS_HEAT9_STARTDeleteArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_STARTDeleteArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_STARTClient<TTIMERECORDS_HEAT9_START>, Prisma__TTIMERECORDS_HEAT9_STARTClient<TTIMERECORDS_HEAT9_STARTGetPayload<T>>>

    /**
     * Update one TTIMERECORDS_HEAT9_START.
     * @param {TTIMERECORDS_HEAT9_STARTUpdateArgs} args - Arguments to update one TTIMERECORDS_HEAT9_START.
     * @example
     * // Update one TTIMERECORDS_HEAT9_START
     * const tTIMERECORDS_HEAT9_START = await prisma.tTIMERECORDS_HEAT9_START.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TTIMERECORDS_HEAT9_STARTUpdateArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_STARTUpdateArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_STARTClient<TTIMERECORDS_HEAT9_START>, Prisma__TTIMERECORDS_HEAT9_STARTClient<TTIMERECORDS_HEAT9_STARTGetPayload<T>>>

    /**
     * Delete zero or more TTIMERECORDS_HEAT9_STARTS.
     * @param {TTIMERECORDS_HEAT9_STARTDeleteManyArgs} args - Arguments to filter TTIMERECORDS_HEAT9_STARTS to delete.
     * @example
     * // Delete a few TTIMERECORDS_HEAT9_STARTS
     * const { count } = await prisma.tTIMERECORDS_HEAT9_START.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TTIMERECORDS_HEAT9_STARTDeleteManyArgs>(
      args?: SelectSubset<T, TTIMERECORDS_HEAT9_STARTDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TTIMERECORDS_HEAT9_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_STARTUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TTIMERECORDS_HEAT9_STARTS
     * const tTIMERECORDS_HEAT9_START = await prisma.tTIMERECORDS_HEAT9_START.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TTIMERECORDS_HEAT9_STARTUpdateManyArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_STARTUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TTIMERECORDS_HEAT9_START.
     * @param {TTIMERECORDS_HEAT9_STARTUpsertArgs} args - Arguments to update or create a TTIMERECORDS_HEAT9_START.
     * @example
     * // Update or create a TTIMERECORDS_HEAT9_START
     * const tTIMERECORDS_HEAT9_START = await prisma.tTIMERECORDS_HEAT9_START.upsert({
     *   create: {
     *     // ... data to create a TTIMERECORDS_HEAT9_START
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT9_START we want to update
     *   }
     * })
    **/
    upsert<T extends TTIMERECORDS_HEAT9_STARTUpsertArgs>(
      args: SelectSubset<T, TTIMERECORDS_HEAT9_STARTUpsertArgs>
    ): CheckSelect<T, Prisma__TTIMERECORDS_HEAT9_STARTClient<TTIMERECORDS_HEAT9_START>, Prisma__TTIMERECORDS_HEAT9_STARTClient<TTIMERECORDS_HEAT9_STARTGetPayload<T>>>

    /**
     * Count the number of TTIMERECORDS_HEAT9_STARTS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_STARTCountArgs} args - Arguments to filter TTIMERECORDS_HEAT9_STARTS to count.
     * @example
     * // Count the number of TTIMERECORDS_HEAT9_STARTS
     * const count = await prisma.tTIMERECORDS_HEAT9_START.count({
     *   where: {
     *     // ... the filter for the TTIMERECORDS_HEAT9_STARTS we want to count
     *   }
     * })
    **/
    count<T extends TTIMERECORDS_HEAT9_STARTCountArgs>(
      args?: Subset<T, TTIMERECORDS_HEAT9_STARTCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TTIMERECORDS_HEAT9_STARTCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TTIMERECORDS_HEAT9_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_STARTAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TTIMERECORDS_HEAT9_STARTAggregateArgs>(args: Subset<T, TTIMERECORDS_HEAT9_STARTAggregateArgs>): PrismaPromise<GetTTIMERECORDS_HEAT9_STARTAggregateType<T>>

    /**
     * Group by TTIMERECORDS_HEAT9_START.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TTIMERECORDS_HEAT9_STARTGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TTIMERECORDS_HEAT9_STARTGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TTIMERECORDS_HEAT9_STARTGroupByArgs['orderBy'] }
        : { orderBy?: TTIMERECORDS_HEAT9_STARTGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TTIMERECORDS_HEAT9_STARTGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTTIMERECORDS_HEAT9_STARTGroupByPayload<T> : PrismaPromise<InputErrors>
  }

  /**
   * The delegate class that acts as a "Promise-like" for TTIMERECORDS_HEAT9_START.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TTIMERECORDS_HEAT9_STARTClient<T> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }

  // Custom InputTypes

  /**
   * TTIMERECORDS_HEAT9_START findUnique
   */
  export type TTIMERECORDS_HEAT9_STARTFindUniqueArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_START
     * 
    **/
    select?: TTIMERECORDS_HEAT9_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT9_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT9_START to fetch.
     * 
    **/
    where: TTIMERECORDS_HEAT9_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT9_START findFirst
   */
  export type TTIMERECORDS_HEAT9_STARTFindFirstArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_START
     * 
    **/
    select?: TTIMERECORDS_HEAT9_STARTSelect | null
    /**
     * Throw an Error if a TTIMERECORDS_HEAT9_START can't be found
     * 
    **/
    rejectOnNotFound?: RejectOnNotFound
    /**
     * Filter, which TTIMERECORDS_HEAT9_START to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT9_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT9_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT9_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TTIMERECORDS_HEAT9_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT9_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT9_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT9_STARTS.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TTIMERECORDS_HEAT9_STARTS.
     * 
    **/
    distinct?: Enumerable<TTIMERECORDS_HEAT9_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT9_START findMany
   */
  export type TTIMERECORDS_HEAT9_STARTFindManyArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_START
     * 
    **/
    select?: TTIMERECORDS_HEAT9_STARTSelect | null
    /**
     * Filter, which TTIMERECORDS_HEAT9_STARTS to fetch.
     * 
    **/
    where?: TTIMERECORDS_HEAT9_STARTWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TTIMERECORDS_HEAT9_STARTS to fetch.
     * 
    **/
    orderBy?: Enumerable<TTIMERECORDS_HEAT9_STARTOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TTIMERECORDS_HEAT9_STARTS.
     * 
    **/
    cursor?: TTIMERECORDS_HEAT9_STARTWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TTIMERECORDS_HEAT9_STARTS from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TTIMERECORDS_HEAT9_STARTS.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TTIMERECORDS_HEAT9_STARTScalarFieldEnum>
  }


  /**
   * TTIMERECORDS_HEAT9_START create
   */
  export type TTIMERECORDS_HEAT9_STARTCreateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_START
     * 
    **/
    select?: TTIMERECORDS_HEAT9_STARTSelect | null
    /**
     * The data needed to create a TTIMERECORDS_HEAT9_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT9_STARTCreateInput, TTIMERECORDS_HEAT9_STARTUncheckedCreateInput>
  }


  /**
   * TTIMERECORDS_HEAT9_START update
   */
  export type TTIMERECORDS_HEAT9_STARTUpdateArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_START
     * 
    **/
    select?: TTIMERECORDS_HEAT9_STARTSelect | null
    /**
     * The data needed to update a TTIMERECORDS_HEAT9_START.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT9_STARTUpdateInput, TTIMERECORDS_HEAT9_STARTUncheckedUpdateInput>
    /**
     * Choose, which TTIMERECORDS_HEAT9_START to update.
     * 
    **/
    where: TTIMERECORDS_HEAT9_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT9_START updateMany
   */
  export type TTIMERECORDS_HEAT9_STARTUpdateManyArgs = {
    /**
     * The data used to update TTIMERECORDS_HEAT9_STARTS.
     * 
    **/
    data: XOR<TTIMERECORDS_HEAT9_STARTUpdateManyMutationInput, TTIMERECORDS_HEAT9_STARTUncheckedUpdateManyInput>
    /**
     * Filter which TTIMERECORDS_HEAT9_STARTS to update
     * 
    **/
    where?: TTIMERECORDS_HEAT9_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT9_START upsert
   */
  export type TTIMERECORDS_HEAT9_STARTUpsertArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_START
     * 
    **/
    select?: TTIMERECORDS_HEAT9_STARTSelect | null
    /**
     * The filter to search for the TTIMERECORDS_HEAT9_START to update in case it exists.
     * 
    **/
    where: TTIMERECORDS_HEAT9_STARTWhereUniqueInput
    /**
     * In case the TTIMERECORDS_HEAT9_START found by the `where` argument doesn't exist, create a new TTIMERECORDS_HEAT9_START with this data.
     * 
    **/
    create: XOR<TTIMERECORDS_HEAT9_STARTCreateInput, TTIMERECORDS_HEAT9_STARTUncheckedCreateInput>
    /**
     * In case the TTIMERECORDS_HEAT9_START was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TTIMERECORDS_HEAT9_STARTUpdateInput, TTIMERECORDS_HEAT9_STARTUncheckedUpdateInput>
  }


  /**
   * TTIMERECORDS_HEAT9_START delete
   */
  export type TTIMERECORDS_HEAT9_STARTDeleteArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_START
     * 
    **/
    select?: TTIMERECORDS_HEAT9_STARTSelect | null
    /**
     * Filter which TTIMERECORDS_HEAT9_START to delete.
     * 
    **/
    where: TTIMERECORDS_HEAT9_STARTWhereUniqueInput
  }


  /**
   * TTIMERECORDS_HEAT9_START deleteMany
   */
  export type TTIMERECORDS_HEAT9_STARTDeleteManyArgs = {
    /**
     * Filter which TTIMERECORDS_HEAT9_STARTS to delete
     * 
    **/
    where?: TTIMERECORDS_HEAT9_STARTWhereInput
  }


  /**
   * TTIMERECORDS_HEAT9_START without action
   */
  export type TTIMERECORDS_HEAT9_STARTArgs = {
    /**
     * Select specific fields to fetch from the TTIMERECORDS_HEAT9_START
     * 
    **/
    select?: TTIMERECORDS_HEAT9_STARTSelect | null
  }



  /**
   * Enums
   */

  // Based on
  // https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

  export const TKEYVALUESScalarFieldEnum: {
    TABLENAME: 'TABLENAME',
    KEYVALUE: 'KEYVALUE'
  };

  export type TKEYVALUESScalarFieldEnum = (typeof TKEYVALUESScalarFieldEnum)[keyof typeof TKEYVALUESScalarFieldEnum]


  export const TUPDATEVALUESScalarFieldEnum: {
    TABLENAME: 'TABLENAME',
    UPDATEVALUE: 'UPDATEVALUE'
  };

  export type TUPDATEVALUESScalarFieldEnum = (typeof TUPDATEVALUESScalarFieldEnum)[keyof typeof TUPDATEVALUESScalarFieldEnum]


  export const TCHRONOMESSAGES_HEAT1ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TRANSPONDER: 'C_TRANSPONDER',
    C_CANAL: 'C_CANAL',
    C_MESSAGE: 'C_MESSAGE'
  };

  export type TCHRONOMESSAGES_HEAT1ScalarFieldEnum = (typeof TCHRONOMESSAGES_HEAT1ScalarFieldEnum)[keyof typeof TCHRONOMESSAGES_HEAT1ScalarFieldEnum]


  export const TCHRONOMESSAGES_HEAT2ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TRANSPONDER: 'C_TRANSPONDER',
    C_CANAL: 'C_CANAL',
    C_MESSAGE: 'C_MESSAGE'
  };

  export type TCHRONOMESSAGES_HEAT2ScalarFieldEnum = (typeof TCHRONOMESSAGES_HEAT2ScalarFieldEnum)[keyof typeof TCHRONOMESSAGES_HEAT2ScalarFieldEnum]


  export const TCHRONOMESSAGES_HEAT3ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TRANSPONDER: 'C_TRANSPONDER',
    C_CANAL: 'C_CANAL',
    C_MESSAGE: 'C_MESSAGE'
  };

  export type TCHRONOMESSAGES_HEAT3ScalarFieldEnum = (typeof TCHRONOMESSAGES_HEAT3ScalarFieldEnum)[keyof typeof TCHRONOMESSAGES_HEAT3ScalarFieldEnum]


  export const TCHRONOMESSAGES_HEAT4ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TRANSPONDER: 'C_TRANSPONDER',
    C_CANAL: 'C_CANAL',
    C_MESSAGE: 'C_MESSAGE'
  };

  export type TCHRONOMESSAGES_HEAT4ScalarFieldEnum = (typeof TCHRONOMESSAGES_HEAT4ScalarFieldEnum)[keyof typeof TCHRONOMESSAGES_HEAT4ScalarFieldEnum]


  export const TCHRONOMESSAGES_HEAT5ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TRANSPONDER: 'C_TRANSPONDER',
    C_CANAL: 'C_CANAL',
    C_MESSAGE: 'C_MESSAGE'
  };

  export type TCHRONOMESSAGES_HEAT5ScalarFieldEnum = (typeof TCHRONOMESSAGES_HEAT5ScalarFieldEnum)[keyof typeof TCHRONOMESSAGES_HEAT5ScalarFieldEnum]


  export const TCHRONOMESSAGES_HEAT6ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TRANSPONDER: 'C_TRANSPONDER',
    C_CANAL: 'C_CANAL',
    C_MESSAGE: 'C_MESSAGE'
  };

  export type TCHRONOMESSAGES_HEAT6ScalarFieldEnum = (typeof TCHRONOMESSAGES_HEAT6ScalarFieldEnum)[keyof typeof TCHRONOMESSAGES_HEAT6ScalarFieldEnum]


  export const TCHRONOMESSAGES_HEAT7ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TRANSPONDER: 'C_TRANSPONDER',
    C_CANAL: 'C_CANAL',
    C_MESSAGE: 'C_MESSAGE'
  };

  export type TCHRONOMESSAGES_HEAT7ScalarFieldEnum = (typeof TCHRONOMESSAGES_HEAT7ScalarFieldEnum)[keyof typeof TCHRONOMESSAGES_HEAT7ScalarFieldEnum]


  export const TCHRONOMESSAGES_HEAT8ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TRANSPONDER: 'C_TRANSPONDER',
    C_CANAL: 'C_CANAL',
    C_MESSAGE: 'C_MESSAGE'
  };

  export type TCHRONOMESSAGES_HEAT8ScalarFieldEnum = (typeof TCHRONOMESSAGES_HEAT8ScalarFieldEnum)[keyof typeof TCHRONOMESSAGES_HEAT8ScalarFieldEnum]


  export const TCHRONOMESSAGES_HEAT9ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TRANSPONDER: 'C_TRANSPONDER',
    C_CANAL: 'C_CANAL',
    C_MESSAGE: 'C_MESSAGE'
  };

  export type TCHRONOMESSAGES_HEAT9ScalarFieldEnum = (typeof TCHRONOMESSAGES_HEAT9ScalarFieldEnum)[keyof typeof TCHRONOMESSAGES_HEAT9ScalarFieldEnum]


  export const TSTARTLIST_HEAT1ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_START: 'C_START'
  };

  export type TSTARTLIST_HEAT1ScalarFieldEnum = (typeof TSTARTLIST_HEAT1ScalarFieldEnum)[keyof typeof TSTARTLIST_HEAT1ScalarFieldEnum]


  export const TSTARTLIST_HEAT2ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_START: 'C_START'
  };

  export type TSTARTLIST_HEAT2ScalarFieldEnum = (typeof TSTARTLIST_HEAT2ScalarFieldEnum)[keyof typeof TSTARTLIST_HEAT2ScalarFieldEnum]


  export const TSTARTLIST_HEAT3ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_START: 'C_START'
  };

  export type TSTARTLIST_HEAT3ScalarFieldEnum = (typeof TSTARTLIST_HEAT3ScalarFieldEnum)[keyof typeof TSTARTLIST_HEAT3ScalarFieldEnum]


  export const TSTARTLIST_HEAT4ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_START: 'C_START'
  };

  export type TSTARTLIST_HEAT4ScalarFieldEnum = (typeof TSTARTLIST_HEAT4ScalarFieldEnum)[keyof typeof TSTARTLIST_HEAT4ScalarFieldEnum]


  export const TSTARTLIST_HEAT5ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_START: 'C_START'
  };

  export type TSTARTLIST_HEAT5ScalarFieldEnum = (typeof TSTARTLIST_HEAT5ScalarFieldEnum)[keyof typeof TSTARTLIST_HEAT5ScalarFieldEnum]


  export const TSTARTLIST_HEAT6ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_START: 'C_START'
  };

  export type TSTARTLIST_HEAT6ScalarFieldEnum = (typeof TSTARTLIST_HEAT6ScalarFieldEnum)[keyof typeof TSTARTLIST_HEAT6ScalarFieldEnum]


  export const TSTARTLIST_HEAT7ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_START: 'C_START'
  };

  export type TSTARTLIST_HEAT7ScalarFieldEnum = (typeof TSTARTLIST_HEAT7ScalarFieldEnum)[keyof typeof TSTARTLIST_HEAT7ScalarFieldEnum]


  export const TSTARTLIST_HEAT8ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_START: 'C_START'
  };

  export type TSTARTLIST_HEAT8ScalarFieldEnum = (typeof TSTARTLIST_HEAT8ScalarFieldEnum)[keyof typeof TSTARTLIST_HEAT8ScalarFieldEnum]


  export const TSTARTLIST_HEAT9ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_START: 'C_START'
  };

  export type TSTARTLIST_HEAT9ScalarFieldEnum = (typeof TSTARTLIST_HEAT9ScalarFieldEnum)[keyof typeof TSTARTLIST_HEAT9ScalarFieldEnum]


  export const TTIMEINFOS_HEAT1ScalarFieldEnum: {
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TIME: 'C_TIME',
    C_PENALTY: 'C_PENALTY',
    C_INTER1: 'C_INTER1',
    C_INTER2: 'C_INTER2',
    C_INTER3: 'C_INTER3',
    C_INTER4: 'C_INTER4',
    C_INTER5: 'C_INTER5',
    C_INTER6: 'C_INTER6',
    C_INTER7: 'C_INTER7',
    C_INTER8: 'C_INTER8',
    C_INTER9: 'C_INTER9',
    C_SPEED1: 'C_SPEED1',
    C_SPEED2: 'C_SPEED2',
    C_SPEED3: 'C_SPEED3',
    C_SPEED4: 'C_SPEED4',
    C_SPEED5: 'C_SPEED5',
    C_SPEED6: 'C_SPEED6',
    C_SPEED7: 'C_SPEED7',
    C_SPEED8: 'C_SPEED8',
    C_SPEED9: 'C_SPEED9',
    C_DATA1: 'C_DATA1',
    C_DATA2: 'C_DATA2',
    C_DATA3: 'C_DATA3',
    C_DATA4: 'C_DATA4',
    C_DATA5: 'C_DATA5',
    C_DATA6: 'C_DATA6',
    C_DATA7: 'C_DATA7',
    C_DATA8: 'C_DATA8',
    C_REASON: 'C_REASON'
  };

  export type TTIMEINFOS_HEAT1ScalarFieldEnum = (typeof TTIMEINFOS_HEAT1ScalarFieldEnum)[keyof typeof TTIMEINFOS_HEAT1ScalarFieldEnum]


  export const TTIMEINFOS_HEAT2ScalarFieldEnum: {
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TIME: 'C_TIME',
    C_PENALTY: 'C_PENALTY',
    C_INTER1: 'C_INTER1',
    C_INTER2: 'C_INTER2',
    C_INTER3: 'C_INTER3',
    C_INTER4: 'C_INTER4',
    C_INTER5: 'C_INTER5',
    C_INTER6: 'C_INTER6',
    C_INTER7: 'C_INTER7',
    C_INTER8: 'C_INTER8',
    C_INTER9: 'C_INTER9',
    C_SPEED1: 'C_SPEED1',
    C_SPEED2: 'C_SPEED2',
    C_SPEED3: 'C_SPEED3',
    C_SPEED4: 'C_SPEED4',
    C_SPEED5: 'C_SPEED5',
    C_SPEED6: 'C_SPEED6',
    C_SPEED7: 'C_SPEED7',
    C_SPEED8: 'C_SPEED8',
    C_SPEED9: 'C_SPEED9',
    C_DATA1: 'C_DATA1',
    C_DATA2: 'C_DATA2',
    C_DATA3: 'C_DATA3',
    C_DATA4: 'C_DATA4',
    C_DATA5: 'C_DATA5',
    C_DATA6: 'C_DATA6',
    C_DATA7: 'C_DATA7',
    C_DATA8: 'C_DATA8',
    C_REASON: 'C_REASON'
  };

  export type TTIMEINFOS_HEAT2ScalarFieldEnum = (typeof TTIMEINFOS_HEAT2ScalarFieldEnum)[keyof typeof TTIMEINFOS_HEAT2ScalarFieldEnum]


  export const TTIMEINFOS_HEAT3ScalarFieldEnum: {
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TIME: 'C_TIME',
    C_PENALTY: 'C_PENALTY',
    C_INTER1: 'C_INTER1',
    C_INTER2: 'C_INTER2',
    C_INTER3: 'C_INTER3',
    C_INTER4: 'C_INTER4',
    C_INTER5: 'C_INTER5',
    C_INTER6: 'C_INTER6',
    C_INTER7: 'C_INTER7',
    C_INTER8: 'C_INTER8',
    C_INTER9: 'C_INTER9',
    C_SPEED1: 'C_SPEED1',
    C_SPEED2: 'C_SPEED2',
    C_SPEED3: 'C_SPEED3',
    C_SPEED4: 'C_SPEED4',
    C_SPEED5: 'C_SPEED5',
    C_SPEED6: 'C_SPEED6',
    C_SPEED7: 'C_SPEED7',
    C_SPEED8: 'C_SPEED8',
    C_SPEED9: 'C_SPEED9',
    C_DATA1: 'C_DATA1',
    C_DATA2: 'C_DATA2',
    C_DATA3: 'C_DATA3',
    C_DATA4: 'C_DATA4',
    C_DATA5: 'C_DATA5',
    C_DATA6: 'C_DATA6',
    C_DATA7: 'C_DATA7',
    C_DATA8: 'C_DATA8',
    C_REASON: 'C_REASON'
  };

  export type TTIMEINFOS_HEAT3ScalarFieldEnum = (typeof TTIMEINFOS_HEAT3ScalarFieldEnum)[keyof typeof TTIMEINFOS_HEAT3ScalarFieldEnum]


  export const TTIMEINFOS_HEAT4ScalarFieldEnum: {
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TIME: 'C_TIME',
    C_PENALTY: 'C_PENALTY',
    C_INTER1: 'C_INTER1',
    C_INTER2: 'C_INTER2',
    C_INTER3: 'C_INTER3',
    C_INTER4: 'C_INTER4',
    C_INTER5: 'C_INTER5',
    C_INTER6: 'C_INTER6',
    C_INTER7: 'C_INTER7',
    C_INTER8: 'C_INTER8',
    C_INTER9: 'C_INTER9',
    C_SPEED1: 'C_SPEED1',
    C_SPEED2: 'C_SPEED2',
    C_SPEED3: 'C_SPEED3',
    C_SPEED4: 'C_SPEED4',
    C_SPEED5: 'C_SPEED5',
    C_SPEED6: 'C_SPEED6',
    C_SPEED7: 'C_SPEED7',
    C_SPEED8: 'C_SPEED8',
    C_SPEED9: 'C_SPEED9',
    C_DATA1: 'C_DATA1',
    C_DATA2: 'C_DATA2',
    C_DATA3: 'C_DATA3',
    C_DATA4: 'C_DATA4',
    C_DATA5: 'C_DATA5',
    C_DATA6: 'C_DATA6',
    C_DATA7: 'C_DATA7',
    C_DATA8: 'C_DATA8',
    C_REASON: 'C_REASON'
  };

  export type TTIMEINFOS_HEAT4ScalarFieldEnum = (typeof TTIMEINFOS_HEAT4ScalarFieldEnum)[keyof typeof TTIMEINFOS_HEAT4ScalarFieldEnum]


  export const TTIMEINFOS_HEAT5ScalarFieldEnum: {
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TIME: 'C_TIME',
    C_PENALTY: 'C_PENALTY',
    C_INTER1: 'C_INTER1',
    C_INTER2: 'C_INTER2',
    C_INTER3: 'C_INTER3',
    C_INTER4: 'C_INTER4',
    C_INTER5: 'C_INTER5',
    C_INTER6: 'C_INTER6',
    C_INTER7: 'C_INTER7',
    C_INTER8: 'C_INTER8',
    C_INTER9: 'C_INTER9',
    C_SPEED1: 'C_SPEED1',
    C_SPEED2: 'C_SPEED2',
    C_SPEED3: 'C_SPEED3',
    C_SPEED4: 'C_SPEED4',
    C_SPEED5: 'C_SPEED5',
    C_SPEED6: 'C_SPEED6',
    C_SPEED7: 'C_SPEED7',
    C_SPEED8: 'C_SPEED8',
    C_SPEED9: 'C_SPEED9',
    C_DATA1: 'C_DATA1',
    C_DATA2: 'C_DATA2',
    C_DATA3: 'C_DATA3',
    C_DATA4: 'C_DATA4',
    C_DATA5: 'C_DATA5',
    C_DATA6: 'C_DATA6',
    C_DATA7: 'C_DATA7',
    C_DATA8: 'C_DATA8',
    C_REASON: 'C_REASON'
  };

  export type TTIMEINFOS_HEAT5ScalarFieldEnum = (typeof TTIMEINFOS_HEAT5ScalarFieldEnum)[keyof typeof TTIMEINFOS_HEAT5ScalarFieldEnum]


  export const TTIMEINFOS_HEAT6ScalarFieldEnum: {
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TIME: 'C_TIME',
    C_PENALTY: 'C_PENALTY',
    C_INTER1: 'C_INTER1',
    C_INTER2: 'C_INTER2',
    C_INTER3: 'C_INTER3',
    C_INTER4: 'C_INTER4',
    C_INTER5: 'C_INTER5',
    C_INTER6: 'C_INTER6',
    C_INTER7: 'C_INTER7',
    C_INTER8: 'C_INTER8',
    C_INTER9: 'C_INTER9',
    C_SPEED1: 'C_SPEED1',
    C_SPEED2: 'C_SPEED2',
    C_SPEED3: 'C_SPEED3',
    C_SPEED4: 'C_SPEED4',
    C_SPEED5: 'C_SPEED5',
    C_SPEED6: 'C_SPEED6',
    C_SPEED7: 'C_SPEED7',
    C_SPEED8: 'C_SPEED8',
    C_SPEED9: 'C_SPEED9',
    C_DATA1: 'C_DATA1',
    C_DATA2: 'C_DATA2',
    C_DATA3: 'C_DATA3',
    C_DATA4: 'C_DATA4',
    C_DATA5: 'C_DATA5',
    C_DATA6: 'C_DATA6',
    C_DATA7: 'C_DATA7',
    C_DATA8: 'C_DATA8',
    C_REASON: 'C_REASON'
  };

  export type TTIMEINFOS_HEAT6ScalarFieldEnum = (typeof TTIMEINFOS_HEAT6ScalarFieldEnum)[keyof typeof TTIMEINFOS_HEAT6ScalarFieldEnum]


  export const TTIMEINFOS_HEAT7ScalarFieldEnum: {
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TIME: 'C_TIME',
    C_PENALTY: 'C_PENALTY',
    C_INTER1: 'C_INTER1',
    C_INTER2: 'C_INTER2',
    C_INTER3: 'C_INTER3',
    C_INTER4: 'C_INTER4',
    C_INTER5: 'C_INTER5',
    C_INTER6: 'C_INTER6',
    C_INTER7: 'C_INTER7',
    C_INTER8: 'C_INTER8',
    C_INTER9: 'C_INTER9',
    C_SPEED1: 'C_SPEED1',
    C_SPEED2: 'C_SPEED2',
    C_SPEED3: 'C_SPEED3',
    C_SPEED4: 'C_SPEED4',
    C_SPEED5: 'C_SPEED5',
    C_SPEED6: 'C_SPEED6',
    C_SPEED7: 'C_SPEED7',
    C_SPEED8: 'C_SPEED8',
    C_SPEED9: 'C_SPEED9',
    C_DATA1: 'C_DATA1',
    C_DATA2: 'C_DATA2',
    C_DATA3: 'C_DATA3',
    C_DATA4: 'C_DATA4',
    C_DATA5: 'C_DATA5',
    C_DATA6: 'C_DATA6',
    C_DATA7: 'C_DATA7',
    C_DATA8: 'C_DATA8',
    C_REASON: 'C_REASON'
  };

  export type TTIMEINFOS_HEAT7ScalarFieldEnum = (typeof TTIMEINFOS_HEAT7ScalarFieldEnum)[keyof typeof TTIMEINFOS_HEAT7ScalarFieldEnum]


  export const TTIMEINFOS_HEAT8ScalarFieldEnum: {
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TIME: 'C_TIME',
    C_PENALTY: 'C_PENALTY',
    C_INTER1: 'C_INTER1',
    C_INTER2: 'C_INTER2',
    C_INTER3: 'C_INTER3',
    C_INTER4: 'C_INTER4',
    C_INTER5: 'C_INTER5',
    C_INTER6: 'C_INTER6',
    C_INTER7: 'C_INTER7',
    C_INTER8: 'C_INTER8',
    C_INTER9: 'C_INTER9',
    C_SPEED1: 'C_SPEED1',
    C_SPEED2: 'C_SPEED2',
    C_SPEED3: 'C_SPEED3',
    C_SPEED4: 'C_SPEED4',
    C_SPEED5: 'C_SPEED5',
    C_SPEED6: 'C_SPEED6',
    C_SPEED7: 'C_SPEED7',
    C_SPEED8: 'C_SPEED8',
    C_SPEED9: 'C_SPEED9',
    C_DATA1: 'C_DATA1',
    C_DATA2: 'C_DATA2',
    C_DATA3: 'C_DATA3',
    C_DATA4: 'C_DATA4',
    C_DATA5: 'C_DATA5',
    C_DATA6: 'C_DATA6',
    C_DATA7: 'C_DATA7',
    C_DATA8: 'C_DATA8',
    C_REASON: 'C_REASON'
  };

  export type TTIMEINFOS_HEAT8ScalarFieldEnum = (typeof TTIMEINFOS_HEAT8ScalarFieldEnum)[keyof typeof TTIMEINFOS_HEAT8ScalarFieldEnum]


  export const TTIMEINFOS_HEAT9ScalarFieldEnum: {
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_TIME: 'C_TIME',
    C_PENALTY: 'C_PENALTY',
    C_INTER1: 'C_INTER1',
    C_INTER2: 'C_INTER2',
    C_INTER3: 'C_INTER3',
    C_INTER4: 'C_INTER4',
    C_INTER5: 'C_INTER5',
    C_INTER6: 'C_INTER6',
    C_INTER7: 'C_INTER7',
    C_INTER8: 'C_INTER8',
    C_INTER9: 'C_INTER9',
    C_SPEED1: 'C_SPEED1',
    C_SPEED2: 'C_SPEED2',
    C_SPEED3: 'C_SPEED3',
    C_SPEED4: 'C_SPEED4',
    C_SPEED5: 'C_SPEED5',
    C_SPEED6: 'C_SPEED6',
    C_SPEED7: 'C_SPEED7',
    C_SPEED8: 'C_SPEED8',
    C_SPEED9: 'C_SPEED9',
    C_DATA1: 'C_DATA1',
    C_DATA2: 'C_DATA2',
    C_DATA3: 'C_DATA3',
    C_DATA4: 'C_DATA4',
    C_DATA5: 'C_DATA5',
    C_DATA6: 'C_DATA6',
    C_DATA7: 'C_DATA7',
    C_DATA8: 'C_DATA8',
    C_REASON: 'C_REASON'
  };

  export type TTIMEINFOS_HEAT9ScalarFieldEnum = (typeof TTIMEINFOS_HEAT9ScalarFieldEnum)[keyof typeof TTIMEINFOS_HEAT9ScalarFieldEnum]


  export const TTIMERECORDS_HEAT1_FINISHScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT1_FINISHScalarFieldEnum = (typeof TTIMERECORDS_HEAT1_FINISHScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT1_FINISHScalarFieldEnum]


  export const TTIMERECORDS_HEAT1_INTER1ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT1_INTER1ScalarFieldEnum = (typeof TTIMERECORDS_HEAT1_INTER1ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT1_INTER1ScalarFieldEnum]


  export const TTIMERECORDS_HEAT1_INTER2ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT1_INTER2ScalarFieldEnum = (typeof TTIMERECORDS_HEAT1_INTER2ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT1_INTER2ScalarFieldEnum]


  export const TTIMERECORDS_HEAT1_STARTScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT1_STARTScalarFieldEnum = (typeof TTIMERECORDS_HEAT1_STARTScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT1_STARTScalarFieldEnum]


  export const TTIMERECORDS_HEAT2_FINISHScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT2_FINISHScalarFieldEnum = (typeof TTIMERECORDS_HEAT2_FINISHScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT2_FINISHScalarFieldEnum]


  export const TTIMERECORDS_HEAT2_INTER1ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT2_INTER1ScalarFieldEnum = (typeof TTIMERECORDS_HEAT2_INTER1ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT2_INTER1ScalarFieldEnum]


  export const TTIMERECORDS_HEAT2_INTER2ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT2_INTER2ScalarFieldEnum = (typeof TTIMERECORDS_HEAT2_INTER2ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT2_INTER2ScalarFieldEnum]


  export const TTIMERECORDS_HEAT2_STARTScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT2_STARTScalarFieldEnum = (typeof TTIMERECORDS_HEAT2_STARTScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT2_STARTScalarFieldEnum]


  export const TTIMERECORDS_HEAT3_FINISHScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT3_FINISHScalarFieldEnum = (typeof TTIMERECORDS_HEAT3_FINISHScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT3_FINISHScalarFieldEnum]


  export const TTIMERECORDS_HEAT3_INTER1ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT3_INTER1ScalarFieldEnum = (typeof TTIMERECORDS_HEAT3_INTER1ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT3_INTER1ScalarFieldEnum]


  export const TTIMERECORDS_HEAT3_INTER2ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT3_INTER2ScalarFieldEnum = (typeof TTIMERECORDS_HEAT3_INTER2ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT3_INTER2ScalarFieldEnum]


  export const TTIMERECORDS_HEAT3_STARTScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT3_STARTScalarFieldEnum = (typeof TTIMERECORDS_HEAT3_STARTScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT3_STARTScalarFieldEnum]


  export const TTIMERECORDS_HEAT4_FINISHScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT4_FINISHScalarFieldEnum = (typeof TTIMERECORDS_HEAT4_FINISHScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT4_FINISHScalarFieldEnum]


  export const TTIMERECORDS_HEAT4_INTER1ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT4_INTER1ScalarFieldEnum = (typeof TTIMERECORDS_HEAT4_INTER1ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT4_INTER1ScalarFieldEnum]


  export const TTIMERECORDS_HEAT4_INTER2ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT4_INTER2ScalarFieldEnum = (typeof TTIMERECORDS_HEAT4_INTER2ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT4_INTER2ScalarFieldEnum]


  export const TTIMERECORDS_HEAT4_STARTScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT4_STARTScalarFieldEnum = (typeof TTIMERECORDS_HEAT4_STARTScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT4_STARTScalarFieldEnum]


  export const TTIMERECORDS_HEAT5_FINISHScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT5_FINISHScalarFieldEnum = (typeof TTIMERECORDS_HEAT5_FINISHScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT5_FINISHScalarFieldEnum]


  export const TTIMERECORDS_HEAT5_INTER1ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT5_INTER1ScalarFieldEnum = (typeof TTIMERECORDS_HEAT5_INTER1ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT5_INTER1ScalarFieldEnum]


  export const TTIMERECORDS_HEAT5_INTER2ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT5_INTER2ScalarFieldEnum = (typeof TTIMERECORDS_HEAT5_INTER2ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT5_INTER2ScalarFieldEnum]


  export const TTIMERECORDS_HEAT5_STARTScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT5_STARTScalarFieldEnum = (typeof TTIMERECORDS_HEAT5_STARTScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT5_STARTScalarFieldEnum]


  export const TTIMERECORDS_HEAT6_FINISHScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT6_FINISHScalarFieldEnum = (typeof TTIMERECORDS_HEAT6_FINISHScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT6_FINISHScalarFieldEnum]


  export const TTIMERECORDS_HEAT6_INTER1ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT6_INTER1ScalarFieldEnum = (typeof TTIMERECORDS_HEAT6_INTER1ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT6_INTER1ScalarFieldEnum]


  export const TTIMERECORDS_HEAT6_INTER2ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT6_INTER2ScalarFieldEnum = (typeof TTIMERECORDS_HEAT6_INTER2ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT6_INTER2ScalarFieldEnum]


  export const TTIMERECORDS_HEAT6_STARTScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT6_STARTScalarFieldEnum = (typeof TTIMERECORDS_HEAT6_STARTScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT6_STARTScalarFieldEnum]


  export const TTIMERECORDS_HEAT7_FINISHScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT7_FINISHScalarFieldEnum = (typeof TTIMERECORDS_HEAT7_FINISHScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT7_FINISHScalarFieldEnum]


  export const TTIMERECORDS_HEAT7_INTER1ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT7_INTER1ScalarFieldEnum = (typeof TTIMERECORDS_HEAT7_INTER1ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT7_INTER1ScalarFieldEnum]


  export const TTIMERECORDS_HEAT7_INTER2ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT7_INTER2ScalarFieldEnum = (typeof TTIMERECORDS_HEAT7_INTER2ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT7_INTER2ScalarFieldEnum]


  export const TTIMERECORDS_HEAT7_STARTScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT7_STARTScalarFieldEnum = (typeof TTIMERECORDS_HEAT7_STARTScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT7_STARTScalarFieldEnum]


  export const TTIMERECORDS_HEAT8_FINISHScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT8_FINISHScalarFieldEnum = (typeof TTIMERECORDS_HEAT8_FINISHScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT8_FINISHScalarFieldEnum]


  export const TTIMERECORDS_HEAT8_INTER1ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT8_INTER1ScalarFieldEnum = (typeof TTIMERECORDS_HEAT8_INTER1ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT8_INTER1ScalarFieldEnum]


  export const TTIMERECORDS_HEAT8_INTER2ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT8_INTER2ScalarFieldEnum = (typeof TTIMERECORDS_HEAT8_INTER2ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT8_INTER2ScalarFieldEnum]


  export const TTIMERECORDS_HEAT8_STARTScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT8_STARTScalarFieldEnum = (typeof TTIMERECORDS_HEAT8_STARTScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT8_STARTScalarFieldEnum]


  export const TTIMERECORDS_HEAT9_FINISHScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT9_FINISHScalarFieldEnum = (typeof TTIMERECORDS_HEAT9_FINISHScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT9_FINISHScalarFieldEnum]


  export const TTIMERECORDS_HEAT9_INTER1ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT9_INTER1ScalarFieldEnum = (typeof TTIMERECORDS_HEAT9_INTER1ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT9_INTER1ScalarFieldEnum]


  export const TTIMERECORDS_HEAT9_INTER2ScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT9_INTER2ScalarFieldEnum = (typeof TTIMERECORDS_HEAT9_INTER2ScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT9_INTER2ScalarFieldEnum]


  export const TTIMERECORDS_HEAT9_STARTScalarFieldEnum: {
    C_LINE: 'C_LINE',
    C_NUM: 'C_NUM',
    C_STATUS: 'C_STATUS',
    C_HOUR1: 'C_HOUR1',
    C_HOUR2: 'C_HOUR2',
    C_SPEED: 'C_SPEED',
    C_LAP: 'C_LAP',
    C_TRANSPONDER_NUM: 'C_TRANSPONDER_NUM',
    C_TRANSPONDER_INFOS: 'C_TRANSPONDER_INFOS',
    C_INFO1: 'C_INFO1',
    C_INFO2: 'C_INFO2'
  };

  export type TTIMERECORDS_HEAT9_STARTScalarFieldEnum = (typeof TTIMERECORDS_HEAT9_STARTScalarFieldEnum)[keyof typeof TTIMERECORDS_HEAT9_STARTScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  /**
   * Deep Input Types
   */


  export type TKEYVALUESWhereInput = {
    AND?: Enumerable<TKEYVALUESWhereInput>
    OR?: Enumerable<TKEYVALUESWhereInput>
    NOT?: Enumerable<TKEYVALUESWhereInput>
    TABLENAME?: StringFilter | string
    KEYVALUE?: IntFilter | number
  }

  export type TKEYVALUESOrderByWithRelationInput = {
    TABLENAME?: SortOrder
    KEYVALUE?: SortOrder
  }

  export type TKEYVALUESWhereUniqueInput = {
    TABLENAME?: string
  }

  export type TKEYVALUESOrderByWithAggregationInput = {
    TABLENAME?: SortOrder
    KEYVALUE?: SortOrder
    _count?: TKEYVALUESCountOrderByAggregateInput
    _avg?: TKEYVALUESAvgOrderByAggregateInput
    _max?: TKEYVALUESMaxOrderByAggregateInput
    _min?: TKEYVALUESMinOrderByAggregateInput
    _sum?: TKEYVALUESSumOrderByAggregateInput
  }

  export type TKEYVALUESScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TKEYVALUESScalarWhereWithAggregatesInput>
    OR?: Enumerable<TKEYVALUESScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TKEYVALUESScalarWhereWithAggregatesInput>
    TABLENAME?: StringWithAggregatesFilter | string
    KEYVALUE?: IntWithAggregatesFilter | number
  }

  export type TUPDATEVALUESWhereInput = {
    AND?: Enumerable<TUPDATEVALUESWhereInput>
    OR?: Enumerable<TUPDATEVALUESWhereInput>
    NOT?: Enumerable<TUPDATEVALUESWhereInput>
    TABLENAME?: StringFilter | string
    UPDATEVALUE?: IntFilter | number
  }

  export type TUPDATEVALUESOrderByWithRelationInput = {
    TABLENAME?: SortOrder
    UPDATEVALUE?: SortOrder
  }

  export type TUPDATEVALUESWhereUniqueInput = {
    TABLENAME?: string
  }

  export type TUPDATEVALUESOrderByWithAggregationInput = {
    TABLENAME?: SortOrder
    UPDATEVALUE?: SortOrder
    _count?: TUPDATEVALUESCountOrderByAggregateInput
    _avg?: TUPDATEVALUESAvgOrderByAggregateInput
    _max?: TUPDATEVALUESMaxOrderByAggregateInput
    _min?: TUPDATEVALUESMinOrderByAggregateInput
    _sum?: TUPDATEVALUESSumOrderByAggregateInput
  }

  export type TUPDATEVALUESScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TUPDATEVALUESScalarWhereWithAggregatesInput>
    OR?: Enumerable<TUPDATEVALUESScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TUPDATEVALUESScalarWhereWithAggregatesInput>
    TABLENAME?: StringWithAggregatesFilter | string
    UPDATEVALUE?: IntWithAggregatesFilter | number
  }

  export type TCHRONOMESSAGES_HEAT1WhereInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT1WhereInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT1WhereInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT1WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_TRANSPONDER?: StringNullableFilter | string | null
    C_CANAL?: StringNullableFilter | string | null
    C_MESSAGE?: StringNullableFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT1OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT1WhereUniqueInput = {
    C_LINE?: number
  }

  export type TCHRONOMESSAGES_HEAT1OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
    _count?: TCHRONOMESSAGES_HEAT1CountOrderByAggregateInput
    _avg?: TCHRONOMESSAGES_HEAT1AvgOrderByAggregateInput
    _max?: TCHRONOMESSAGES_HEAT1MaxOrderByAggregateInput
    _min?: TCHRONOMESSAGES_HEAT1MinOrderByAggregateInput
    _sum?: TCHRONOMESSAGES_HEAT1SumOrderByAggregateInput
  }

  export type TCHRONOMESSAGES_HEAT1ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT1ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT1ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT1ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER?: StringNullableWithAggregatesFilter | string | null
    C_CANAL?: StringNullableWithAggregatesFilter | string | null
    C_MESSAGE?: StringNullableWithAggregatesFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT2WhereInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT2WhereInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT2WhereInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT2WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_TRANSPONDER?: StringNullableFilter | string | null
    C_CANAL?: StringNullableFilter | string | null
    C_MESSAGE?: StringNullableFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT2OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT2WhereUniqueInput = {
    C_LINE?: number
  }

  export type TCHRONOMESSAGES_HEAT2OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
    _count?: TCHRONOMESSAGES_HEAT2CountOrderByAggregateInput
    _avg?: TCHRONOMESSAGES_HEAT2AvgOrderByAggregateInput
    _max?: TCHRONOMESSAGES_HEAT2MaxOrderByAggregateInput
    _min?: TCHRONOMESSAGES_HEAT2MinOrderByAggregateInput
    _sum?: TCHRONOMESSAGES_HEAT2SumOrderByAggregateInput
  }

  export type TCHRONOMESSAGES_HEAT2ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT2ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT2ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT2ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER?: StringNullableWithAggregatesFilter | string | null
    C_CANAL?: StringNullableWithAggregatesFilter | string | null
    C_MESSAGE?: StringNullableWithAggregatesFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT3WhereInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT3WhereInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT3WhereInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT3WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_TRANSPONDER?: StringNullableFilter | string | null
    C_CANAL?: StringNullableFilter | string | null
    C_MESSAGE?: StringNullableFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT3OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT3WhereUniqueInput = {
    C_LINE?: number
  }

  export type TCHRONOMESSAGES_HEAT3OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
    _count?: TCHRONOMESSAGES_HEAT3CountOrderByAggregateInput
    _avg?: TCHRONOMESSAGES_HEAT3AvgOrderByAggregateInput
    _max?: TCHRONOMESSAGES_HEAT3MaxOrderByAggregateInput
    _min?: TCHRONOMESSAGES_HEAT3MinOrderByAggregateInput
    _sum?: TCHRONOMESSAGES_HEAT3SumOrderByAggregateInput
  }

  export type TCHRONOMESSAGES_HEAT3ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT3ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT3ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT3ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER?: StringNullableWithAggregatesFilter | string | null
    C_CANAL?: StringNullableWithAggregatesFilter | string | null
    C_MESSAGE?: StringNullableWithAggregatesFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT4WhereInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT4WhereInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT4WhereInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT4WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_TRANSPONDER?: StringNullableFilter | string | null
    C_CANAL?: StringNullableFilter | string | null
    C_MESSAGE?: StringNullableFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT4OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT4WhereUniqueInput = {
    C_LINE?: number
  }

  export type TCHRONOMESSAGES_HEAT4OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
    _count?: TCHRONOMESSAGES_HEAT4CountOrderByAggregateInput
    _avg?: TCHRONOMESSAGES_HEAT4AvgOrderByAggregateInput
    _max?: TCHRONOMESSAGES_HEAT4MaxOrderByAggregateInput
    _min?: TCHRONOMESSAGES_HEAT4MinOrderByAggregateInput
    _sum?: TCHRONOMESSAGES_HEAT4SumOrderByAggregateInput
  }

  export type TCHRONOMESSAGES_HEAT4ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT4ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT4ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT4ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER?: StringNullableWithAggregatesFilter | string | null
    C_CANAL?: StringNullableWithAggregatesFilter | string | null
    C_MESSAGE?: StringNullableWithAggregatesFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT5WhereInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT5WhereInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT5WhereInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT5WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_TRANSPONDER?: StringNullableFilter | string | null
    C_CANAL?: StringNullableFilter | string | null
    C_MESSAGE?: StringNullableFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT5OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT5WhereUniqueInput = {
    C_LINE?: number
  }

  export type TCHRONOMESSAGES_HEAT5OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
    _count?: TCHRONOMESSAGES_HEAT5CountOrderByAggregateInput
    _avg?: TCHRONOMESSAGES_HEAT5AvgOrderByAggregateInput
    _max?: TCHRONOMESSAGES_HEAT5MaxOrderByAggregateInput
    _min?: TCHRONOMESSAGES_HEAT5MinOrderByAggregateInput
    _sum?: TCHRONOMESSAGES_HEAT5SumOrderByAggregateInput
  }

  export type TCHRONOMESSAGES_HEAT5ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT5ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT5ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT5ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER?: StringNullableWithAggregatesFilter | string | null
    C_CANAL?: StringNullableWithAggregatesFilter | string | null
    C_MESSAGE?: StringNullableWithAggregatesFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT6WhereInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT6WhereInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT6WhereInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT6WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_TRANSPONDER?: StringNullableFilter | string | null
    C_CANAL?: StringNullableFilter | string | null
    C_MESSAGE?: StringNullableFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT6OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT6WhereUniqueInput = {
    C_LINE?: number
  }

  export type TCHRONOMESSAGES_HEAT6OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
    _count?: TCHRONOMESSAGES_HEAT6CountOrderByAggregateInput
    _avg?: TCHRONOMESSAGES_HEAT6AvgOrderByAggregateInput
    _max?: TCHRONOMESSAGES_HEAT6MaxOrderByAggregateInput
    _min?: TCHRONOMESSAGES_HEAT6MinOrderByAggregateInput
    _sum?: TCHRONOMESSAGES_HEAT6SumOrderByAggregateInput
  }

  export type TCHRONOMESSAGES_HEAT6ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT6ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT6ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT6ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER?: StringNullableWithAggregatesFilter | string | null
    C_CANAL?: StringNullableWithAggregatesFilter | string | null
    C_MESSAGE?: StringNullableWithAggregatesFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT7WhereInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT7WhereInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT7WhereInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT7WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_TRANSPONDER?: StringNullableFilter | string | null
    C_CANAL?: StringNullableFilter | string | null
    C_MESSAGE?: StringNullableFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT7OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT7WhereUniqueInput = {
    C_LINE?: number
  }

  export type TCHRONOMESSAGES_HEAT7OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
    _count?: TCHRONOMESSAGES_HEAT7CountOrderByAggregateInput
    _avg?: TCHRONOMESSAGES_HEAT7AvgOrderByAggregateInput
    _max?: TCHRONOMESSAGES_HEAT7MaxOrderByAggregateInput
    _min?: TCHRONOMESSAGES_HEAT7MinOrderByAggregateInput
    _sum?: TCHRONOMESSAGES_HEAT7SumOrderByAggregateInput
  }

  export type TCHRONOMESSAGES_HEAT7ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT7ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT7ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT7ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER?: StringNullableWithAggregatesFilter | string | null
    C_CANAL?: StringNullableWithAggregatesFilter | string | null
    C_MESSAGE?: StringNullableWithAggregatesFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT8WhereInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT8WhereInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT8WhereInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT8WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_TRANSPONDER?: StringNullableFilter | string | null
    C_CANAL?: StringNullableFilter | string | null
    C_MESSAGE?: StringNullableFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT8OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT8WhereUniqueInput = {
    C_LINE?: number
  }

  export type TCHRONOMESSAGES_HEAT8OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
    _count?: TCHRONOMESSAGES_HEAT8CountOrderByAggregateInput
    _avg?: TCHRONOMESSAGES_HEAT8AvgOrderByAggregateInput
    _max?: TCHRONOMESSAGES_HEAT8MaxOrderByAggregateInput
    _min?: TCHRONOMESSAGES_HEAT8MinOrderByAggregateInput
    _sum?: TCHRONOMESSAGES_HEAT8SumOrderByAggregateInput
  }

  export type TCHRONOMESSAGES_HEAT8ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT8ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT8ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT8ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER?: StringNullableWithAggregatesFilter | string | null
    C_CANAL?: StringNullableWithAggregatesFilter | string | null
    C_MESSAGE?: StringNullableWithAggregatesFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT9WhereInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT9WhereInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT9WhereInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT9WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_TRANSPONDER?: StringNullableFilter | string | null
    C_CANAL?: StringNullableFilter | string | null
    C_MESSAGE?: StringNullableFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT9OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT9WhereUniqueInput = {
    C_LINE?: number
  }

  export type TCHRONOMESSAGES_HEAT9OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
    _count?: TCHRONOMESSAGES_HEAT9CountOrderByAggregateInput
    _avg?: TCHRONOMESSAGES_HEAT9AvgOrderByAggregateInput
    _max?: TCHRONOMESSAGES_HEAT9MaxOrderByAggregateInput
    _min?: TCHRONOMESSAGES_HEAT9MinOrderByAggregateInput
    _sum?: TCHRONOMESSAGES_HEAT9SumOrderByAggregateInput
  }

  export type TCHRONOMESSAGES_HEAT9ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TCHRONOMESSAGES_HEAT9ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TCHRONOMESSAGES_HEAT9ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TCHRONOMESSAGES_HEAT9ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER?: StringNullableWithAggregatesFilter | string | null
    C_CANAL?: StringNullableWithAggregatesFilter | string | null
    C_MESSAGE?: StringNullableWithAggregatesFilter | string | null
  }

  export type TSTARTLIST_HEAT1WhereInput = {
    AND?: Enumerable<TSTARTLIST_HEAT1WhereInput>
    OR?: Enumerable<TSTARTLIST_HEAT1WhereInput>
    NOT?: Enumerable<TSTARTLIST_HEAT1WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_START?: IntNullableFilter | number | null
  }

  export type TSTARTLIST_HEAT1OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT1WhereUniqueInput = {
    C_LINE?: number
  }

  export type TSTARTLIST_HEAT1OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
    _count?: TSTARTLIST_HEAT1CountOrderByAggregateInput
    _avg?: TSTARTLIST_HEAT1AvgOrderByAggregateInput
    _max?: TSTARTLIST_HEAT1MaxOrderByAggregateInput
    _min?: TSTARTLIST_HEAT1MinOrderByAggregateInput
    _sum?: TSTARTLIST_HEAT1SumOrderByAggregateInput
  }

  export type TSTARTLIST_HEAT1ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TSTARTLIST_HEAT1ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TSTARTLIST_HEAT1ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TSTARTLIST_HEAT1ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_START?: IntNullableWithAggregatesFilter | number | null
  }

  export type TSTARTLIST_HEAT2WhereInput = {
    AND?: Enumerable<TSTARTLIST_HEAT2WhereInput>
    OR?: Enumerable<TSTARTLIST_HEAT2WhereInput>
    NOT?: Enumerable<TSTARTLIST_HEAT2WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_START?: IntNullableFilter | number | null
  }

  export type TSTARTLIST_HEAT2OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT2WhereUniqueInput = {
    C_LINE?: number
  }

  export type TSTARTLIST_HEAT2OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
    _count?: TSTARTLIST_HEAT2CountOrderByAggregateInput
    _avg?: TSTARTLIST_HEAT2AvgOrderByAggregateInput
    _max?: TSTARTLIST_HEAT2MaxOrderByAggregateInput
    _min?: TSTARTLIST_HEAT2MinOrderByAggregateInput
    _sum?: TSTARTLIST_HEAT2SumOrderByAggregateInput
  }

  export type TSTARTLIST_HEAT2ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TSTARTLIST_HEAT2ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TSTARTLIST_HEAT2ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TSTARTLIST_HEAT2ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_START?: IntNullableWithAggregatesFilter | number | null
  }

  export type TSTARTLIST_HEAT3WhereInput = {
    AND?: Enumerable<TSTARTLIST_HEAT3WhereInput>
    OR?: Enumerable<TSTARTLIST_HEAT3WhereInput>
    NOT?: Enumerable<TSTARTLIST_HEAT3WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_START?: IntNullableFilter | number | null
  }

  export type TSTARTLIST_HEAT3OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT3WhereUniqueInput = {
    C_LINE?: number
  }

  export type TSTARTLIST_HEAT3OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
    _count?: TSTARTLIST_HEAT3CountOrderByAggregateInput
    _avg?: TSTARTLIST_HEAT3AvgOrderByAggregateInput
    _max?: TSTARTLIST_HEAT3MaxOrderByAggregateInput
    _min?: TSTARTLIST_HEAT3MinOrderByAggregateInput
    _sum?: TSTARTLIST_HEAT3SumOrderByAggregateInput
  }

  export type TSTARTLIST_HEAT3ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TSTARTLIST_HEAT3ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TSTARTLIST_HEAT3ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TSTARTLIST_HEAT3ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_START?: IntNullableWithAggregatesFilter | number | null
  }

  export type TSTARTLIST_HEAT4WhereInput = {
    AND?: Enumerable<TSTARTLIST_HEAT4WhereInput>
    OR?: Enumerable<TSTARTLIST_HEAT4WhereInput>
    NOT?: Enumerable<TSTARTLIST_HEAT4WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_START?: IntNullableFilter | number | null
  }

  export type TSTARTLIST_HEAT4OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT4WhereUniqueInput = {
    C_LINE?: number
  }

  export type TSTARTLIST_HEAT4OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
    _count?: TSTARTLIST_HEAT4CountOrderByAggregateInput
    _avg?: TSTARTLIST_HEAT4AvgOrderByAggregateInput
    _max?: TSTARTLIST_HEAT4MaxOrderByAggregateInput
    _min?: TSTARTLIST_HEAT4MinOrderByAggregateInput
    _sum?: TSTARTLIST_HEAT4SumOrderByAggregateInput
  }

  export type TSTARTLIST_HEAT4ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TSTARTLIST_HEAT4ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TSTARTLIST_HEAT4ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TSTARTLIST_HEAT4ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_START?: IntNullableWithAggregatesFilter | number | null
  }

  export type TSTARTLIST_HEAT5WhereInput = {
    AND?: Enumerable<TSTARTLIST_HEAT5WhereInput>
    OR?: Enumerable<TSTARTLIST_HEAT5WhereInput>
    NOT?: Enumerable<TSTARTLIST_HEAT5WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_START?: IntNullableFilter | number | null
  }

  export type TSTARTLIST_HEAT5OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT5WhereUniqueInput = {
    C_LINE?: number
  }

  export type TSTARTLIST_HEAT5OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
    _count?: TSTARTLIST_HEAT5CountOrderByAggregateInput
    _avg?: TSTARTLIST_HEAT5AvgOrderByAggregateInput
    _max?: TSTARTLIST_HEAT5MaxOrderByAggregateInput
    _min?: TSTARTLIST_HEAT5MinOrderByAggregateInput
    _sum?: TSTARTLIST_HEAT5SumOrderByAggregateInput
  }

  export type TSTARTLIST_HEAT5ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TSTARTLIST_HEAT5ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TSTARTLIST_HEAT5ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TSTARTLIST_HEAT5ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_START?: IntNullableWithAggregatesFilter | number | null
  }

  export type TSTARTLIST_HEAT6WhereInput = {
    AND?: Enumerable<TSTARTLIST_HEAT6WhereInput>
    OR?: Enumerable<TSTARTLIST_HEAT6WhereInput>
    NOT?: Enumerable<TSTARTLIST_HEAT6WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_START?: IntNullableFilter | number | null
  }

  export type TSTARTLIST_HEAT6OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT6WhereUniqueInput = {
    C_LINE?: number
  }

  export type TSTARTLIST_HEAT6OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
    _count?: TSTARTLIST_HEAT6CountOrderByAggregateInput
    _avg?: TSTARTLIST_HEAT6AvgOrderByAggregateInput
    _max?: TSTARTLIST_HEAT6MaxOrderByAggregateInput
    _min?: TSTARTLIST_HEAT6MinOrderByAggregateInput
    _sum?: TSTARTLIST_HEAT6SumOrderByAggregateInput
  }

  export type TSTARTLIST_HEAT6ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TSTARTLIST_HEAT6ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TSTARTLIST_HEAT6ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TSTARTLIST_HEAT6ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_START?: IntNullableWithAggregatesFilter | number | null
  }

  export type TSTARTLIST_HEAT7WhereInput = {
    AND?: Enumerable<TSTARTLIST_HEAT7WhereInput>
    OR?: Enumerable<TSTARTLIST_HEAT7WhereInput>
    NOT?: Enumerable<TSTARTLIST_HEAT7WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_START?: IntNullableFilter | number | null
  }

  export type TSTARTLIST_HEAT7OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT7WhereUniqueInput = {
    C_LINE?: number
  }

  export type TSTARTLIST_HEAT7OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
    _count?: TSTARTLIST_HEAT7CountOrderByAggregateInput
    _avg?: TSTARTLIST_HEAT7AvgOrderByAggregateInput
    _max?: TSTARTLIST_HEAT7MaxOrderByAggregateInput
    _min?: TSTARTLIST_HEAT7MinOrderByAggregateInput
    _sum?: TSTARTLIST_HEAT7SumOrderByAggregateInput
  }

  export type TSTARTLIST_HEAT7ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TSTARTLIST_HEAT7ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TSTARTLIST_HEAT7ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TSTARTLIST_HEAT7ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_START?: IntNullableWithAggregatesFilter | number | null
  }

  export type TSTARTLIST_HEAT8WhereInput = {
    AND?: Enumerable<TSTARTLIST_HEAT8WhereInput>
    OR?: Enumerable<TSTARTLIST_HEAT8WhereInput>
    NOT?: Enumerable<TSTARTLIST_HEAT8WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_START?: IntNullableFilter | number | null
  }

  export type TSTARTLIST_HEAT8OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT8WhereUniqueInput = {
    C_LINE?: number
  }

  export type TSTARTLIST_HEAT8OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
    _count?: TSTARTLIST_HEAT8CountOrderByAggregateInput
    _avg?: TSTARTLIST_HEAT8AvgOrderByAggregateInput
    _max?: TSTARTLIST_HEAT8MaxOrderByAggregateInput
    _min?: TSTARTLIST_HEAT8MinOrderByAggregateInput
    _sum?: TSTARTLIST_HEAT8SumOrderByAggregateInput
  }

  export type TSTARTLIST_HEAT8ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TSTARTLIST_HEAT8ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TSTARTLIST_HEAT8ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TSTARTLIST_HEAT8ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_START?: IntNullableWithAggregatesFilter | number | null
  }

  export type TSTARTLIST_HEAT9WhereInput = {
    AND?: Enumerable<TSTARTLIST_HEAT9WhereInput>
    OR?: Enumerable<TSTARTLIST_HEAT9WhereInput>
    NOT?: Enumerable<TSTARTLIST_HEAT9WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_START?: IntNullableFilter | number | null
  }

  export type TSTARTLIST_HEAT9OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT9WhereUniqueInput = {
    C_LINE?: number
  }

  export type TSTARTLIST_HEAT9OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
    _count?: TSTARTLIST_HEAT9CountOrderByAggregateInput
    _avg?: TSTARTLIST_HEAT9AvgOrderByAggregateInput
    _max?: TSTARTLIST_HEAT9MaxOrderByAggregateInput
    _min?: TSTARTLIST_HEAT9MinOrderByAggregateInput
    _sum?: TSTARTLIST_HEAT9SumOrderByAggregateInput
  }

  export type TSTARTLIST_HEAT9ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TSTARTLIST_HEAT9ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TSTARTLIST_HEAT9ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TSTARTLIST_HEAT9ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_START?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMEINFOS_HEAT1WhereInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT1WhereInput>
    OR?: Enumerable<TTIMEINFOS_HEAT1WhereInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT1WhereInput>
    C_NUM?: IntFilter | number
    C_STATUS?: IntNullableFilter | number | null
    C_TIME?: IntNullableFilter | number | null
    C_PENALTY?: IntNullableFilter | number | null
    C_INTER1?: IntNullableFilter | number | null
    C_INTER2?: IntNullableFilter | number | null
    C_INTER3?: IntNullableFilter | number | null
    C_INTER4?: IntNullableFilter | number | null
    C_INTER5?: IntNullableFilter | number | null
    C_INTER6?: IntNullableFilter | number | null
    C_INTER7?: IntNullableFilter | number | null
    C_INTER8?: IntNullableFilter | number | null
    C_INTER9?: IntNullableFilter | number | null
    C_SPEED1?: IntNullableFilter | number | null
    C_SPEED2?: IntNullableFilter | number | null
    C_SPEED3?: IntNullableFilter | number | null
    C_SPEED4?: IntNullableFilter | number | null
    C_SPEED5?: IntNullableFilter | number | null
    C_SPEED6?: IntNullableFilter | number | null
    C_SPEED7?: IntNullableFilter | number | null
    C_SPEED8?: IntNullableFilter | number | null
    C_SPEED9?: IntNullableFilter | number | null
    C_DATA1?: IntNullableFilter | number | null
    C_DATA2?: IntNullableFilter | number | null
    C_DATA3?: IntNullableFilter | number | null
    C_DATA4?: IntNullableFilter | number | null
    C_DATA5?: IntNullableFilter | number | null
    C_DATA6?: IntNullableFilter | number | null
    C_DATA7?: IntNullableFilter | number | null
    C_DATA8?: IntNullableFilter | number | null
    C_REASON?: StringNullableFilter | string | null
  }

  export type TTIMEINFOS_HEAT1OrderByWithRelationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT1WhereUniqueInput = {
    C_NUM?: number
  }

  export type TTIMEINFOS_HEAT1OrderByWithAggregationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
    _count?: TTIMEINFOS_HEAT1CountOrderByAggregateInput
    _avg?: TTIMEINFOS_HEAT1AvgOrderByAggregateInput
    _max?: TTIMEINFOS_HEAT1MaxOrderByAggregateInput
    _min?: TTIMEINFOS_HEAT1MinOrderByAggregateInput
    _sum?: TTIMEINFOS_HEAT1SumOrderByAggregateInput
  }

  export type TTIMEINFOS_HEAT1ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT1ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMEINFOS_HEAT1ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT1ScalarWhereWithAggregatesInput>
    C_NUM?: IntWithAggregatesFilter | number
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TIME?: IntNullableWithAggregatesFilter | number | null
    C_PENALTY?: IntNullableWithAggregatesFilter | number | null
    C_INTER1?: IntNullableWithAggregatesFilter | number | null
    C_INTER2?: IntNullableWithAggregatesFilter | number | null
    C_INTER3?: IntNullableWithAggregatesFilter | number | null
    C_INTER4?: IntNullableWithAggregatesFilter | number | null
    C_INTER5?: IntNullableWithAggregatesFilter | number | null
    C_INTER6?: IntNullableWithAggregatesFilter | number | null
    C_INTER7?: IntNullableWithAggregatesFilter | number | null
    C_INTER8?: IntNullableWithAggregatesFilter | number | null
    C_INTER9?: IntNullableWithAggregatesFilter | number | null
    C_SPEED1?: IntNullableWithAggregatesFilter | number | null
    C_SPEED2?: IntNullableWithAggregatesFilter | number | null
    C_SPEED3?: IntNullableWithAggregatesFilter | number | null
    C_SPEED4?: IntNullableWithAggregatesFilter | number | null
    C_SPEED5?: IntNullableWithAggregatesFilter | number | null
    C_SPEED6?: IntNullableWithAggregatesFilter | number | null
    C_SPEED7?: IntNullableWithAggregatesFilter | number | null
    C_SPEED8?: IntNullableWithAggregatesFilter | number | null
    C_SPEED9?: IntNullableWithAggregatesFilter | number | null
    C_DATA1?: IntNullableWithAggregatesFilter | number | null
    C_DATA2?: IntNullableWithAggregatesFilter | number | null
    C_DATA3?: IntNullableWithAggregatesFilter | number | null
    C_DATA4?: IntNullableWithAggregatesFilter | number | null
    C_DATA5?: IntNullableWithAggregatesFilter | number | null
    C_DATA6?: IntNullableWithAggregatesFilter | number | null
    C_DATA7?: IntNullableWithAggregatesFilter | number | null
    C_DATA8?: IntNullableWithAggregatesFilter | number | null
    C_REASON?: StringNullableWithAggregatesFilter | string | null
  }

  export type TTIMEINFOS_HEAT2WhereInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT2WhereInput>
    OR?: Enumerable<TTIMEINFOS_HEAT2WhereInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT2WhereInput>
    C_NUM?: IntFilter | number
    C_STATUS?: IntNullableFilter | number | null
    C_TIME?: IntNullableFilter | number | null
    C_PENALTY?: IntNullableFilter | number | null
    C_INTER1?: IntNullableFilter | number | null
    C_INTER2?: IntNullableFilter | number | null
    C_INTER3?: IntNullableFilter | number | null
    C_INTER4?: IntNullableFilter | number | null
    C_INTER5?: IntNullableFilter | number | null
    C_INTER6?: IntNullableFilter | number | null
    C_INTER7?: IntNullableFilter | number | null
    C_INTER8?: IntNullableFilter | number | null
    C_INTER9?: IntNullableFilter | number | null
    C_SPEED1?: IntNullableFilter | number | null
    C_SPEED2?: IntNullableFilter | number | null
    C_SPEED3?: IntNullableFilter | number | null
    C_SPEED4?: IntNullableFilter | number | null
    C_SPEED5?: IntNullableFilter | number | null
    C_SPEED6?: IntNullableFilter | number | null
    C_SPEED7?: IntNullableFilter | number | null
    C_SPEED8?: IntNullableFilter | number | null
    C_SPEED9?: IntNullableFilter | number | null
    C_DATA1?: IntNullableFilter | number | null
    C_DATA2?: IntNullableFilter | number | null
    C_DATA3?: IntNullableFilter | number | null
    C_DATA4?: IntNullableFilter | number | null
    C_DATA5?: IntNullableFilter | number | null
    C_DATA6?: IntNullableFilter | number | null
    C_DATA7?: IntNullableFilter | number | null
    C_DATA8?: IntNullableFilter | number | null
    C_REASON?: StringNullableFilter | string | null
  }

  export type TTIMEINFOS_HEAT2OrderByWithRelationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT2WhereUniqueInput = {
    C_NUM?: number
  }

  export type TTIMEINFOS_HEAT2OrderByWithAggregationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
    _count?: TTIMEINFOS_HEAT2CountOrderByAggregateInput
    _avg?: TTIMEINFOS_HEAT2AvgOrderByAggregateInput
    _max?: TTIMEINFOS_HEAT2MaxOrderByAggregateInput
    _min?: TTIMEINFOS_HEAT2MinOrderByAggregateInput
    _sum?: TTIMEINFOS_HEAT2SumOrderByAggregateInput
  }

  export type TTIMEINFOS_HEAT2ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT2ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMEINFOS_HEAT2ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT2ScalarWhereWithAggregatesInput>
    C_NUM?: IntWithAggregatesFilter | number
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TIME?: IntNullableWithAggregatesFilter | number | null
    C_PENALTY?: IntNullableWithAggregatesFilter | number | null
    C_INTER1?: IntNullableWithAggregatesFilter | number | null
    C_INTER2?: IntNullableWithAggregatesFilter | number | null
    C_INTER3?: IntNullableWithAggregatesFilter | number | null
    C_INTER4?: IntNullableWithAggregatesFilter | number | null
    C_INTER5?: IntNullableWithAggregatesFilter | number | null
    C_INTER6?: IntNullableWithAggregatesFilter | number | null
    C_INTER7?: IntNullableWithAggregatesFilter | number | null
    C_INTER8?: IntNullableWithAggregatesFilter | number | null
    C_INTER9?: IntNullableWithAggregatesFilter | number | null
    C_SPEED1?: IntNullableWithAggregatesFilter | number | null
    C_SPEED2?: IntNullableWithAggregatesFilter | number | null
    C_SPEED3?: IntNullableWithAggregatesFilter | number | null
    C_SPEED4?: IntNullableWithAggregatesFilter | number | null
    C_SPEED5?: IntNullableWithAggregatesFilter | number | null
    C_SPEED6?: IntNullableWithAggregatesFilter | number | null
    C_SPEED7?: IntNullableWithAggregatesFilter | number | null
    C_SPEED8?: IntNullableWithAggregatesFilter | number | null
    C_SPEED9?: IntNullableWithAggregatesFilter | number | null
    C_DATA1?: IntNullableWithAggregatesFilter | number | null
    C_DATA2?: IntNullableWithAggregatesFilter | number | null
    C_DATA3?: IntNullableWithAggregatesFilter | number | null
    C_DATA4?: IntNullableWithAggregatesFilter | number | null
    C_DATA5?: IntNullableWithAggregatesFilter | number | null
    C_DATA6?: IntNullableWithAggregatesFilter | number | null
    C_DATA7?: IntNullableWithAggregatesFilter | number | null
    C_DATA8?: IntNullableWithAggregatesFilter | number | null
    C_REASON?: StringNullableWithAggregatesFilter | string | null
  }

  export type TTIMEINFOS_HEAT3WhereInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT3WhereInput>
    OR?: Enumerable<TTIMEINFOS_HEAT3WhereInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT3WhereInput>
    C_NUM?: IntFilter | number
    C_STATUS?: IntNullableFilter | number | null
    C_TIME?: IntNullableFilter | number | null
    C_PENALTY?: IntNullableFilter | number | null
    C_INTER1?: IntNullableFilter | number | null
    C_INTER2?: IntNullableFilter | number | null
    C_INTER3?: IntNullableFilter | number | null
    C_INTER4?: IntNullableFilter | number | null
    C_INTER5?: IntNullableFilter | number | null
    C_INTER6?: IntNullableFilter | number | null
    C_INTER7?: IntNullableFilter | number | null
    C_INTER8?: IntNullableFilter | number | null
    C_INTER9?: IntNullableFilter | number | null
    C_SPEED1?: IntNullableFilter | number | null
    C_SPEED2?: IntNullableFilter | number | null
    C_SPEED3?: IntNullableFilter | number | null
    C_SPEED4?: IntNullableFilter | number | null
    C_SPEED5?: IntNullableFilter | number | null
    C_SPEED6?: IntNullableFilter | number | null
    C_SPEED7?: IntNullableFilter | number | null
    C_SPEED8?: IntNullableFilter | number | null
    C_SPEED9?: IntNullableFilter | number | null
    C_DATA1?: IntNullableFilter | number | null
    C_DATA2?: IntNullableFilter | number | null
    C_DATA3?: IntNullableFilter | number | null
    C_DATA4?: IntNullableFilter | number | null
    C_DATA5?: IntNullableFilter | number | null
    C_DATA6?: IntNullableFilter | number | null
    C_DATA7?: IntNullableFilter | number | null
    C_DATA8?: IntNullableFilter | number | null
    C_REASON?: StringNullableFilter | string | null
  }

  export type TTIMEINFOS_HEAT3OrderByWithRelationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT3WhereUniqueInput = {
    C_NUM?: number
  }

  export type TTIMEINFOS_HEAT3OrderByWithAggregationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
    _count?: TTIMEINFOS_HEAT3CountOrderByAggregateInput
    _avg?: TTIMEINFOS_HEAT3AvgOrderByAggregateInput
    _max?: TTIMEINFOS_HEAT3MaxOrderByAggregateInput
    _min?: TTIMEINFOS_HEAT3MinOrderByAggregateInput
    _sum?: TTIMEINFOS_HEAT3SumOrderByAggregateInput
  }

  export type TTIMEINFOS_HEAT3ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT3ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMEINFOS_HEAT3ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT3ScalarWhereWithAggregatesInput>
    C_NUM?: IntWithAggregatesFilter | number
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TIME?: IntNullableWithAggregatesFilter | number | null
    C_PENALTY?: IntNullableWithAggregatesFilter | number | null
    C_INTER1?: IntNullableWithAggregatesFilter | number | null
    C_INTER2?: IntNullableWithAggregatesFilter | number | null
    C_INTER3?: IntNullableWithAggregatesFilter | number | null
    C_INTER4?: IntNullableWithAggregatesFilter | number | null
    C_INTER5?: IntNullableWithAggregatesFilter | number | null
    C_INTER6?: IntNullableWithAggregatesFilter | number | null
    C_INTER7?: IntNullableWithAggregatesFilter | number | null
    C_INTER8?: IntNullableWithAggregatesFilter | number | null
    C_INTER9?: IntNullableWithAggregatesFilter | number | null
    C_SPEED1?: IntNullableWithAggregatesFilter | number | null
    C_SPEED2?: IntNullableWithAggregatesFilter | number | null
    C_SPEED3?: IntNullableWithAggregatesFilter | number | null
    C_SPEED4?: IntNullableWithAggregatesFilter | number | null
    C_SPEED5?: IntNullableWithAggregatesFilter | number | null
    C_SPEED6?: IntNullableWithAggregatesFilter | number | null
    C_SPEED7?: IntNullableWithAggregatesFilter | number | null
    C_SPEED8?: IntNullableWithAggregatesFilter | number | null
    C_SPEED9?: IntNullableWithAggregatesFilter | number | null
    C_DATA1?: IntNullableWithAggregatesFilter | number | null
    C_DATA2?: IntNullableWithAggregatesFilter | number | null
    C_DATA3?: IntNullableWithAggregatesFilter | number | null
    C_DATA4?: IntNullableWithAggregatesFilter | number | null
    C_DATA5?: IntNullableWithAggregatesFilter | number | null
    C_DATA6?: IntNullableWithAggregatesFilter | number | null
    C_DATA7?: IntNullableWithAggregatesFilter | number | null
    C_DATA8?: IntNullableWithAggregatesFilter | number | null
    C_REASON?: StringNullableWithAggregatesFilter | string | null
  }

  export type TTIMEINFOS_HEAT4WhereInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT4WhereInput>
    OR?: Enumerable<TTIMEINFOS_HEAT4WhereInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT4WhereInput>
    C_NUM?: IntFilter | number
    C_STATUS?: IntNullableFilter | number | null
    C_TIME?: IntNullableFilter | number | null
    C_PENALTY?: IntNullableFilter | number | null
    C_INTER1?: IntNullableFilter | number | null
    C_INTER2?: IntNullableFilter | number | null
    C_INTER3?: IntNullableFilter | number | null
    C_INTER4?: IntNullableFilter | number | null
    C_INTER5?: IntNullableFilter | number | null
    C_INTER6?: IntNullableFilter | number | null
    C_INTER7?: IntNullableFilter | number | null
    C_INTER8?: IntNullableFilter | number | null
    C_INTER9?: IntNullableFilter | number | null
    C_SPEED1?: IntNullableFilter | number | null
    C_SPEED2?: IntNullableFilter | number | null
    C_SPEED3?: IntNullableFilter | number | null
    C_SPEED4?: IntNullableFilter | number | null
    C_SPEED5?: IntNullableFilter | number | null
    C_SPEED6?: IntNullableFilter | number | null
    C_SPEED7?: IntNullableFilter | number | null
    C_SPEED8?: IntNullableFilter | number | null
    C_SPEED9?: IntNullableFilter | number | null
    C_DATA1?: IntNullableFilter | number | null
    C_DATA2?: IntNullableFilter | number | null
    C_DATA3?: IntNullableFilter | number | null
    C_DATA4?: IntNullableFilter | number | null
    C_DATA5?: IntNullableFilter | number | null
    C_DATA6?: IntNullableFilter | number | null
    C_DATA7?: IntNullableFilter | number | null
    C_DATA8?: IntNullableFilter | number | null
    C_REASON?: StringNullableFilter | string | null
  }

  export type TTIMEINFOS_HEAT4OrderByWithRelationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT4WhereUniqueInput = {
    C_NUM?: number
  }

  export type TTIMEINFOS_HEAT4OrderByWithAggregationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
    _count?: TTIMEINFOS_HEAT4CountOrderByAggregateInput
    _avg?: TTIMEINFOS_HEAT4AvgOrderByAggregateInput
    _max?: TTIMEINFOS_HEAT4MaxOrderByAggregateInput
    _min?: TTIMEINFOS_HEAT4MinOrderByAggregateInput
    _sum?: TTIMEINFOS_HEAT4SumOrderByAggregateInput
  }

  export type TTIMEINFOS_HEAT4ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT4ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMEINFOS_HEAT4ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT4ScalarWhereWithAggregatesInput>
    C_NUM?: IntWithAggregatesFilter | number
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TIME?: IntNullableWithAggregatesFilter | number | null
    C_PENALTY?: IntNullableWithAggregatesFilter | number | null
    C_INTER1?: IntNullableWithAggregatesFilter | number | null
    C_INTER2?: IntNullableWithAggregatesFilter | number | null
    C_INTER3?: IntNullableWithAggregatesFilter | number | null
    C_INTER4?: IntNullableWithAggregatesFilter | number | null
    C_INTER5?: IntNullableWithAggregatesFilter | number | null
    C_INTER6?: IntNullableWithAggregatesFilter | number | null
    C_INTER7?: IntNullableWithAggregatesFilter | number | null
    C_INTER8?: IntNullableWithAggregatesFilter | number | null
    C_INTER9?: IntNullableWithAggregatesFilter | number | null
    C_SPEED1?: IntNullableWithAggregatesFilter | number | null
    C_SPEED2?: IntNullableWithAggregatesFilter | number | null
    C_SPEED3?: IntNullableWithAggregatesFilter | number | null
    C_SPEED4?: IntNullableWithAggregatesFilter | number | null
    C_SPEED5?: IntNullableWithAggregatesFilter | number | null
    C_SPEED6?: IntNullableWithAggregatesFilter | number | null
    C_SPEED7?: IntNullableWithAggregatesFilter | number | null
    C_SPEED8?: IntNullableWithAggregatesFilter | number | null
    C_SPEED9?: IntNullableWithAggregatesFilter | number | null
    C_DATA1?: IntNullableWithAggregatesFilter | number | null
    C_DATA2?: IntNullableWithAggregatesFilter | number | null
    C_DATA3?: IntNullableWithAggregatesFilter | number | null
    C_DATA4?: IntNullableWithAggregatesFilter | number | null
    C_DATA5?: IntNullableWithAggregatesFilter | number | null
    C_DATA6?: IntNullableWithAggregatesFilter | number | null
    C_DATA7?: IntNullableWithAggregatesFilter | number | null
    C_DATA8?: IntNullableWithAggregatesFilter | number | null
    C_REASON?: StringNullableWithAggregatesFilter | string | null
  }

  export type TTIMEINFOS_HEAT5WhereInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT5WhereInput>
    OR?: Enumerable<TTIMEINFOS_HEAT5WhereInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT5WhereInput>
    C_NUM?: IntFilter | number
    C_STATUS?: IntNullableFilter | number | null
    C_TIME?: IntNullableFilter | number | null
    C_PENALTY?: IntNullableFilter | number | null
    C_INTER1?: IntNullableFilter | number | null
    C_INTER2?: IntNullableFilter | number | null
    C_INTER3?: IntNullableFilter | number | null
    C_INTER4?: IntNullableFilter | number | null
    C_INTER5?: IntNullableFilter | number | null
    C_INTER6?: IntNullableFilter | number | null
    C_INTER7?: IntNullableFilter | number | null
    C_INTER8?: IntNullableFilter | number | null
    C_INTER9?: IntNullableFilter | number | null
    C_SPEED1?: IntNullableFilter | number | null
    C_SPEED2?: IntNullableFilter | number | null
    C_SPEED3?: IntNullableFilter | number | null
    C_SPEED4?: IntNullableFilter | number | null
    C_SPEED5?: IntNullableFilter | number | null
    C_SPEED6?: IntNullableFilter | number | null
    C_SPEED7?: IntNullableFilter | number | null
    C_SPEED8?: IntNullableFilter | number | null
    C_SPEED9?: IntNullableFilter | number | null
    C_DATA1?: IntNullableFilter | number | null
    C_DATA2?: IntNullableFilter | number | null
    C_DATA3?: IntNullableFilter | number | null
    C_DATA4?: IntNullableFilter | number | null
    C_DATA5?: IntNullableFilter | number | null
    C_DATA6?: IntNullableFilter | number | null
    C_DATA7?: IntNullableFilter | number | null
    C_DATA8?: IntNullableFilter | number | null
    C_REASON?: StringNullableFilter | string | null
  }

  export type TTIMEINFOS_HEAT5OrderByWithRelationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT5WhereUniqueInput = {
    C_NUM?: number
  }

  export type TTIMEINFOS_HEAT5OrderByWithAggregationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
    _count?: TTIMEINFOS_HEAT5CountOrderByAggregateInput
    _avg?: TTIMEINFOS_HEAT5AvgOrderByAggregateInput
    _max?: TTIMEINFOS_HEAT5MaxOrderByAggregateInput
    _min?: TTIMEINFOS_HEAT5MinOrderByAggregateInput
    _sum?: TTIMEINFOS_HEAT5SumOrderByAggregateInput
  }

  export type TTIMEINFOS_HEAT5ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT5ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMEINFOS_HEAT5ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT5ScalarWhereWithAggregatesInput>
    C_NUM?: IntWithAggregatesFilter | number
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TIME?: IntNullableWithAggregatesFilter | number | null
    C_PENALTY?: IntNullableWithAggregatesFilter | number | null
    C_INTER1?: IntNullableWithAggregatesFilter | number | null
    C_INTER2?: IntNullableWithAggregatesFilter | number | null
    C_INTER3?: IntNullableWithAggregatesFilter | number | null
    C_INTER4?: IntNullableWithAggregatesFilter | number | null
    C_INTER5?: IntNullableWithAggregatesFilter | number | null
    C_INTER6?: IntNullableWithAggregatesFilter | number | null
    C_INTER7?: IntNullableWithAggregatesFilter | number | null
    C_INTER8?: IntNullableWithAggregatesFilter | number | null
    C_INTER9?: IntNullableWithAggregatesFilter | number | null
    C_SPEED1?: IntNullableWithAggregatesFilter | number | null
    C_SPEED2?: IntNullableWithAggregatesFilter | number | null
    C_SPEED3?: IntNullableWithAggregatesFilter | number | null
    C_SPEED4?: IntNullableWithAggregatesFilter | number | null
    C_SPEED5?: IntNullableWithAggregatesFilter | number | null
    C_SPEED6?: IntNullableWithAggregatesFilter | number | null
    C_SPEED7?: IntNullableWithAggregatesFilter | number | null
    C_SPEED8?: IntNullableWithAggregatesFilter | number | null
    C_SPEED9?: IntNullableWithAggregatesFilter | number | null
    C_DATA1?: IntNullableWithAggregatesFilter | number | null
    C_DATA2?: IntNullableWithAggregatesFilter | number | null
    C_DATA3?: IntNullableWithAggregatesFilter | number | null
    C_DATA4?: IntNullableWithAggregatesFilter | number | null
    C_DATA5?: IntNullableWithAggregatesFilter | number | null
    C_DATA6?: IntNullableWithAggregatesFilter | number | null
    C_DATA7?: IntNullableWithAggregatesFilter | number | null
    C_DATA8?: IntNullableWithAggregatesFilter | number | null
    C_REASON?: StringNullableWithAggregatesFilter | string | null
  }

  export type TTIMEINFOS_HEAT6WhereInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT6WhereInput>
    OR?: Enumerable<TTIMEINFOS_HEAT6WhereInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT6WhereInput>
    C_NUM?: IntFilter | number
    C_STATUS?: IntNullableFilter | number | null
    C_TIME?: IntNullableFilter | number | null
    C_PENALTY?: IntNullableFilter | number | null
    C_INTER1?: IntNullableFilter | number | null
    C_INTER2?: IntNullableFilter | number | null
    C_INTER3?: IntNullableFilter | number | null
    C_INTER4?: IntNullableFilter | number | null
    C_INTER5?: IntNullableFilter | number | null
    C_INTER6?: IntNullableFilter | number | null
    C_INTER7?: IntNullableFilter | number | null
    C_INTER8?: IntNullableFilter | number | null
    C_INTER9?: IntNullableFilter | number | null
    C_SPEED1?: IntNullableFilter | number | null
    C_SPEED2?: IntNullableFilter | number | null
    C_SPEED3?: IntNullableFilter | number | null
    C_SPEED4?: IntNullableFilter | number | null
    C_SPEED5?: IntNullableFilter | number | null
    C_SPEED6?: IntNullableFilter | number | null
    C_SPEED7?: IntNullableFilter | number | null
    C_SPEED8?: IntNullableFilter | number | null
    C_SPEED9?: IntNullableFilter | number | null
    C_DATA1?: IntNullableFilter | number | null
    C_DATA2?: IntNullableFilter | number | null
    C_DATA3?: IntNullableFilter | number | null
    C_DATA4?: IntNullableFilter | number | null
    C_DATA5?: IntNullableFilter | number | null
    C_DATA6?: IntNullableFilter | number | null
    C_DATA7?: IntNullableFilter | number | null
    C_DATA8?: IntNullableFilter | number | null
    C_REASON?: StringNullableFilter | string | null
  }

  export type TTIMEINFOS_HEAT6OrderByWithRelationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT6WhereUniqueInput = {
    C_NUM?: number
  }

  export type TTIMEINFOS_HEAT6OrderByWithAggregationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
    _count?: TTIMEINFOS_HEAT6CountOrderByAggregateInput
    _avg?: TTIMEINFOS_HEAT6AvgOrderByAggregateInput
    _max?: TTIMEINFOS_HEAT6MaxOrderByAggregateInput
    _min?: TTIMEINFOS_HEAT6MinOrderByAggregateInput
    _sum?: TTIMEINFOS_HEAT6SumOrderByAggregateInput
  }

  export type TTIMEINFOS_HEAT6ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT6ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMEINFOS_HEAT6ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT6ScalarWhereWithAggregatesInput>
    C_NUM?: IntWithAggregatesFilter | number
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TIME?: IntNullableWithAggregatesFilter | number | null
    C_PENALTY?: IntNullableWithAggregatesFilter | number | null
    C_INTER1?: IntNullableWithAggregatesFilter | number | null
    C_INTER2?: IntNullableWithAggregatesFilter | number | null
    C_INTER3?: IntNullableWithAggregatesFilter | number | null
    C_INTER4?: IntNullableWithAggregatesFilter | number | null
    C_INTER5?: IntNullableWithAggregatesFilter | number | null
    C_INTER6?: IntNullableWithAggregatesFilter | number | null
    C_INTER7?: IntNullableWithAggregatesFilter | number | null
    C_INTER8?: IntNullableWithAggregatesFilter | number | null
    C_INTER9?: IntNullableWithAggregatesFilter | number | null
    C_SPEED1?: IntNullableWithAggregatesFilter | number | null
    C_SPEED2?: IntNullableWithAggregatesFilter | number | null
    C_SPEED3?: IntNullableWithAggregatesFilter | number | null
    C_SPEED4?: IntNullableWithAggregatesFilter | number | null
    C_SPEED5?: IntNullableWithAggregatesFilter | number | null
    C_SPEED6?: IntNullableWithAggregatesFilter | number | null
    C_SPEED7?: IntNullableWithAggregatesFilter | number | null
    C_SPEED8?: IntNullableWithAggregatesFilter | number | null
    C_SPEED9?: IntNullableWithAggregatesFilter | number | null
    C_DATA1?: IntNullableWithAggregatesFilter | number | null
    C_DATA2?: IntNullableWithAggregatesFilter | number | null
    C_DATA3?: IntNullableWithAggregatesFilter | number | null
    C_DATA4?: IntNullableWithAggregatesFilter | number | null
    C_DATA5?: IntNullableWithAggregatesFilter | number | null
    C_DATA6?: IntNullableWithAggregatesFilter | number | null
    C_DATA7?: IntNullableWithAggregatesFilter | number | null
    C_DATA8?: IntNullableWithAggregatesFilter | number | null
    C_REASON?: StringNullableWithAggregatesFilter | string | null
  }

  export type TTIMEINFOS_HEAT7WhereInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT7WhereInput>
    OR?: Enumerable<TTIMEINFOS_HEAT7WhereInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT7WhereInput>
    C_NUM?: IntFilter | number
    C_STATUS?: IntNullableFilter | number | null
    C_TIME?: IntNullableFilter | number | null
    C_PENALTY?: IntNullableFilter | number | null
    C_INTER1?: IntNullableFilter | number | null
    C_INTER2?: IntNullableFilter | number | null
    C_INTER3?: IntNullableFilter | number | null
    C_INTER4?: IntNullableFilter | number | null
    C_INTER5?: IntNullableFilter | number | null
    C_INTER6?: IntNullableFilter | number | null
    C_INTER7?: IntNullableFilter | number | null
    C_INTER8?: IntNullableFilter | number | null
    C_INTER9?: IntNullableFilter | number | null
    C_SPEED1?: IntNullableFilter | number | null
    C_SPEED2?: IntNullableFilter | number | null
    C_SPEED3?: IntNullableFilter | number | null
    C_SPEED4?: IntNullableFilter | number | null
    C_SPEED5?: IntNullableFilter | number | null
    C_SPEED6?: IntNullableFilter | number | null
    C_SPEED7?: IntNullableFilter | number | null
    C_SPEED8?: IntNullableFilter | number | null
    C_SPEED9?: IntNullableFilter | number | null
    C_DATA1?: IntNullableFilter | number | null
    C_DATA2?: IntNullableFilter | number | null
    C_DATA3?: IntNullableFilter | number | null
    C_DATA4?: IntNullableFilter | number | null
    C_DATA5?: IntNullableFilter | number | null
    C_DATA6?: IntNullableFilter | number | null
    C_DATA7?: IntNullableFilter | number | null
    C_DATA8?: IntNullableFilter | number | null
    C_REASON?: StringNullableFilter | string | null
  }

  export type TTIMEINFOS_HEAT7OrderByWithRelationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT7WhereUniqueInput = {
    C_NUM?: number
  }

  export type TTIMEINFOS_HEAT7OrderByWithAggregationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
    _count?: TTIMEINFOS_HEAT7CountOrderByAggregateInput
    _avg?: TTIMEINFOS_HEAT7AvgOrderByAggregateInput
    _max?: TTIMEINFOS_HEAT7MaxOrderByAggregateInput
    _min?: TTIMEINFOS_HEAT7MinOrderByAggregateInput
    _sum?: TTIMEINFOS_HEAT7SumOrderByAggregateInput
  }

  export type TTIMEINFOS_HEAT7ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT7ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMEINFOS_HEAT7ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT7ScalarWhereWithAggregatesInput>
    C_NUM?: IntWithAggregatesFilter | number
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TIME?: IntNullableWithAggregatesFilter | number | null
    C_PENALTY?: IntNullableWithAggregatesFilter | number | null
    C_INTER1?: IntNullableWithAggregatesFilter | number | null
    C_INTER2?: IntNullableWithAggregatesFilter | number | null
    C_INTER3?: IntNullableWithAggregatesFilter | number | null
    C_INTER4?: IntNullableWithAggregatesFilter | number | null
    C_INTER5?: IntNullableWithAggregatesFilter | number | null
    C_INTER6?: IntNullableWithAggregatesFilter | number | null
    C_INTER7?: IntNullableWithAggregatesFilter | number | null
    C_INTER8?: IntNullableWithAggregatesFilter | number | null
    C_INTER9?: IntNullableWithAggregatesFilter | number | null
    C_SPEED1?: IntNullableWithAggregatesFilter | number | null
    C_SPEED2?: IntNullableWithAggregatesFilter | number | null
    C_SPEED3?: IntNullableWithAggregatesFilter | number | null
    C_SPEED4?: IntNullableWithAggregatesFilter | number | null
    C_SPEED5?: IntNullableWithAggregatesFilter | number | null
    C_SPEED6?: IntNullableWithAggregatesFilter | number | null
    C_SPEED7?: IntNullableWithAggregatesFilter | number | null
    C_SPEED8?: IntNullableWithAggregatesFilter | number | null
    C_SPEED9?: IntNullableWithAggregatesFilter | number | null
    C_DATA1?: IntNullableWithAggregatesFilter | number | null
    C_DATA2?: IntNullableWithAggregatesFilter | number | null
    C_DATA3?: IntNullableWithAggregatesFilter | number | null
    C_DATA4?: IntNullableWithAggregatesFilter | number | null
    C_DATA5?: IntNullableWithAggregatesFilter | number | null
    C_DATA6?: IntNullableWithAggregatesFilter | number | null
    C_DATA7?: IntNullableWithAggregatesFilter | number | null
    C_DATA8?: IntNullableWithAggregatesFilter | number | null
    C_REASON?: StringNullableWithAggregatesFilter | string | null
  }

  export type TTIMEINFOS_HEAT8WhereInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT8WhereInput>
    OR?: Enumerable<TTIMEINFOS_HEAT8WhereInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT8WhereInput>
    C_NUM?: IntFilter | number
    C_STATUS?: IntNullableFilter | number | null
    C_TIME?: IntNullableFilter | number | null
    C_PENALTY?: IntNullableFilter | number | null
    C_INTER1?: IntNullableFilter | number | null
    C_INTER2?: IntNullableFilter | number | null
    C_INTER3?: IntNullableFilter | number | null
    C_INTER4?: IntNullableFilter | number | null
    C_INTER5?: IntNullableFilter | number | null
    C_INTER6?: IntNullableFilter | number | null
    C_INTER7?: IntNullableFilter | number | null
    C_INTER8?: IntNullableFilter | number | null
    C_INTER9?: IntNullableFilter | number | null
    C_SPEED1?: IntNullableFilter | number | null
    C_SPEED2?: IntNullableFilter | number | null
    C_SPEED3?: IntNullableFilter | number | null
    C_SPEED4?: IntNullableFilter | number | null
    C_SPEED5?: IntNullableFilter | number | null
    C_SPEED6?: IntNullableFilter | number | null
    C_SPEED7?: IntNullableFilter | number | null
    C_SPEED8?: IntNullableFilter | number | null
    C_SPEED9?: IntNullableFilter | number | null
    C_DATA1?: IntNullableFilter | number | null
    C_DATA2?: IntNullableFilter | number | null
    C_DATA3?: IntNullableFilter | number | null
    C_DATA4?: IntNullableFilter | number | null
    C_DATA5?: IntNullableFilter | number | null
    C_DATA6?: IntNullableFilter | number | null
    C_DATA7?: IntNullableFilter | number | null
    C_DATA8?: IntNullableFilter | number | null
    C_REASON?: StringNullableFilter | string | null
  }

  export type TTIMEINFOS_HEAT8OrderByWithRelationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT8WhereUniqueInput = {
    C_NUM?: number
  }

  export type TTIMEINFOS_HEAT8OrderByWithAggregationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
    _count?: TTIMEINFOS_HEAT8CountOrderByAggregateInput
    _avg?: TTIMEINFOS_HEAT8AvgOrderByAggregateInput
    _max?: TTIMEINFOS_HEAT8MaxOrderByAggregateInput
    _min?: TTIMEINFOS_HEAT8MinOrderByAggregateInput
    _sum?: TTIMEINFOS_HEAT8SumOrderByAggregateInput
  }

  export type TTIMEINFOS_HEAT8ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT8ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMEINFOS_HEAT8ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT8ScalarWhereWithAggregatesInput>
    C_NUM?: IntWithAggregatesFilter | number
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TIME?: IntNullableWithAggregatesFilter | number | null
    C_PENALTY?: IntNullableWithAggregatesFilter | number | null
    C_INTER1?: IntNullableWithAggregatesFilter | number | null
    C_INTER2?: IntNullableWithAggregatesFilter | number | null
    C_INTER3?: IntNullableWithAggregatesFilter | number | null
    C_INTER4?: IntNullableWithAggregatesFilter | number | null
    C_INTER5?: IntNullableWithAggregatesFilter | number | null
    C_INTER6?: IntNullableWithAggregatesFilter | number | null
    C_INTER7?: IntNullableWithAggregatesFilter | number | null
    C_INTER8?: IntNullableWithAggregatesFilter | number | null
    C_INTER9?: IntNullableWithAggregatesFilter | number | null
    C_SPEED1?: IntNullableWithAggregatesFilter | number | null
    C_SPEED2?: IntNullableWithAggregatesFilter | number | null
    C_SPEED3?: IntNullableWithAggregatesFilter | number | null
    C_SPEED4?: IntNullableWithAggregatesFilter | number | null
    C_SPEED5?: IntNullableWithAggregatesFilter | number | null
    C_SPEED6?: IntNullableWithAggregatesFilter | number | null
    C_SPEED7?: IntNullableWithAggregatesFilter | number | null
    C_SPEED8?: IntNullableWithAggregatesFilter | number | null
    C_SPEED9?: IntNullableWithAggregatesFilter | number | null
    C_DATA1?: IntNullableWithAggregatesFilter | number | null
    C_DATA2?: IntNullableWithAggregatesFilter | number | null
    C_DATA3?: IntNullableWithAggregatesFilter | number | null
    C_DATA4?: IntNullableWithAggregatesFilter | number | null
    C_DATA5?: IntNullableWithAggregatesFilter | number | null
    C_DATA6?: IntNullableWithAggregatesFilter | number | null
    C_DATA7?: IntNullableWithAggregatesFilter | number | null
    C_DATA8?: IntNullableWithAggregatesFilter | number | null
    C_REASON?: StringNullableWithAggregatesFilter | string | null
  }

  export type TTIMEINFOS_HEAT9WhereInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT9WhereInput>
    OR?: Enumerable<TTIMEINFOS_HEAT9WhereInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT9WhereInput>
    C_NUM?: IntFilter | number
    C_STATUS?: IntNullableFilter | number | null
    C_TIME?: IntNullableFilter | number | null
    C_PENALTY?: IntNullableFilter | number | null
    C_INTER1?: IntNullableFilter | number | null
    C_INTER2?: IntNullableFilter | number | null
    C_INTER3?: IntNullableFilter | number | null
    C_INTER4?: IntNullableFilter | number | null
    C_INTER5?: IntNullableFilter | number | null
    C_INTER6?: IntNullableFilter | number | null
    C_INTER7?: IntNullableFilter | number | null
    C_INTER8?: IntNullableFilter | number | null
    C_INTER9?: IntNullableFilter | number | null
    C_SPEED1?: IntNullableFilter | number | null
    C_SPEED2?: IntNullableFilter | number | null
    C_SPEED3?: IntNullableFilter | number | null
    C_SPEED4?: IntNullableFilter | number | null
    C_SPEED5?: IntNullableFilter | number | null
    C_SPEED6?: IntNullableFilter | number | null
    C_SPEED7?: IntNullableFilter | number | null
    C_SPEED8?: IntNullableFilter | number | null
    C_SPEED9?: IntNullableFilter | number | null
    C_DATA1?: IntNullableFilter | number | null
    C_DATA2?: IntNullableFilter | number | null
    C_DATA3?: IntNullableFilter | number | null
    C_DATA4?: IntNullableFilter | number | null
    C_DATA5?: IntNullableFilter | number | null
    C_DATA6?: IntNullableFilter | number | null
    C_DATA7?: IntNullableFilter | number | null
    C_DATA8?: IntNullableFilter | number | null
    C_REASON?: StringNullableFilter | string | null
  }

  export type TTIMEINFOS_HEAT9OrderByWithRelationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT9WhereUniqueInput = {
    C_NUM?: number
  }

  export type TTIMEINFOS_HEAT9OrderByWithAggregationInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
    _count?: TTIMEINFOS_HEAT9CountOrderByAggregateInput
    _avg?: TTIMEINFOS_HEAT9AvgOrderByAggregateInput
    _max?: TTIMEINFOS_HEAT9MaxOrderByAggregateInput
    _min?: TTIMEINFOS_HEAT9MinOrderByAggregateInput
    _sum?: TTIMEINFOS_HEAT9SumOrderByAggregateInput
  }

  export type TTIMEINFOS_HEAT9ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMEINFOS_HEAT9ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMEINFOS_HEAT9ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMEINFOS_HEAT9ScalarWhereWithAggregatesInput>
    C_NUM?: IntWithAggregatesFilter | number
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_TIME?: IntNullableWithAggregatesFilter | number | null
    C_PENALTY?: IntNullableWithAggregatesFilter | number | null
    C_INTER1?: IntNullableWithAggregatesFilter | number | null
    C_INTER2?: IntNullableWithAggregatesFilter | number | null
    C_INTER3?: IntNullableWithAggregatesFilter | number | null
    C_INTER4?: IntNullableWithAggregatesFilter | number | null
    C_INTER5?: IntNullableWithAggregatesFilter | number | null
    C_INTER6?: IntNullableWithAggregatesFilter | number | null
    C_INTER7?: IntNullableWithAggregatesFilter | number | null
    C_INTER8?: IntNullableWithAggregatesFilter | number | null
    C_INTER9?: IntNullableWithAggregatesFilter | number | null
    C_SPEED1?: IntNullableWithAggregatesFilter | number | null
    C_SPEED2?: IntNullableWithAggregatesFilter | number | null
    C_SPEED3?: IntNullableWithAggregatesFilter | number | null
    C_SPEED4?: IntNullableWithAggregatesFilter | number | null
    C_SPEED5?: IntNullableWithAggregatesFilter | number | null
    C_SPEED6?: IntNullableWithAggregatesFilter | number | null
    C_SPEED7?: IntNullableWithAggregatesFilter | number | null
    C_SPEED8?: IntNullableWithAggregatesFilter | number | null
    C_SPEED9?: IntNullableWithAggregatesFilter | number | null
    C_DATA1?: IntNullableWithAggregatesFilter | number | null
    C_DATA2?: IntNullableWithAggregatesFilter | number | null
    C_DATA3?: IntNullableWithAggregatesFilter | number | null
    C_DATA4?: IntNullableWithAggregatesFilter | number | null
    C_DATA5?: IntNullableWithAggregatesFilter | number | null
    C_DATA6?: IntNullableWithAggregatesFilter | number | null
    C_DATA7?: IntNullableWithAggregatesFilter | number | null
    C_DATA8?: IntNullableWithAggregatesFilter | number | null
    C_REASON?: StringNullableWithAggregatesFilter | string | null
  }

  export type TTIMERECORDS_HEAT1_FINISHWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT1_FINISHWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT1_FINISHWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT1_FINISHWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT1_FINISHOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_FINISHWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT1_FINISHOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT1_FINISHCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT1_FINISHAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT1_FINISHMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT1_FINISHMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT1_FINISHSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT1_FINISHScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT1_FINISHScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT1_FINISHScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT1_FINISHScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT1_INTER1WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT1_INTER1WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT1_INTER1WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT1_INTER1WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT1_INTER1OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_INTER1WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT1_INTER1OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT1_INTER1CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT1_INTER1AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT1_INTER1MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT1_INTER1MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT1_INTER1SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT1_INTER1ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT1_INTER1ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT1_INTER1ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT1_INTER1ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT1_INTER2WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT1_INTER2WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT1_INTER2WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT1_INTER2WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT1_INTER2OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_INTER2WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT1_INTER2OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT1_INTER2CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT1_INTER2AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT1_INTER2MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT1_INTER2MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT1_INTER2SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT1_INTER2ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT1_INTER2ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT1_INTER2ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT1_INTER2ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT1_STARTWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT1_STARTWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT1_STARTWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT1_STARTWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT1_STARTOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_STARTWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT1_STARTOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT1_STARTCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT1_STARTAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT1_STARTMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT1_STARTMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT1_STARTSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT1_STARTScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT1_STARTScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT1_STARTScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT1_STARTScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT2_FINISHWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT2_FINISHWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT2_FINISHWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT2_FINISHWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT2_FINISHOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_FINISHWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT2_FINISHOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT2_FINISHCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT2_FINISHAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT2_FINISHMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT2_FINISHMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT2_FINISHSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT2_FINISHScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT2_FINISHScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT2_FINISHScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT2_FINISHScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT2_INTER1WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT2_INTER1WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT2_INTER1WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT2_INTER1WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT2_INTER1OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_INTER1WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT2_INTER1OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT2_INTER1CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT2_INTER1AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT2_INTER1MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT2_INTER1MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT2_INTER1SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT2_INTER1ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT2_INTER1ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT2_INTER1ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT2_INTER1ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT2_INTER2WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT2_INTER2WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT2_INTER2WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT2_INTER2WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT2_INTER2OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_INTER2WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT2_INTER2OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT2_INTER2CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT2_INTER2AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT2_INTER2MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT2_INTER2MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT2_INTER2SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT2_INTER2ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT2_INTER2ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT2_INTER2ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT2_INTER2ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT2_STARTWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT2_STARTWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT2_STARTWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT2_STARTWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT2_STARTOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_STARTWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT2_STARTOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT2_STARTCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT2_STARTAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT2_STARTMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT2_STARTMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT2_STARTSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT2_STARTScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT2_STARTScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT2_STARTScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT2_STARTScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT3_FINISHWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT3_FINISHWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT3_FINISHWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT3_FINISHWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT3_FINISHOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_FINISHWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT3_FINISHOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT3_FINISHCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT3_FINISHAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT3_FINISHMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT3_FINISHMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT3_FINISHSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT3_FINISHScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT3_FINISHScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT3_FINISHScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT3_FINISHScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT3_INTER1WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT3_INTER1WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT3_INTER1WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT3_INTER1WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT3_INTER1OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_INTER1WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT3_INTER1OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT3_INTER1CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT3_INTER1AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT3_INTER1MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT3_INTER1MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT3_INTER1SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT3_INTER1ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT3_INTER1ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT3_INTER1ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT3_INTER1ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT3_INTER2WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT3_INTER2WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT3_INTER2WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT3_INTER2WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT3_INTER2OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_INTER2WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT3_INTER2OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT3_INTER2CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT3_INTER2AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT3_INTER2MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT3_INTER2MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT3_INTER2SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT3_INTER2ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT3_INTER2ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT3_INTER2ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT3_INTER2ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT3_STARTWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT3_STARTWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT3_STARTWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT3_STARTWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT3_STARTOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_STARTWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT3_STARTOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT3_STARTCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT3_STARTAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT3_STARTMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT3_STARTMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT3_STARTSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT3_STARTScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT3_STARTScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT3_STARTScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT3_STARTScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT4_FINISHWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT4_FINISHWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT4_FINISHWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT4_FINISHWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT4_FINISHOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_FINISHWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT4_FINISHOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT4_FINISHCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT4_FINISHAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT4_FINISHMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT4_FINISHMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT4_FINISHSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT4_FINISHScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT4_FINISHScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT4_FINISHScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT4_FINISHScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT4_INTER1WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT4_INTER1WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT4_INTER1WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT4_INTER1WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT4_INTER1OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_INTER1WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT4_INTER1OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT4_INTER1CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT4_INTER1AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT4_INTER1MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT4_INTER1MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT4_INTER1SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT4_INTER1ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT4_INTER1ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT4_INTER1ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT4_INTER1ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT4_INTER2WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT4_INTER2WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT4_INTER2WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT4_INTER2WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT4_INTER2OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_INTER2WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT4_INTER2OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT4_INTER2CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT4_INTER2AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT4_INTER2MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT4_INTER2MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT4_INTER2SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT4_INTER2ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT4_INTER2ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT4_INTER2ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT4_INTER2ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT4_STARTWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT4_STARTWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT4_STARTWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT4_STARTWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT4_STARTOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_STARTWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT4_STARTOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT4_STARTCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT4_STARTAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT4_STARTMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT4_STARTMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT4_STARTSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT4_STARTScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT4_STARTScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT4_STARTScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT4_STARTScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT5_FINISHWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT5_FINISHWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT5_FINISHWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT5_FINISHWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT5_FINISHOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_FINISHWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT5_FINISHOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT5_FINISHCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT5_FINISHAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT5_FINISHMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT5_FINISHMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT5_FINISHSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT5_FINISHScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT5_FINISHScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT5_FINISHScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT5_FINISHScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT5_INTER1WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT5_INTER1WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT5_INTER1WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT5_INTER1WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT5_INTER1OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_INTER1WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT5_INTER1OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT5_INTER1CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT5_INTER1AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT5_INTER1MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT5_INTER1MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT5_INTER1SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT5_INTER1ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT5_INTER1ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT5_INTER1ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT5_INTER1ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT5_INTER2WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT5_INTER2WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT5_INTER2WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT5_INTER2WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT5_INTER2OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_INTER2WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT5_INTER2OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT5_INTER2CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT5_INTER2AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT5_INTER2MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT5_INTER2MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT5_INTER2SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT5_INTER2ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT5_INTER2ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT5_INTER2ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT5_INTER2ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT5_STARTWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT5_STARTWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT5_STARTWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT5_STARTWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT5_STARTOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_STARTWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT5_STARTOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT5_STARTCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT5_STARTAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT5_STARTMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT5_STARTMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT5_STARTSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT5_STARTScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT5_STARTScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT5_STARTScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT5_STARTScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT6_FINISHWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT6_FINISHWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT6_FINISHWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT6_FINISHWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT6_FINISHOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_FINISHWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT6_FINISHOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT6_FINISHCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT6_FINISHAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT6_FINISHMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT6_FINISHMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT6_FINISHSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT6_FINISHScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT6_FINISHScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT6_FINISHScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT6_FINISHScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT6_INTER1WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT6_INTER1WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT6_INTER1WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT6_INTER1WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT6_INTER1OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_INTER1WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT6_INTER1OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT6_INTER1CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT6_INTER1AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT6_INTER1MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT6_INTER1MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT6_INTER1SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT6_INTER1ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT6_INTER1ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT6_INTER1ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT6_INTER1ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT6_INTER2WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT6_INTER2WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT6_INTER2WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT6_INTER2WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT6_INTER2OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_INTER2WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT6_INTER2OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT6_INTER2CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT6_INTER2AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT6_INTER2MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT6_INTER2MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT6_INTER2SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT6_INTER2ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT6_INTER2ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT6_INTER2ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT6_INTER2ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT6_STARTWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT6_STARTWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT6_STARTWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT6_STARTWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT6_STARTOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_STARTWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT6_STARTOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT6_STARTCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT6_STARTAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT6_STARTMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT6_STARTMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT6_STARTSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT6_STARTScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT6_STARTScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT6_STARTScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT6_STARTScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT7_FINISHWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT7_FINISHWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT7_FINISHWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT7_FINISHWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT7_FINISHOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_FINISHWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT7_FINISHOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT7_FINISHCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT7_FINISHAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT7_FINISHMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT7_FINISHMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT7_FINISHSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT7_FINISHScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT7_FINISHScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT7_FINISHScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT7_FINISHScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT7_INTER1WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT7_INTER1WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT7_INTER1WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT7_INTER1WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT7_INTER1OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_INTER1WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT7_INTER1OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT7_INTER1CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT7_INTER1AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT7_INTER1MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT7_INTER1MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT7_INTER1SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT7_INTER1ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT7_INTER1ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT7_INTER1ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT7_INTER1ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT7_INTER2WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT7_INTER2WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT7_INTER2WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT7_INTER2WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT7_INTER2OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_INTER2WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT7_INTER2OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT7_INTER2CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT7_INTER2AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT7_INTER2MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT7_INTER2MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT7_INTER2SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT7_INTER2ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT7_INTER2ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT7_INTER2ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT7_INTER2ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT7_STARTWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT7_STARTWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT7_STARTWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT7_STARTWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT7_STARTOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_STARTWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT7_STARTOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT7_STARTCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT7_STARTAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT7_STARTMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT7_STARTMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT7_STARTSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT7_STARTScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT7_STARTScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT7_STARTScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT7_STARTScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT8_FINISHWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT8_FINISHWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT8_FINISHWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT8_FINISHWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT8_FINISHOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_FINISHWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT8_FINISHOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT8_FINISHCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT8_FINISHAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT8_FINISHMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT8_FINISHMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT8_FINISHSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT8_FINISHScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT8_FINISHScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT8_FINISHScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT8_FINISHScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT8_INTER1WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT8_INTER1WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT8_INTER1WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT8_INTER1WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT8_INTER1OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_INTER1WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT8_INTER1OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT8_INTER1CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT8_INTER1AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT8_INTER1MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT8_INTER1MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT8_INTER1SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT8_INTER1ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT8_INTER1ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT8_INTER1ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT8_INTER1ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT8_INTER2WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT8_INTER2WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT8_INTER2WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT8_INTER2WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT8_INTER2OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_INTER2WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT8_INTER2OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT8_INTER2CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT8_INTER2AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT8_INTER2MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT8_INTER2MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT8_INTER2SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT8_INTER2ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT8_INTER2ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT8_INTER2ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT8_INTER2ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT8_STARTWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT8_STARTWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT8_STARTWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT8_STARTWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT8_STARTOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_STARTWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT8_STARTOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT8_STARTCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT8_STARTAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT8_STARTMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT8_STARTMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT8_STARTSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT8_STARTScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT8_STARTScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT8_STARTScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT8_STARTScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT9_FINISHWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT9_FINISHWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT9_FINISHWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT9_FINISHWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT9_FINISHOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_FINISHWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT9_FINISHOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT9_FINISHCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT9_FINISHAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT9_FINISHMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT9_FINISHMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT9_FINISHSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT9_FINISHScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT9_FINISHScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT9_FINISHScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT9_FINISHScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT9_INTER1WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT9_INTER1WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT9_INTER1WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT9_INTER1WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT9_INTER1OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_INTER1WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT9_INTER1OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT9_INTER1CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT9_INTER1AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT9_INTER1MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT9_INTER1MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT9_INTER1SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT9_INTER1ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT9_INTER1ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT9_INTER1ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT9_INTER1ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT9_INTER2WhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT9_INTER2WhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT9_INTER2WhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT9_INTER2WhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT9_INTER2OrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_INTER2WhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT9_INTER2OrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT9_INTER2CountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT9_INTER2AvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT9_INTER2MaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT9_INTER2MinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT9_INTER2SumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT9_INTER2ScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT9_INTER2ScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT9_INTER2ScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT9_INTER2ScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TTIMERECORDS_HEAT9_STARTWhereInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT9_STARTWhereInput>
    OR?: Enumerable<TTIMERECORDS_HEAT9_STARTWhereInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT9_STARTWhereInput>
    C_LINE?: IntFilter | number
    C_NUM?: IntNullableFilter | number | null
    C_STATUS?: IntNullableFilter | number | null
    C_HOUR1?: StringNullableFilter | string | null
    C_HOUR2?: StringNullableFilter | string | null
    C_SPEED?: IntNullableFilter | number | null
    C_LAP?: IntNullableFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableFilter | number | null
    C_INFO1?: IntNullableFilter | number | null
    C_INFO2?: IntNullableFilter | number | null
  }

  export type TTIMERECORDS_HEAT9_STARTOrderByWithRelationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_STARTWhereUniqueInput = {
    C_LINE?: number
  }

  export type TTIMERECORDS_HEAT9_STARTOrderByWithAggregationInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
    _count?: TTIMERECORDS_HEAT9_STARTCountOrderByAggregateInput
    _avg?: TTIMERECORDS_HEAT9_STARTAvgOrderByAggregateInput
    _max?: TTIMERECORDS_HEAT9_STARTMaxOrderByAggregateInput
    _min?: TTIMERECORDS_HEAT9_STARTMinOrderByAggregateInput
    _sum?: TTIMERECORDS_HEAT9_STARTSumOrderByAggregateInput
  }

  export type TTIMERECORDS_HEAT9_STARTScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TTIMERECORDS_HEAT9_STARTScalarWhereWithAggregatesInput>
    OR?: Enumerable<TTIMERECORDS_HEAT9_STARTScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TTIMERECORDS_HEAT9_STARTScalarWhereWithAggregatesInput>
    C_LINE?: IntWithAggregatesFilter | number
    C_NUM?: IntNullableWithAggregatesFilter | number | null
    C_STATUS?: IntNullableWithAggregatesFilter | number | null
    C_HOUR1?: StringNullableWithAggregatesFilter | string | null
    C_HOUR2?: StringNullableWithAggregatesFilter | string | null
    C_SPEED?: IntNullableWithAggregatesFilter | number | null
    C_LAP?: IntNullableWithAggregatesFilter | number | null
    C_TRANSPONDER_NUM?: StringNullableWithAggregatesFilter | string | null
    C_TRANSPONDER_INFOS?: IntNullableWithAggregatesFilter | number | null
    C_INFO1?: IntNullableWithAggregatesFilter | number | null
    C_INFO2?: IntNullableWithAggregatesFilter | number | null
  }

  export type TKEYVALUESCreateInput = {
    TABLENAME: string
    KEYVALUE: number
  }

  export type TKEYVALUESUncheckedCreateInput = {
    TABLENAME: string
    KEYVALUE: number
  }

  export type TKEYVALUESUpdateInput = {
    TABLENAME?: StringFieldUpdateOperationsInput | string
    KEYVALUE?: IntFieldUpdateOperationsInput | number
  }

  export type TKEYVALUESUncheckedUpdateInput = {
    TABLENAME?: StringFieldUpdateOperationsInput | string
    KEYVALUE?: IntFieldUpdateOperationsInput | number
  }

  export type TKEYVALUESUpdateManyMutationInput = {
    TABLENAME?: StringFieldUpdateOperationsInput | string
    KEYVALUE?: IntFieldUpdateOperationsInput | number
  }

  export type TKEYVALUESUncheckedUpdateManyInput = {
    TABLENAME?: StringFieldUpdateOperationsInput | string
    KEYVALUE?: IntFieldUpdateOperationsInput | number
  }

  export type TUPDATEVALUESCreateInput = {
    TABLENAME: string
    UPDATEVALUE: number
  }

  export type TUPDATEVALUESUncheckedCreateInput = {
    TABLENAME: string
    UPDATEVALUE: number
  }

  export type TUPDATEVALUESUpdateInput = {
    TABLENAME?: StringFieldUpdateOperationsInput | string
    UPDATEVALUE?: IntFieldUpdateOperationsInput | number
  }

  export type TUPDATEVALUESUncheckedUpdateInput = {
    TABLENAME?: StringFieldUpdateOperationsInput | string
    UPDATEVALUE?: IntFieldUpdateOperationsInput | number
  }

  export type TUPDATEVALUESUpdateManyMutationInput = {
    TABLENAME?: StringFieldUpdateOperationsInput | string
    UPDATEVALUE?: IntFieldUpdateOperationsInput | number
  }

  export type TUPDATEVALUESUncheckedUpdateManyInput = {
    TABLENAME?: StringFieldUpdateOperationsInput | string
    UPDATEVALUE?: IntFieldUpdateOperationsInput | number
  }

  export type TCHRONOMESSAGES_HEAT1CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT1UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT1UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT1UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT1UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT1UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT2CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT2UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT2UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT2UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT2UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT2UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT3CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT3UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT3UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT3UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT3UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT3UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT4CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT4UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT4UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT4UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT4UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT4UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT5CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT5UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT5UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT5UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT5UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT5UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT6CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT6UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT6UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT6UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT6UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT6UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT7CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT7UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT7UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT7UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT7UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT7UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT8CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT8UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT8UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT8UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT8UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT8UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT9CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT9UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_TRANSPONDER?: string | null
    C_CANAL?: string | null
    C_MESSAGE?: string | null
  }

  export type TCHRONOMESSAGES_HEAT9UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT9UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT9UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TCHRONOMESSAGES_HEAT9UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER?: NullableStringFieldUpdateOperationsInput | string | null
    C_CANAL?: NullableStringFieldUpdateOperationsInput | string | null
    C_MESSAGE?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TSTARTLIST_HEAT1CreateInput = {
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT1UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT1UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT1UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT1UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT1UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT2CreateInput = {
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT2UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT2UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT2UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT2UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT2UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT3CreateInput = {
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT3UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT3UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT3UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT3UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT3UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT4CreateInput = {
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT4UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT4UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT4UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT4UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT4UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT5CreateInput = {
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT5UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT5UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT5UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT5UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT5UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT6CreateInput = {
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT6UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT6UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT6UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT6UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT6UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT7CreateInput = {
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT7UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT7UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT7UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT7UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT7UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT8CreateInput = {
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT8UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT8UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT8UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT8UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT8UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT9CreateInput = {
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT9UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_START?: number | null
  }

  export type TSTARTLIST_HEAT9UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT9UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT9UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TSTARTLIST_HEAT9UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_START?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMEINFOS_HEAT1CreateInput = {
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT1UncheckedCreateInput = {
    C_NUM?: number
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT1UpdateInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT1UncheckedUpdateInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT1UpdateManyMutationInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT1UncheckedUpdateManyInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT2CreateInput = {
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT2UncheckedCreateInput = {
    C_NUM?: number
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT2UpdateInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT2UncheckedUpdateInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT2UpdateManyMutationInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT2UncheckedUpdateManyInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT3CreateInput = {
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT3UncheckedCreateInput = {
    C_NUM?: number
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT3UpdateInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT3UncheckedUpdateInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT3UpdateManyMutationInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT3UncheckedUpdateManyInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT4CreateInput = {
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT4UncheckedCreateInput = {
    C_NUM?: number
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT4UpdateInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT4UncheckedUpdateInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT4UpdateManyMutationInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT4UncheckedUpdateManyInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT5CreateInput = {
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT5UncheckedCreateInput = {
    C_NUM?: number
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT5UpdateInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT5UncheckedUpdateInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT5UpdateManyMutationInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT5UncheckedUpdateManyInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT6CreateInput = {
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT6UncheckedCreateInput = {
    C_NUM?: number
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT6UpdateInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT6UncheckedUpdateInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT6UpdateManyMutationInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT6UncheckedUpdateManyInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT7CreateInput = {
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT7UncheckedCreateInput = {
    C_NUM?: number
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT7UpdateInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT7UncheckedUpdateInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT7UpdateManyMutationInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT7UncheckedUpdateManyInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT8CreateInput = {
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT8UncheckedCreateInput = {
    C_NUM?: number
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT8UpdateInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT8UncheckedUpdateInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT8UpdateManyMutationInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT8UncheckedUpdateManyInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT9CreateInput = {
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT9UncheckedCreateInput = {
    C_NUM?: number
    C_STATUS?: number | null
    C_TIME?: number | null
    C_PENALTY?: number | null
    C_INTER1?: number | null
    C_INTER2?: number | null
    C_INTER3?: number | null
    C_INTER4?: number | null
    C_INTER5?: number | null
    C_INTER6?: number | null
    C_INTER7?: number | null
    C_INTER8?: number | null
    C_INTER9?: number | null
    C_SPEED1?: number | null
    C_SPEED2?: number | null
    C_SPEED3?: number | null
    C_SPEED4?: number | null
    C_SPEED5?: number | null
    C_SPEED6?: number | null
    C_SPEED7?: number | null
    C_SPEED8?: number | null
    C_SPEED9?: number | null
    C_DATA1?: number | null
    C_DATA2?: number | null
    C_DATA3?: number | null
    C_DATA4?: number | null
    C_DATA5?: number | null
    C_DATA6?: number | null
    C_DATA7?: number | null
    C_DATA8?: number | null
    C_REASON?: string | null
  }

  export type TTIMEINFOS_HEAT9UpdateInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT9UncheckedUpdateInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT9UpdateManyMutationInput = {
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMEINFOS_HEAT9UncheckedUpdateManyInput = {
    C_NUM?: IntFieldUpdateOperationsInput | number
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_TIME?: NullableIntFieldUpdateOperationsInput | number | null
    C_PENALTY?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER2?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER3?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER4?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER5?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER6?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER7?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER8?: NullableIntFieldUpdateOperationsInput | number | null
    C_INTER9?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED1?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED2?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED3?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED4?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED5?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED6?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED7?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED8?: NullableIntFieldUpdateOperationsInput | number | null
    C_SPEED9?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA1?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA2?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA3?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA4?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA5?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA6?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA7?: NullableIntFieldUpdateOperationsInput | number | null
    C_DATA8?: NullableIntFieldUpdateOperationsInput | number | null
    C_REASON?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TTIMERECORDS_HEAT1_FINISHCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT1_FINISHUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT1_FINISHUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT1_FINISHUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT1_FINISHUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT1_FINISHUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT1_INTER1CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT1_INTER1UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT1_INTER1UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT1_INTER1UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT1_INTER1UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT1_INTER1UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT1_INTER2CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT1_INTER2UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT1_INTER2UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT1_INTER2UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT1_INTER2UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT1_INTER2UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT1_STARTCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT1_STARTUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT1_STARTUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT1_STARTUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT1_STARTUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT1_STARTUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT2_FINISHCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT2_FINISHUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT2_FINISHUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT2_FINISHUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT2_FINISHUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT2_FINISHUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT2_INTER1CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT2_INTER1UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT2_INTER1UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT2_INTER1UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT2_INTER1UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT2_INTER1UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT2_INTER2CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT2_INTER2UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT2_INTER2UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT2_INTER2UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT2_INTER2UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT2_INTER2UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT2_STARTCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT2_STARTUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT2_STARTUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT2_STARTUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT2_STARTUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT2_STARTUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT3_FINISHCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT3_FINISHUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT3_FINISHUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT3_FINISHUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT3_FINISHUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT3_FINISHUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT3_INTER1CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT3_INTER1UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT3_INTER1UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT3_INTER1UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT3_INTER1UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT3_INTER1UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT3_INTER2CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT3_INTER2UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT3_INTER2UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT3_INTER2UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT3_INTER2UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT3_INTER2UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT3_STARTCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT3_STARTUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT3_STARTUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT3_STARTUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT3_STARTUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT3_STARTUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT4_FINISHCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT4_FINISHUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT4_FINISHUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT4_FINISHUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT4_FINISHUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT4_FINISHUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT4_INTER1CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT4_INTER1UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT4_INTER1UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT4_INTER1UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT4_INTER1UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT4_INTER1UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT4_INTER2CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT4_INTER2UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT4_INTER2UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT4_INTER2UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT4_INTER2UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT4_INTER2UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT4_STARTCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT4_STARTUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT4_STARTUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT4_STARTUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT4_STARTUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT4_STARTUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT5_FINISHCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT5_FINISHUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT5_FINISHUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT5_FINISHUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT5_FINISHUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT5_FINISHUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT5_INTER1CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT5_INTER1UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT5_INTER1UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT5_INTER1UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT5_INTER1UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT5_INTER1UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT5_INTER2CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT5_INTER2UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT5_INTER2UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT5_INTER2UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT5_INTER2UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT5_INTER2UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT5_STARTCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT5_STARTUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT5_STARTUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT5_STARTUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT5_STARTUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT5_STARTUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT6_FINISHCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT6_FINISHUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT6_FINISHUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT6_FINISHUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT6_FINISHUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT6_FINISHUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT6_INTER1CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT6_INTER1UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT6_INTER1UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT6_INTER1UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT6_INTER1UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT6_INTER1UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT6_INTER2CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT6_INTER2UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT6_INTER2UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT6_INTER2UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT6_INTER2UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT6_INTER2UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT6_STARTCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT6_STARTUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT6_STARTUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT6_STARTUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT6_STARTUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT6_STARTUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT7_FINISHCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT7_FINISHUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT7_FINISHUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT7_FINISHUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT7_FINISHUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT7_FINISHUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT7_INTER1CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT7_INTER1UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT7_INTER1UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT7_INTER1UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT7_INTER1UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT7_INTER1UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT7_INTER2CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT7_INTER2UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT7_INTER2UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT7_INTER2UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT7_INTER2UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT7_INTER2UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT7_STARTCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT7_STARTUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT7_STARTUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT7_STARTUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT7_STARTUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT7_STARTUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT8_FINISHCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT8_FINISHUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT8_FINISHUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT8_FINISHUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT8_FINISHUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT8_FINISHUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT8_INTER1CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT8_INTER1UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT8_INTER1UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT8_INTER1UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT8_INTER1UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT8_INTER1UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT8_INTER2CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT8_INTER2UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT8_INTER2UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT8_INTER2UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT8_INTER2UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT8_INTER2UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT8_STARTCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT8_STARTUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT8_STARTUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT8_STARTUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT8_STARTUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT8_STARTUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT9_FINISHCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT9_FINISHUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT9_FINISHUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT9_FINISHUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT9_FINISHUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT9_FINISHUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT9_INTER1CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT9_INTER1UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT9_INTER1UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT9_INTER1UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT9_INTER1UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT9_INTER1UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT9_INTER2CreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT9_INTER2UncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT9_INTER2UpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT9_INTER2UncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT9_INTER2UpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT9_INTER2UncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT9_STARTCreateInput = {
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT9_STARTUncheckedCreateInput = {
    C_LINE?: number
    C_NUM?: number | null
    C_STATUS?: number | null
    C_HOUR1?: string | null
    C_HOUR2?: string | null
    C_SPEED?: number | null
    C_LAP?: number | null
    C_TRANSPONDER_NUM?: string | null
    C_TRANSPONDER_INFOS?: number | null
    C_INFO1?: number | null
    C_INFO2?: number | null
  }

  export type TTIMERECORDS_HEAT9_STARTUpdateInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT9_STARTUncheckedUpdateInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT9_STARTUpdateManyMutationInput = {
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TTIMERECORDS_HEAT9_STARTUncheckedUpdateManyInput = {
    C_LINE?: IntFieldUpdateOperationsInput | number
    C_NUM?: NullableIntFieldUpdateOperationsInput | number | null
    C_STATUS?: NullableIntFieldUpdateOperationsInput | number | null
    C_HOUR1?: NullableStringFieldUpdateOperationsInput | string | null
    C_HOUR2?: NullableStringFieldUpdateOperationsInput | string | null
    C_SPEED?: NullableIntFieldUpdateOperationsInput | number | null
    C_LAP?: NullableIntFieldUpdateOperationsInput | number | null
    C_TRANSPONDER_NUM?: NullableStringFieldUpdateOperationsInput | string | null
    C_TRANSPONDER_INFOS?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO1?: NullableIntFieldUpdateOperationsInput | number | null
    C_INFO2?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringFilter | string
  }

  export type IntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type TKEYVALUESCountOrderByAggregateInput = {
    TABLENAME?: SortOrder
    KEYVALUE?: SortOrder
  }

  export type TKEYVALUESAvgOrderByAggregateInput = {
    KEYVALUE?: SortOrder
  }

  export type TKEYVALUESMaxOrderByAggregateInput = {
    TABLENAME?: SortOrder
    KEYVALUE?: SortOrder
  }

  export type TKEYVALUESMinOrderByAggregateInput = {
    TABLENAME?: SortOrder
    KEYVALUE?: SortOrder
  }

  export type TKEYVALUESSumOrderByAggregateInput = {
    KEYVALUE?: SortOrder
  }

  export type StringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type IntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type TUPDATEVALUESCountOrderByAggregateInput = {
    TABLENAME?: SortOrder
    UPDATEVALUE?: SortOrder
  }

  export type TUPDATEVALUESAvgOrderByAggregateInput = {
    UPDATEVALUE?: SortOrder
  }

  export type TUPDATEVALUESMaxOrderByAggregateInput = {
    TABLENAME?: SortOrder
    UPDATEVALUE?: SortOrder
  }

  export type TUPDATEVALUESMinOrderByAggregateInput = {
    TABLENAME?: SortOrder
    UPDATEVALUE?: SortOrder
  }

  export type TUPDATEVALUESSumOrderByAggregateInput = {
    UPDATEVALUE?: SortOrder
  }

  export type IntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type StringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableFilter | string | null
  }

  export type TCHRONOMESSAGES_HEAT1CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT1AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT1MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT1MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT1SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type IntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type StringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type TCHRONOMESSAGES_HEAT2CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT2AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT2MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT2MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT2SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT3CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT3AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT3MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT3MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT3SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT4CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT4AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT4MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT4MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT4SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT5CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT5AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT5MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT5MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT5SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT6CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT6AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT6MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT6MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT6SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT7CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT7AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT7MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT7MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT7SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT8CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT8AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT8MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT8MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT8SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT9CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT9AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT9MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT9MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TRANSPONDER?: SortOrder
    C_CANAL?: SortOrder
    C_MESSAGE?: SortOrder
  }

  export type TCHRONOMESSAGES_HEAT9SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
  }

  export type TSTARTLIST_HEAT1CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT1AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT1MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT1MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT1SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT2CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT2AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT2MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT2MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT2SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT3CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT3AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT3MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT3MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT3SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT4CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT4AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT4MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT4MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT4SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT5CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT5AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT5MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT5MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT5SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT6CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT6AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT6MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT6MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT6SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT7CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT7AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT7MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT7MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT7SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT8CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT8AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT8MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT8MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT8SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT9CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT9AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT9MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT9MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TSTARTLIST_HEAT9SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_START?: SortOrder
  }

  export type TTIMEINFOS_HEAT1CountOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT1AvgOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMEINFOS_HEAT1MaxOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT1MinOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT1SumOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMEINFOS_HEAT2CountOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT2AvgOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMEINFOS_HEAT2MaxOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT2MinOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT2SumOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMEINFOS_HEAT3CountOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT3AvgOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMEINFOS_HEAT3MaxOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT3MinOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT3SumOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMEINFOS_HEAT4CountOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT4AvgOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMEINFOS_HEAT4MaxOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT4MinOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT4SumOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMEINFOS_HEAT5CountOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT5AvgOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMEINFOS_HEAT5MaxOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT5MinOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT5SumOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMEINFOS_HEAT6CountOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT6AvgOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMEINFOS_HEAT6MaxOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT6MinOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT6SumOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMEINFOS_HEAT7CountOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT7AvgOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMEINFOS_HEAT7MaxOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT7MinOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT7SumOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMEINFOS_HEAT8CountOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT8AvgOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMEINFOS_HEAT8MaxOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT8MinOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT8SumOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMEINFOS_HEAT9CountOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT9AvgOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMEINFOS_HEAT9MaxOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT9MinOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
    C_REASON?: SortOrder
  }

  export type TTIMEINFOS_HEAT9SumOrderByAggregateInput = {
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_TIME?: SortOrder
    C_PENALTY?: SortOrder
    C_INTER1?: SortOrder
    C_INTER2?: SortOrder
    C_INTER3?: SortOrder
    C_INTER4?: SortOrder
    C_INTER5?: SortOrder
    C_INTER6?: SortOrder
    C_INTER7?: SortOrder
    C_INTER8?: SortOrder
    C_INTER9?: SortOrder
    C_SPEED1?: SortOrder
    C_SPEED2?: SortOrder
    C_SPEED3?: SortOrder
    C_SPEED4?: SortOrder
    C_SPEED5?: SortOrder
    C_SPEED6?: SortOrder
    C_SPEED7?: SortOrder
    C_SPEED8?: SortOrder
    C_SPEED9?: SortOrder
    C_DATA1?: SortOrder
    C_DATA2?: SortOrder
    C_DATA3?: SortOrder
    C_DATA4?: SortOrder
    C_DATA5?: SortOrder
    C_DATA6?: SortOrder
    C_DATA7?: SortOrder
    C_DATA8?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_FINISHCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_FINISHAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_FINISHMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_FINISHMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_FINISHSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_INTER1CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_INTER1AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_INTER1MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_INTER1MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_INTER1SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_INTER2CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_INTER2AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_INTER2MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_INTER2MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_INTER2SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_STARTCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_STARTAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_STARTMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_STARTMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT1_STARTSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_FINISHCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_FINISHAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_FINISHMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_FINISHMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_FINISHSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_INTER1CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_INTER1AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_INTER1MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_INTER1MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_INTER1SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_INTER2CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_INTER2AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_INTER2MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_INTER2MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_INTER2SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_STARTCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_STARTAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_STARTMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_STARTMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT2_STARTSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_FINISHCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_FINISHAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_FINISHMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_FINISHMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_FINISHSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_INTER1CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_INTER1AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_INTER1MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_INTER1MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_INTER1SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_INTER2CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_INTER2AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_INTER2MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_INTER2MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_INTER2SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_STARTCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_STARTAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_STARTMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_STARTMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT3_STARTSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_FINISHCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_FINISHAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_FINISHMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_FINISHMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_FINISHSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_INTER1CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_INTER1AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_INTER1MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_INTER1MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_INTER1SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_INTER2CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_INTER2AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_INTER2MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_INTER2MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_INTER2SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_STARTCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_STARTAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_STARTMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_STARTMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT4_STARTSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_FINISHCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_FINISHAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_FINISHMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_FINISHMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_FINISHSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_INTER1CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_INTER1AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_INTER1MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_INTER1MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_INTER1SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_INTER2CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_INTER2AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_INTER2MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_INTER2MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_INTER2SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_STARTCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_STARTAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_STARTMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_STARTMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT5_STARTSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_FINISHCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_FINISHAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_FINISHMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_FINISHMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_FINISHSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_INTER1CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_INTER1AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_INTER1MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_INTER1MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_INTER1SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_INTER2CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_INTER2AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_INTER2MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_INTER2MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_INTER2SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_STARTCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_STARTAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_STARTMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_STARTMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT6_STARTSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_FINISHCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_FINISHAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_FINISHMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_FINISHMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_FINISHSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_INTER1CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_INTER1AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_INTER1MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_INTER1MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_INTER1SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_INTER2CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_INTER2AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_INTER2MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_INTER2MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_INTER2SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_STARTCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_STARTAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_STARTMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_STARTMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT7_STARTSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_FINISHCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_FINISHAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_FINISHMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_FINISHMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_FINISHSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_INTER1CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_INTER1AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_INTER1MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_INTER1MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_INTER1SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_INTER2CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_INTER2AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_INTER2MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_INTER2MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_INTER2SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_STARTCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_STARTAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_STARTMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_STARTMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT8_STARTSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_FINISHCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_FINISHAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_FINISHMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_FINISHMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_FINISHSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_INTER1CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_INTER1AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_INTER1MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_INTER1MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_INTER1SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_INTER2CountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_INTER2AvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_INTER2MaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_INTER2MinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_INTER2SumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_STARTCountOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_STARTAvgOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_STARTMaxOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_STARTMinOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_HOUR1?: SortOrder
    C_HOUR2?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_NUM?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type TTIMERECORDS_HEAT9_STARTSumOrderByAggregateInput = {
    C_LINE?: SortOrder
    C_NUM?: SortOrder
    C_STATUS?: SortOrder
    C_SPEED?: SortOrder
    C_LAP?: SortOrder
    C_TRANSPONDER_INFOS?: SortOrder
    C_INFO1?: SortOrder
    C_INFO2?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NestedStringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringFilter | string
  }

  export type NestedIntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type NestedStringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type NestedIntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type NestedFloatFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatFilter | number
  }

  export type NestedIntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type NestedStringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableFilter | string | null
  }

  export type NestedIntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type NestedFloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type NestedStringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.DMMF.Document;
}